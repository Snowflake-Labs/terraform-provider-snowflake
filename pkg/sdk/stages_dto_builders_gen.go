// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateInternalStageRequest(
	name SchemaObjectIdentifier,
) *CreateInternalStageRequest {
	s := CreateInternalStageRequest{}
	s.name = name
	return &s
}

func (s *CreateInternalStageRequest) WithOrReplace(OrReplace *bool) *CreateInternalStageRequest {
	s.OrReplace = OrReplace
	return s
}

func (s *CreateInternalStageRequest) WithTemporary(Temporary *bool) *CreateInternalStageRequest {
	s.Temporary = Temporary
	return s
}

func (s *CreateInternalStageRequest) WithIfNotExists(IfNotExists *bool) *CreateInternalStageRequest {
	s.IfNotExists = IfNotExists
	return s
}

func (s *CreateInternalStageRequest) WithEncryption(Encryption *InternalStageEncryptionRequest) *CreateInternalStageRequest {
	s.Encryption = Encryption
	return s
}

func (s *CreateInternalStageRequest) WithDirectoryTableOptions(DirectoryTableOptions *InternalDirectoryTableOptionsRequest) *CreateInternalStageRequest {
	s.DirectoryTableOptions = DirectoryTableOptions
	return s
}

func (s *CreateInternalStageRequest) WithFileFormat(FileFormat *StageFileFormatRequest) *CreateInternalStageRequest {
	s.FileFormat = FileFormat
	return s
}

func (s *CreateInternalStageRequest) WithCopyOptions(CopyOptions *StageCopyOptionsRequest) *CreateInternalStageRequest {
	s.CopyOptions = CopyOptions
	return s
}

func (s *CreateInternalStageRequest) WithComment(Comment *string) *CreateInternalStageRequest {
	s.Comment = Comment
	return s
}

func (s *CreateInternalStageRequest) WithTag(Tag []TagAssociation) *CreateInternalStageRequest {
	s.Tag = Tag
	return s
}

func NewInternalStageEncryptionRequest() *InternalStageEncryptionRequest {
	return &InternalStageEncryptionRequest{}
}

func (s *InternalStageEncryptionRequest) WithType(Type *InternalStageEncryptionOption) *InternalStageEncryptionRequest {
	s.Type = Type
	return s
}

func NewInternalDirectoryTableOptionsRequest() *InternalDirectoryTableOptionsRequest {
	return &InternalDirectoryTableOptionsRequest{}
}

func (s *InternalDirectoryTableOptionsRequest) WithEnable(Enable *bool) *InternalDirectoryTableOptionsRequest {
	s.Enable = Enable
	return s
}

func (s *InternalDirectoryTableOptionsRequest) WithRefreshOnCreate(RefreshOnCreate *bool) *InternalDirectoryTableOptionsRequest {
	s.RefreshOnCreate = RefreshOnCreate
	return s
}

func NewStageFileFormatRequest() *StageFileFormatRequest {
	return &StageFileFormatRequest{}
}

func (s *StageFileFormatRequest) WithFormatName(FormatName *string) *StageFileFormatRequest {
	s.FormatName = FormatName
	return s
}

func (s *StageFileFormatRequest) WithType(Type *FileFormatType) *StageFileFormatRequest {
	s.Type = Type
	return s
}

func (s *StageFileFormatRequest) WithTYPE(TYPE []FileFormatType) *StageFileFormatRequest {
	s.TYPE = TYPE
	return s
}

func NewStageCopyOptionsRequest() *StageCopyOptionsRequest {
	return &StageCopyOptionsRequest{}
}

func (s *StageCopyOptionsRequest) WithOnError(OnError *StageCopyOnErrorOptionsRequest) *StageCopyOptionsRequest {
	s.OnError = OnError
	return s
}

func (s *StageCopyOptionsRequest) WithSizeLimit(SizeLimit *int) *StageCopyOptionsRequest {
	s.SizeLimit = SizeLimit
	return s
}

func (s *StageCopyOptionsRequest) WithPurge(Purge *bool) *StageCopyOptionsRequest {
	s.Purge = Purge
	return s
}

func (s *StageCopyOptionsRequest) WithReturnFailedOnly(ReturnFailedOnly *bool) *StageCopyOptionsRequest {
	s.ReturnFailedOnly = ReturnFailedOnly
	return s
}

func (s *StageCopyOptionsRequest) WithMatchByColumnName(MatchByColumnName *StageCopyColumnMapOption) *StageCopyOptionsRequest {
	s.MatchByColumnName = MatchByColumnName
	return s
}

func (s *StageCopyOptionsRequest) WithEnforceLength(EnforceLength *bool) *StageCopyOptionsRequest {
	s.EnforceLength = EnforceLength
	return s
}

func (s *StageCopyOptionsRequest) WithTruncatecolumns(Truncatecolumns *bool) *StageCopyOptionsRequest {
	s.Truncatecolumns = Truncatecolumns
	return s
}

func (s *StageCopyOptionsRequest) WithForce(Force *bool) *StageCopyOptionsRequest {
	s.Force = Force
	return s
}

func (s *StageCopyOptionsRequest) WithType(Type *FileFormatType) *StageCopyOptionsRequest {
	s.Type = Type
	return s
}

func (s *StageCopyOptionsRequest) WithTYPE(TYPE []FileFormatType) *StageCopyOptionsRequest {
	s.TYPE = TYPE
	return s
}

func NewStageCopyOnErrorOptionsRequest() *StageCopyOnErrorOptionsRequest {
	return &StageCopyOnErrorOptionsRequest{}
}

func (s *StageCopyOnErrorOptionsRequest) WithContinue(Continue *bool) *StageCopyOnErrorOptionsRequest {
	s.Continue = Continue
	return s
}

func (s *StageCopyOnErrorOptionsRequest) WithSkipFile(SkipFile *bool) *StageCopyOnErrorOptionsRequest {
	s.SkipFile = SkipFile
	return s
}

func (s *StageCopyOnErrorOptionsRequest) WithSkipFile(SkipFile *bool) *StageCopyOnErrorOptionsRequest {
	s.SkipFile = SkipFile
	return s
}

func NewDropStageRequest(
	name SchemaObjectIdentifier,
) *DropStageRequest {
	s := DropStageRequest{}
	s.name = name
	return &s
}

func (s *DropStageRequest) WithIfExists(IfExists *bool) *DropStageRequest {
	s.IfExists = IfExists
	return s
}

func NewDescribeStageRequest(
	name SchemaObjectIdentifier,
) *DescribeStageRequest {
	s := DescribeStageRequest{}
	s.name = name
	return &s
}

func NewShowStageRequest() *ShowStageRequest {
	return &ShowStageRequest{}
}

func (s *ShowStageRequest) WithLike(Like *Like) *ShowStageRequest {
	s.Like = Like
	return s
}

func (s *ShowStageRequest) WithIn(In *In) *ShowStageRequest {
	s.In = In
	return s
}
