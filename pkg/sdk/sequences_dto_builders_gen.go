// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateSequenceRequest(
	name SchemaObjectIdentifier,
) *CreateSequenceRequest {
	s := CreateSequenceRequest{}
	s.name = name
	return &s
}

func (s *CreateSequenceRequest) WithOrReplace(OrReplace *bool) *CreateSequenceRequest {
	s.OrReplace = OrReplace
	return s
}

func (s *CreateSequenceRequest) WithIfNotExists(IfNotExists *bool) *CreateSequenceRequest {
	s.IfNotExists = IfNotExists
	return s
}

func (s *CreateSequenceRequest) WithStart(Start *int) *CreateSequenceRequest {
	s.Start = Start
	return s
}

func (s *CreateSequenceRequest) WithIncrement(Increment *int) *CreateSequenceRequest {
	s.Increment = Increment
	return s
}

func (s *CreateSequenceRequest) WithValuesBehavior(ValuesBehavior *ValuesBehavior) *CreateSequenceRequest {
	s.ValuesBehavior = ValuesBehavior
	return s
}

func (s *CreateSequenceRequest) WithComment(Comment *string) *CreateSequenceRequest {
	s.Comment = Comment
	return s
}

func NewAlterSequenceRequest(
	name SchemaObjectIdentifier,
) *AlterSequenceRequest {
	s := AlterSequenceRequest{}
	s.name = name
	return &s
}

func (s *AlterSequenceRequest) WithIfExists(IfExists *bool) *AlterSequenceRequest {
	s.IfExists = IfExists
	return s
}

func (s *AlterSequenceRequest) WithRenameTo(RenameTo *SchemaObjectIdentifier) *AlterSequenceRequest {
	s.RenameTo = RenameTo
	return s
}

func (s *AlterSequenceRequest) WithSetIncrement(SetIncrement *int) *AlterSequenceRequest {
	s.SetIncrement = SetIncrement
	return s
}

func (s *AlterSequenceRequest) WithSet(Set *SequenceSetRequest) *AlterSequenceRequest {
	s.Set = Set
	return s
}

func (s *AlterSequenceRequest) WithUnsetComment(UnsetComment *bool) *AlterSequenceRequest {
	s.UnsetComment = UnsetComment
	return s
}

func NewSequenceSetRequest() *SequenceSetRequest {
	return &SequenceSetRequest{}
}

func (s *SequenceSetRequest) WithValuesBehavior(ValuesBehavior *ValuesBehavior) *SequenceSetRequest {
	s.ValuesBehavior = ValuesBehavior
	return s
}

func (s *SequenceSetRequest) WithComment(Comment *string) *SequenceSetRequest {
	s.Comment = Comment
	return s
}

func NewShowSequenceRequest() *ShowSequenceRequest {
	return &ShowSequenceRequest{}
}

func (s *ShowSequenceRequest) WithLike(Like *Like) *ShowSequenceRequest {
	s.Like = Like
	return s
}

func (s *ShowSequenceRequest) WithIn(In *In) *ShowSequenceRequest {
	s.In = In
	return s
}

func NewDescribeSequenceRequest(
	name SchemaObjectIdentifier,
) *DescribeSequenceRequest {
	s := DescribeSequenceRequest{}
	s.name = name
	return &s
}

func NewDropSequenceRequest(
	name SchemaObjectIdentifier,
) *DropSequenceRequest {
	s := DropSequenceRequest{}
	s.name = name
	return &s
}

func (s *DropSequenceRequest) WithIfExists(IfExists *bool) *DropSequenceRequest {
	s.IfExists = IfExists
	return s
}

func (s *DropSequenceRequest) WithConstraint(Constraint *SequenceConstraintRequest) *DropSequenceRequest {
	s.Constraint = Constraint
	return s
}

func NewSequenceConstraintRequest() *SequenceConstraintRequest {
	return &SequenceConstraintRequest{}
}

func (s *SequenceConstraintRequest) WithCascade(Cascade *bool) *SequenceConstraintRequest {
	s.Cascade = Cascade
	return s
}

func (s *SequenceConstraintRequest) WithRestrict(Restrict *bool) *SequenceConstraintRequest {
	s.Restrict = Restrict
	return s
}
