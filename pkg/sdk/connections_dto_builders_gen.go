// Code generated by dto builder generator; DO NOT EDIT.

package sdk

func NewCreateConnectionRequest(
	name AccountObjectIdentifier,
) *CreateConnectionRequest {
	s := CreateConnectionRequest{}
	s.name = name
	return &s
}

func (s *CreateConnectionRequest) WithIfNotExists(IfNotExists bool) *CreateConnectionRequest {
	s.IfNotExists = &IfNotExists
	return s
}

func (s *CreateConnectionRequest) WithAsReplicaOf(AsReplicaOf ExternalObjectIdentifier) *CreateConnectionRequest {
	s.AsReplicaOf = &AsReplicaOf
	return s
}

func (s *CreateConnectionRequest) WithComment(Comment string) *CreateConnectionRequest {
	s.Comment = &Comment
	return s
}

func NewAlterConnectionRequest(
	name AccountObjectIdentifier,
) *AlterConnectionRequest {
	s := AlterConnectionRequest{}
	s.name = name
	return &s
}

func (s *AlterConnectionRequest) WithIfExists(IfExists bool) *AlterConnectionRequest {
	s.IfExists = &IfExists
	return s
}

func (s *AlterConnectionRequest) WithEnableConnectionFailover(EnableConnectionFailover EnableConnectionFailoverRequest) *AlterConnectionRequest {
	s.EnableConnectionFailover = &EnableConnectionFailover
	return s
}

func (s *AlterConnectionRequest) WithDisableConnectionFailover(DisableConnectionFailover DisableConnectionFailoverRequest) *AlterConnectionRequest {
	s.DisableConnectionFailover = &DisableConnectionFailover
	return s
}

func (s *AlterConnectionRequest) WithPrimary(Primary bool) *AlterConnectionRequest {
	s.Primary = &Primary
	return s
}

func (s *AlterConnectionRequest) WithSet(Set SetRequest) *AlterConnectionRequest {
	s.Set = &Set
	return s
}

func (s *AlterConnectionRequest) WithUnset(Unset UnsetRequest) *AlterConnectionRequest {
	s.Unset = &Unset
	return s
}

func NewEnableConnectionFailoverRequest() *EnableConnectionFailoverRequest {
	return &EnableConnectionFailoverRequest{}
}

func (s *EnableConnectionFailoverRequest) WithToAccounts(ToAccounts []AccountIdentifier) *EnableConnectionFailoverRequest {
	s.ToAccounts = ToAccounts
	return s
}

func NewDisableConnectionFailoverRequest() *DisableConnectionFailoverRequest {
	return &DisableConnectionFailoverRequest{}
}

func (s *DisableConnectionFailoverRequest) WithToAccounts(ToAccounts ToAccountsRequest) *DisableConnectionFailoverRequest {
	s.ToAccounts = &ToAccounts
	return s
}

func NewToAccountsRequest() *ToAccountsRequest {
	return &ToAccountsRequest{}
}

func (s *ToAccountsRequest) WithAccounts(Accounts []AccountIdentifier) *ToAccountsRequest {
	s.Accounts = Accounts
	return s
}

func NewSetRequest() *SetRequest {
	return &SetRequest{}
}

func (s *SetRequest) WithComment(Comment string) *SetRequest {
	s.Comment = &Comment
	return s
}

func NewUnsetRequest() *UnsetRequest {
	return &UnsetRequest{}
}

func (s *UnsetRequest) WithComment(Comment bool) *UnsetRequest {
	s.Comment = &Comment
	return s
}

func NewDropConnectionRequest(
	name AccountObjectIdentifier,
) *DropConnectionRequest {
	s := DropConnectionRequest{}
	s.name = name
	return &s
}

func (s *DropConnectionRequest) WithIfExists(IfExists bool) *DropConnectionRequest {
	s.IfExists = &IfExists
	return s
}

func NewShowConnectionRequest() *ShowConnectionRequest {
	return &ShowConnectionRequest{}
}

func (s *ShowConnectionRequest) WithLike(Like Like) *ShowConnectionRequest {
	s.Like = &Like
	return s
}
