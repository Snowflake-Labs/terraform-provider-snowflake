// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateSCIMSecurityIntegrationRequest(
	name AccountObjectIdentifier,
	Enabled bool,
	ScimClient string,
	RunAsRole string,
) *CreateSCIMSecurityIntegrationRequest {
	s := CreateSCIMSecurityIntegrationRequest{}
	s.name = name
	s.Enabled = Enabled
	s.ScimClient = ScimClient
	s.RunAsRole = RunAsRole
	return &s
}

func (s *CreateSCIMSecurityIntegrationRequest) WithOrReplace(OrReplace *bool) *CreateSCIMSecurityIntegrationRequest {
	s.OrReplace = OrReplace
	return s
}

func (s *CreateSCIMSecurityIntegrationRequest) WithIfNotExists(IfNotExists *bool) *CreateSCIMSecurityIntegrationRequest {
	s.IfNotExists = IfNotExists
	return s
}

func (s *CreateSCIMSecurityIntegrationRequest) WithNetworkPolicy(NetworkPolicy *AccountObjectIdentifier) *CreateSCIMSecurityIntegrationRequest {
	s.NetworkPolicy = NetworkPolicy
	return s
}

func (s *CreateSCIMSecurityIntegrationRequest) WithSyncPassword(SyncPassword *bool) *CreateSCIMSecurityIntegrationRequest {
	s.SyncPassword = SyncPassword
	return s
}

func (s *CreateSCIMSecurityIntegrationRequest) WithComment(Comment *string) *CreateSCIMSecurityIntegrationRequest {
	s.Comment = Comment
	return s
}

func NewAlterSCIMIntegrationSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterSCIMIntegrationSecurityIntegrationRequest {
	s := AlterSCIMIntegrationSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterSCIMIntegrationSecurityIntegrationRequest) WithIfExists(IfExists *bool) *AlterSCIMIntegrationSecurityIntegrationRequest {
	s.IfExists = IfExists
	return s
}

func (s *AlterSCIMIntegrationSecurityIntegrationRequest) WithSet(Set *SCIMIntegrationSetRequest) *AlterSCIMIntegrationSecurityIntegrationRequest {
	s.Set = Set
	return s
}

func (s *AlterSCIMIntegrationSecurityIntegrationRequest) WithUnset(Unset *SCIMIntegrationUnsetRequest) *AlterSCIMIntegrationSecurityIntegrationRequest {
	s.Unset = Unset
	return s
}

func (s *AlterSCIMIntegrationSecurityIntegrationRequest) WithSetTag(SetTag []TagAssociation) *AlterSCIMIntegrationSecurityIntegrationRequest {
	s.SetTag = SetTag
	return s
}

func (s *AlterSCIMIntegrationSecurityIntegrationRequest) WithUnsetTag(UnsetTag []ObjectIdentifier) *AlterSCIMIntegrationSecurityIntegrationRequest {
	s.UnsetTag = UnsetTag
	return s
}

func NewSCIMIntegrationSetRequest() *SCIMIntegrationSetRequest {
	return &SCIMIntegrationSetRequest{}
}

func (s *SCIMIntegrationSetRequest) WithEnabled(Enabled *bool) *SCIMIntegrationSetRequest {
	s.Enabled = Enabled
	return s
}

func (s *SCIMIntegrationSetRequest) WithNetworkPolicy(NetworkPolicy *AccountObjectIdentifier) *SCIMIntegrationSetRequest {
	s.NetworkPolicy = NetworkPolicy
	return s
}

func (s *SCIMIntegrationSetRequest) WithSyncPassword(SyncPassword *bool) *SCIMIntegrationSetRequest {
	s.SyncPassword = SyncPassword
	return s
}

func (s *SCIMIntegrationSetRequest) WithComment(Comment *string) *SCIMIntegrationSetRequest {
	s.Comment = Comment
	return s
}

func NewSCIMIntegrationUnsetRequest() *SCIMIntegrationUnsetRequest {
	return &SCIMIntegrationUnsetRequest{}
}

func (s *SCIMIntegrationUnsetRequest) WithNetworkPolicy(NetworkPolicy *bool) *SCIMIntegrationUnsetRequest {
	s.NetworkPolicy = NetworkPolicy
	return s
}

func (s *SCIMIntegrationUnsetRequest) WithSyncPassword(SyncPassword *bool) *SCIMIntegrationUnsetRequest {
	s.SyncPassword = SyncPassword
	return s
}

func (s *SCIMIntegrationUnsetRequest) WithComment(Comment *bool) *SCIMIntegrationUnsetRequest {
	s.Comment = Comment
	return s
}

func NewDropSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *DropSecurityIntegrationRequest {
	s := DropSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func (s *DropSecurityIntegrationRequest) WithIfExists(IfExists *bool) *DropSecurityIntegrationRequest {
	s.IfExists = IfExists
	return s
}

func NewDescribeSecurityIntegrationRequest(
	name AccountObjectIdentifier,
) *DescribeSecurityIntegrationRequest {
	s := DescribeSecurityIntegrationRequest{}
	s.name = name
	return &s
}

func NewShowSecurityIntegrationRequest() *ShowSecurityIntegrationRequest {
	return &ShowSecurityIntegrationRequest{}
}

func (s *ShowSecurityIntegrationRequest) WithLike(Like *Like) *ShowSecurityIntegrationRequest {
	s.Like = Like
	return s
}
