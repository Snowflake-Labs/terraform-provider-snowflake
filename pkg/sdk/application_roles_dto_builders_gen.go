// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateApplicationRoleRequest(
	name AccountObjectIdentifier,
) *CreateApplicationRoleRequest {
	s := CreateApplicationRoleRequest{}
	s.name = name
	return &s
}

func (s *CreateApplicationRoleRequest) WithOrReplace(OrReplace *bool) *CreateApplicationRoleRequest {
	s.OrReplace = OrReplace
	return s
}

func (s *CreateApplicationRoleRequest) WithIfNotExists(IfNotExists *bool) *CreateApplicationRoleRequest {
	s.IfNotExists = IfNotExists
	return s
}

func (s *CreateApplicationRoleRequest) WithComment(Comment *string) *CreateApplicationRoleRequest {
	s.Comment = Comment
	return s
}

func NewAlterApplicationRoleRequest(
	name AccountObjectIdentifier,
) *AlterApplicationRoleRequest {
	s := AlterApplicationRoleRequest{}
	s.name = name
	return &s
}

func (s *AlterApplicationRoleRequest) WithIfExists(IfExists *bool) *AlterApplicationRoleRequest {
	s.IfExists = IfExists
	return s
}

func (s *AlterApplicationRoleRequest) WithRenameTo(RenameTo *AccountObjectIdentifier) *AlterApplicationRoleRequest {
	s.RenameTo = RenameTo
	return s
}

func (s *AlterApplicationRoleRequest) WithSetComment(SetComment *string) *AlterApplicationRoleRequest {
	s.SetComment = SetComment
	return s
}

func (s *AlterApplicationRoleRequest) WithUnsetComment(UnsetComment *bool) *AlterApplicationRoleRequest {
	s.UnsetComment = UnsetComment
	return s
}

func NewDropApplicationRoleRequest(
	name AccountObjectIdentifier,
) *DropApplicationRoleRequest {
	s := DropApplicationRoleRequest{}
	s.name = name
	return &s
}

func (s *DropApplicationRoleRequest) WithIfExists(IfExists *bool) *DropApplicationRoleRequest {
	s.IfExists = IfExists
	return s
}

func NewShowApplicationRoleRequest() *ShowApplicationRoleRequest {
	return &ShowApplicationRoleRequest{}
}

func (s *ShowApplicationRoleRequest) WithApplicationName(ApplicationName AccountObjectIdentifier) *ShowApplicationRoleRequest {
	s.ApplicationName = ApplicationName
	return s
}

func (s *ShowApplicationRoleRequest) WithLimitFrom(LimitFrom *LimitFromApplicationRoleRequest) *ShowApplicationRoleRequest {
	s.LimitFrom = LimitFrom
	return s
}

func NewLimitFromApplicationRoleRequest(
	Rows int,
) *LimitFromApplicationRoleRequest {
	s := LimitFromApplicationRoleRequest{}
	s.Rows = Rows
	return &s
}

func (s *LimitFromApplicationRoleRequest) WithFrom(From *string) *LimitFromApplicationRoleRequest {
	s.From = From
	return s
}

func NewGrantApplicationRoleRequest(
	name AccountObjectIdentifier,
	GrantTo ApplicationGrantOptionsRequest,
) *GrantApplicationRoleRequest {
	s := GrantApplicationRoleRequest{}
	s.name = name
	s.GrantTo = GrantTo
	return &s
}

func NewApplicationGrantOptionsRequest() *ApplicationGrantOptionsRequest {
	return &ApplicationGrantOptionsRequest{}
}

func (s *ApplicationGrantOptionsRequest) WithParentRole(ParentRole *AccountObjectIdentifier) *ApplicationGrantOptionsRequest {
	s.ParentRole = ParentRole
	return s
}

func (s *ApplicationGrantOptionsRequest) WithApplicationRole(ApplicationRole *AccountObjectIdentifier) *ApplicationGrantOptionsRequest {
	s.ApplicationRole = ApplicationRole
	return s
}

func (s *ApplicationGrantOptionsRequest) WithApplication(Application *AccountObjectIdentifier) *ApplicationGrantOptionsRequest {
	s.Application = Application
	return s
}

func NewRevokeApplicationRoleRequest(
	name AccountObjectIdentifier,
	RevokeFrom ApplicationGrantOptionsRequest,
) *RevokeApplicationRoleRequest {
	s := RevokeApplicationRoleRequest{}
	s.name = name
	s.RevokeFrom = RevokeFrom
	return &s
}
