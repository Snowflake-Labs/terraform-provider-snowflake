// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateApplicationRequest(
	name AccountObjectIdentifier,
	PackageName AccountObjectIdentifier,
) *CreateApplicationRequest {
	s := CreateApplicationRequest{}
	s.name = name
	s.PackageName = PackageName
	return &s
}

func (s *CreateApplicationRequest) WithVersion(Version *ApplicationVersionRequest) *CreateApplicationRequest {
	s.Version = Version
	return s
}

func (s *CreateApplicationRequest) WithDebugMode(DebugMode *bool) *CreateApplicationRequest {
	s.DebugMode = DebugMode
	return s
}

func (s *CreateApplicationRequest) WithComment(Comment *string) *CreateApplicationRequest {
	s.Comment = Comment
	return s
}

func (s *CreateApplicationRequest) WithTag(Tag []TagAssociation) *CreateApplicationRequest {
	s.Tag = Tag
	return s
}

func NewApplicationVersionRequest() *ApplicationVersionRequest {
	return &ApplicationVersionRequest{}
}

func (s *ApplicationVersionRequest) WithVersionDirectory(VersionDirectory *string) *ApplicationVersionRequest {
	s.VersionDirectory = VersionDirectory
	return s
}

func (s *ApplicationVersionRequest) WithVersionAndPatch(VersionAndPatch *VersionAndPatchRequest) *ApplicationVersionRequest {
	s.VersionAndPatch = VersionAndPatch
	return s
}

func NewVersionAndPatchRequest(
	Version string,
	Patch *int,
) *VersionAndPatchRequest {
	s := VersionAndPatchRequest{}
	s.Version = Version
	s.Patch = Patch
	return &s
}

func NewDropApplicationRequest(
	name AccountObjectIdentifier,
) *DropApplicationRequest {
	s := DropApplicationRequest{}
	s.name = name
	return &s
}

func (s *DropApplicationRequest) WithIfExists(IfExists *bool) *DropApplicationRequest {
	s.IfExists = IfExists
	return s
}

func (s *DropApplicationRequest) WithCascade(Cascade *bool) *DropApplicationRequest {
	s.Cascade = Cascade
	return s
}

func NewAlterApplicationRequest(
	name AccountObjectIdentifier,
) *AlterApplicationRequest {
	s := AlterApplicationRequest{}
	s.name = name
	return &s
}

func (s *AlterApplicationRequest) WithIfExists(IfExists *bool) *AlterApplicationRequest {
	s.IfExists = IfExists
	return s
}

func (s *AlterApplicationRequest) WithSet(Set *ApplicationSetRequest) *AlterApplicationRequest {
	s.Set = Set
	return s
}

func (s *AlterApplicationRequest) WithUnset(Unset *ApplicationUnsetRequest) *AlterApplicationRequest {
	s.Unset = Unset
	return s
}

func (s *AlterApplicationRequest) WithUpgrade(Upgrade *bool) *AlterApplicationRequest {
	s.Upgrade = Upgrade
	return s
}

func (s *AlterApplicationRequest) WithUpgradeVersion(UpgradeVersion *ApplicationVersionRequest) *AlterApplicationRequest {
	s.UpgradeVersion = UpgradeVersion
	return s
}

func (s *AlterApplicationRequest) WithUnsetReferences(UnsetReferences *ApplicationReferencesRequest) *AlterApplicationRequest {
	s.UnsetReferences = UnsetReferences
	return s
}

func (s *AlterApplicationRequest) WithSetTags(SetTags []TagAssociation) *AlterApplicationRequest {
	s.SetTags = SetTags
	return s
}

func (s *AlterApplicationRequest) WithUnsetTags(UnsetTags []ObjectIdentifier) *AlterApplicationRequest {
	s.UnsetTags = UnsetTags
	return s
}

func NewApplicationSetRequest() *ApplicationSetRequest {
	return &ApplicationSetRequest{}
}

func (s *ApplicationSetRequest) WithComment(Comment *string) *ApplicationSetRequest {
	s.Comment = Comment
	return s
}

func (s *ApplicationSetRequest) WithShareEventsWithProvider(ShareEventsWithProvider *bool) *ApplicationSetRequest {
	s.ShareEventsWithProvider = ShareEventsWithProvider
	return s
}

func (s *ApplicationSetRequest) WithDebugMode(DebugMode *bool) *ApplicationSetRequest {
	s.DebugMode = DebugMode
	return s
}

func NewApplicationUnsetRequest() *ApplicationUnsetRequest {
	return &ApplicationUnsetRequest{}
}

func (s *ApplicationUnsetRequest) WithComment(Comment *bool) *ApplicationUnsetRequest {
	s.Comment = Comment
	return s
}

func (s *ApplicationUnsetRequest) WithShareEventsWithProvider(ShareEventsWithProvider *bool) *ApplicationUnsetRequest {
	s.ShareEventsWithProvider = ShareEventsWithProvider
	return s
}

func (s *ApplicationUnsetRequest) WithDebugMode(DebugMode *bool) *ApplicationUnsetRequest {
	s.DebugMode = DebugMode
	return s
}

func NewApplicationReferencesRequest() *ApplicationReferencesRequest {
	return &ApplicationReferencesRequest{}
}

func (s *ApplicationReferencesRequest) WithReferences(References []ApplicationReferenceRequest) *ApplicationReferencesRequest {
	s.References = References
	return s
}

func NewApplicationReferenceRequest() *ApplicationReferenceRequest {
	return &ApplicationReferenceRequest{}
}

func (s *ApplicationReferenceRequest) WithReference(Reference string) *ApplicationReferenceRequest {
	s.Reference = Reference
	return s
}

func NewShowApplicationRequest() *ShowApplicationRequest {
	return &ShowApplicationRequest{}
}

func (s *ShowApplicationRequest) WithLike(Like *Like) *ShowApplicationRequest {
	s.Like = Like
	return s
}

func (s *ShowApplicationRequest) WithStartsWith(StartsWith *string) *ShowApplicationRequest {
	s.StartsWith = StartsWith
	return s
}

func (s *ShowApplicationRequest) WithLimit(Limit *LimitFrom) *ShowApplicationRequest {
	s.Limit = Limit
	return s
}

func NewDescribeApplicationRequest(
	name AccountObjectIdentifier,
) *DescribeApplicationRequest {
	s := DescribeApplicationRequest{}
	s.name = name
	return &s
}
