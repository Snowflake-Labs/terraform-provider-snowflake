// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateNotificationIntegrationRequest(
	name AccountObjectIdentifier,
	Enabled bool,
) *CreateNotificationIntegrationRequest {
	s := CreateNotificationIntegrationRequest{}
	s.name = name
	s.Enabled = Enabled
	return &s
}

func (s *CreateNotificationIntegrationRequest) WithOrReplace(OrReplace *bool) *CreateNotificationIntegrationRequest {
	s.OrReplace = OrReplace
	return s
}

func (s *CreateNotificationIntegrationRequest) WithIfNotExists(IfNotExists *bool) *CreateNotificationIntegrationRequest {
	s.IfNotExists = IfNotExists
	return s
}

func (s *CreateNotificationIntegrationRequest) WithAutomatedDataLoadsParams(AutomatedDataLoadsParams *AutomatedDataLoadsParamsRequest) *CreateNotificationIntegrationRequest {
	s.AutomatedDataLoadsParams = AutomatedDataLoadsParams
	return s
}

func (s *CreateNotificationIntegrationRequest) WithPushNotificationParams(PushNotificationParams *PushNotificationParamsRequest) *CreateNotificationIntegrationRequest {
	s.PushNotificationParams = PushNotificationParams
	return s
}

func (s *CreateNotificationIntegrationRequest) WithEmailParams(EmailParams *EmailParamsRequest) *CreateNotificationIntegrationRequest {
	s.EmailParams = EmailParams
	return s
}

func (s *CreateNotificationIntegrationRequest) WithComment(Comment *string) *CreateNotificationIntegrationRequest {
	s.Comment = Comment
	return s
}

func NewAutomatedDataLoadsParamsRequest() *AutomatedDataLoadsParamsRequest {
	return &AutomatedDataLoadsParamsRequest{}
}

func (s *AutomatedDataLoadsParamsRequest) WithGoogleAutomatedDataLoad(GoogleAutomatedDataLoad *GoogleAutomatedDataLoadRequest) *AutomatedDataLoadsParamsRequest {
	s.GoogleAutomatedDataLoad = GoogleAutomatedDataLoad
	return s
}

func (s *AutomatedDataLoadsParamsRequest) WithAzureAutomatedDataLoad(AzureAutomatedDataLoad *AzureAutomatedDataLoadRequest) *AutomatedDataLoadsParamsRequest {
	s.AzureAutomatedDataLoad = AzureAutomatedDataLoad
	return s
}

func NewGoogleAutomatedDataLoadRequest(
	GcpPubsubSubscriptionName string,
) *GoogleAutomatedDataLoadRequest {
	s := GoogleAutomatedDataLoadRequest{}
	s.GcpPubsubSubscriptionName = GcpPubsubSubscriptionName
	return &s
}

func NewAzureAutomatedDataLoadRequest(
	AzureStorageQueuePrimaryUri string,
	AzureTenantId string,
) *AzureAutomatedDataLoadRequest {
	s := AzureAutomatedDataLoadRequest{}
	s.AzureStorageQueuePrimaryUri = AzureStorageQueuePrimaryUri
	s.AzureTenantId = AzureTenantId
	return &s
}

func NewPushNotificationParamsRequest() *PushNotificationParamsRequest {
	return &PushNotificationParamsRequest{}
}

func (s *PushNotificationParamsRequest) WithAmazonPush(AmazonPush *AmazonPushRequest) *PushNotificationParamsRequest {
	s.AmazonPush = AmazonPush
	return s
}

func (s *PushNotificationParamsRequest) WithGooglePush(GooglePush *GooglePushRequest) *PushNotificationParamsRequest {
	s.GooglePush = GooglePush
	return s
}

func (s *PushNotificationParamsRequest) WithAzurePush(AzurePush *AzurePushRequest) *PushNotificationParamsRequest {
	s.AzurePush = AzurePush
	return s
}

func NewAmazonPushRequest(
	AwsSnsTopicArn string,
	AwsSnsRoleArn string,
) *AmazonPushRequest {
	s := AmazonPushRequest{}
	s.AwsSnsTopicArn = AwsSnsTopicArn
	s.AwsSnsRoleArn = AwsSnsRoleArn
	return &s
}

func NewGooglePushRequest(
	GcpPubsubTopicName string,
) *GooglePushRequest {
	s := GooglePushRequest{}
	s.GcpPubsubTopicName = GcpPubsubTopicName
	return &s
}

func NewAzurePushRequest(
	AzureEventGridTopicEndpoint string,
	AzureTenantId string,
) *AzurePushRequest {
	s := AzurePushRequest{}
	s.AzureEventGridTopicEndpoint = AzureEventGridTopicEndpoint
	s.AzureTenantId = AzureTenantId
	return &s
}

func NewEmailParamsRequest() *EmailParamsRequest {
	return &EmailParamsRequest{}
}

func (s *EmailParamsRequest) WithAllowedRecipients(AllowedRecipients []NotificationIntegrationAllowedRecipient) *EmailParamsRequest {
	s.AllowedRecipients = AllowedRecipients
	return s
}

func NewAlterNotificationIntegrationRequest(
	name AccountObjectIdentifier,
) *AlterNotificationIntegrationRequest {
	s := AlterNotificationIntegrationRequest{}
	s.name = name
	return &s
}

func (s *AlterNotificationIntegrationRequest) WithIfExists(IfExists *bool) *AlterNotificationIntegrationRequest {
	s.IfExists = IfExists
	return s
}

func (s *AlterNotificationIntegrationRequest) WithSet(Set *NotificationIntegrationSetRequest) *AlterNotificationIntegrationRequest {
	s.Set = Set
	return s
}

func (s *AlterNotificationIntegrationRequest) WithUnset(Unset *NotificationIntegrationUnsetRequest) *AlterNotificationIntegrationRequest {
	s.Unset = Unset
	return s
}

func (s *AlterNotificationIntegrationRequest) WithSetTags(SetTags []TagAssociation) *AlterNotificationIntegrationRequest {
	s.SetTags = SetTags
	return s
}

func (s *AlterNotificationIntegrationRequest) WithUnsetTags(UnsetTags []ObjectIdentifier) *AlterNotificationIntegrationRequest {
	s.UnsetTags = UnsetTags
	return s
}

func NewNotificationIntegrationSetRequest() *NotificationIntegrationSetRequest {
	return &NotificationIntegrationSetRequest{}
}

func (s *NotificationIntegrationSetRequest) WithEnabled(Enabled *bool) *NotificationIntegrationSetRequest {
	s.Enabled = Enabled
	return s
}

func (s *NotificationIntegrationSetRequest) WithSetPushParams(SetPushParams *SetPushParamsRequest) *NotificationIntegrationSetRequest {
	s.SetPushParams = SetPushParams
	return s
}

func (s *NotificationIntegrationSetRequest) WithSetEmailParams(SetEmailParams *SetEmailParamsRequest) *NotificationIntegrationSetRequest {
	s.SetEmailParams = SetEmailParams
	return s
}

func (s *NotificationIntegrationSetRequest) WithComment(Comment *string) *NotificationIntegrationSetRequest {
	s.Comment = Comment
	return s
}

func NewSetPushParamsRequest() *SetPushParamsRequest {
	return &SetPushParamsRequest{}
}

func (s *SetPushParamsRequest) WithSetAmazonPush(SetAmazonPush *SetAmazonPushRequest) *SetPushParamsRequest {
	s.SetAmazonPush = SetAmazonPush
	return s
}

func (s *SetPushParamsRequest) WithSetGooglePush(SetGooglePush *SetGooglePushRequest) *SetPushParamsRequest {
	s.SetGooglePush = SetGooglePush
	return s
}

func (s *SetPushParamsRequest) WithSetAzurePush(SetAzurePush *SetAzurePushRequest) *SetPushParamsRequest {
	s.SetAzurePush = SetAzurePush
	return s
}

func NewSetAmazonPushRequest(
	AwsSnsTopicArn string,
	AwsSnsRoleArn string,
) *SetAmazonPushRequest {
	s := SetAmazonPushRequest{}
	s.AwsSnsTopicArn = AwsSnsTopicArn
	s.AwsSnsRoleArn = AwsSnsRoleArn
	return &s
}

func NewSetGooglePushRequest(
	GcpPubsubSubscriptionName string,
) *SetGooglePushRequest {
	s := SetGooglePushRequest{}
	s.GcpPubsubSubscriptionName = GcpPubsubSubscriptionName
	return &s
}

func NewSetAzurePushRequest(
	AzureStorageQueuePrimaryUri string,
	AzureTenantId string,
) *SetAzurePushRequest {
	s := SetAzurePushRequest{}
	s.AzureStorageQueuePrimaryUri = AzureStorageQueuePrimaryUri
	s.AzureTenantId = AzureTenantId
	return &s
}

func NewSetEmailParamsRequest(
	AllowedRecipients []NotificationIntegrationAllowedRecipient,
) *SetEmailParamsRequest {
	s := SetEmailParamsRequest{}
	s.AllowedRecipients = AllowedRecipients
	return &s
}

func NewNotificationIntegrationUnsetRequest() *NotificationIntegrationUnsetRequest {
	return &NotificationIntegrationUnsetRequest{}
}

func (s *NotificationIntegrationUnsetRequest) WithAllowedRecipients(AllowedRecipients *bool) *NotificationIntegrationUnsetRequest {
	s.AllowedRecipients = AllowedRecipients
	return s
}

func (s *NotificationIntegrationUnsetRequest) WithComment(Comment *bool) *NotificationIntegrationUnsetRequest {
	s.Comment = Comment
	return s
}

func NewDropNotificationIntegrationRequest(
	name AccountObjectIdentifier,
) *DropNotificationIntegrationRequest {
	s := DropNotificationIntegrationRequest{}
	s.name = name
	return &s
}

func (s *DropNotificationIntegrationRequest) WithIfExists(IfExists *bool) *DropNotificationIntegrationRequest {
	s.IfExists = IfExists
	return s
}

func NewShowNotificationIntegrationRequest() *ShowNotificationIntegrationRequest {
	return &ShowNotificationIntegrationRequest{}
}

func (s *ShowNotificationIntegrationRequest) WithLike(Like *Like) *ShowNotificationIntegrationRequest {
	s.Like = Like
	return s
}

func NewDescribeNotificationIntegrationRequest(
	name AccountObjectIdentifier,
) *DescribeNotificationIntegrationRequest {
	s := DescribeNotificationIntegrationRequest{}
	s.name = name
	return &s
}
