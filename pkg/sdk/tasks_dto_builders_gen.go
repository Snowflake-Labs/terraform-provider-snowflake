// Code generated by dto builder generator; DO NOT EDIT.

package sdk

import ()

func NewCreateTaskRequest(
	name SchemaObjectIdentifier,
	sql string,
) *CreateTaskRequest {
	s := CreateTaskRequest{}
	s.name = name
	s.sql = sql
	return &s
}

func (s *CreateTaskRequest) WithOrReplace(OrReplace *bool) *CreateTaskRequest {
	s.OrReplace = OrReplace
	return s
}

func (s *CreateTaskRequest) WithIfNotExists(IfNotExists *bool) *CreateTaskRequest {
	s.IfNotExists = IfNotExists
	return s
}

func (s *CreateTaskRequest) WithWarehouse(Warehouse *CreateTaskWarehouseRequest) *CreateTaskRequest {
	s.Warehouse = Warehouse
	return s
}

func (s *CreateTaskRequest) WithSchedule(Schedule *string) *CreateTaskRequest {
	s.Schedule = Schedule
	return s
}

func (s *CreateTaskRequest) WithConfig(Config *string) *CreateTaskRequest {
	s.Config = Config
	return s
}

func (s *CreateTaskRequest) WithAllowOverlappingExecution(AllowOverlappingExecution *bool) *CreateTaskRequest {
	s.AllowOverlappingExecution = AllowOverlappingExecution
	return s
}

func (s *CreateTaskRequest) WithSessionParameters(SessionParameters *SessionParameters) *CreateTaskRequest {
	s.SessionParameters = SessionParameters
	return s
}

func (s *CreateTaskRequest) WithUserTaskTimeoutMs(UserTaskTimeoutMs *int) *CreateTaskRequest {
	s.UserTaskTimeoutMs = UserTaskTimeoutMs
	return s
}

func (s *CreateTaskRequest) WithSuspendTaskAfterNumFailures(SuspendTaskAfterNumFailures *int) *CreateTaskRequest {
	s.SuspendTaskAfterNumFailures = SuspendTaskAfterNumFailures
	return s
}

func (s *CreateTaskRequest) WithErrorIntegration(ErrorIntegration *string) *CreateTaskRequest {
	s.ErrorIntegration = ErrorIntegration
	return s
}

func (s *CreateTaskRequest) WithCopyGrants(CopyGrants *bool) *CreateTaskRequest {
	s.CopyGrants = CopyGrants
	return s
}

func (s *CreateTaskRequest) WithComment(Comment *string) *CreateTaskRequest {
	s.Comment = Comment
	return s
}

func (s *CreateTaskRequest) WithAfter(After []SchemaObjectIdentifier) *CreateTaskRequest {
	s.After = After
	return s
}

func (s *CreateTaskRequest) WithTag(Tag []TagAssociation) *CreateTaskRequest {
	s.Tag = Tag
	return s
}

func (s *CreateTaskRequest) WithWhen(When *string) *CreateTaskRequest {
	s.When = When
	return s
}

func NewCreateTaskWarehouseRequest() *CreateTaskWarehouseRequest {
	return &CreateTaskWarehouseRequest{}
}

func (s *CreateTaskWarehouseRequest) WithWarehouse(Warehouse *AccountObjectIdentifier) *CreateTaskWarehouseRequest {
	s.Warehouse = Warehouse
	return s
}

func (s *CreateTaskWarehouseRequest) WithUserTaskManagedInitialWarehouseSize(UserTaskManagedInitialWarehouseSize *string) *CreateTaskWarehouseRequest {
	s.UserTaskManagedInitialWarehouseSize = UserTaskManagedInitialWarehouseSize
	return s
}
