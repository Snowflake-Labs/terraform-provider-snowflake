package schemas

import (
	"strings"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// DescribeSecurityIntegrationSchema represents output of DESCRIBE query for the single SecurityIntegration.
var DescribeSecurityIntegrationSchema = map[string]*schema.Schema{
	"enabled":        DescribePropertyListSchema,
	"network_policy": DescribePropertyListSchema,
	"run_as_role":    DescribePropertyListSchema,
	"sync_password":  DescribePropertyListSchema,
	"comment":        DescribePropertyListSchema,
}

var _ = DescribeSecurityIntegrationSchema

var (
	// TODO(1501905): Should be generated by SHOW generator
	ShowSecurityIntegrationSchemaKeys     = make([]string, 0, len(ShowSecurityIntegrationSchema))
	DescribeSecurityIntegrationSchemaKeys = make([]string, 0, len(DescribeSecurityIntegrationSchema))
)

func init() {
	// TODO(1501905): Should be generated by SHOW generator
	for key := range ShowSecurityIntegrationSchema {
		ShowSecurityIntegrationSchemaKeys = append(ShowSecurityIntegrationSchemaKeys, key)
	}

	for key := range DescribeSecurityIntegrationSchema {
		DescribeSecurityIntegrationSchemaKeys = append(DescribeSecurityIntegrationSchemaKeys, key)
	}
}

func SecurityIntegrationPropertiesToSchema(securityIntegrationProperties []sdk.SecurityIntegrationProperty) map[string]any {
	securityIntegrationSchema := make(map[string]any)
	for _, securityIntegrationProperty := range securityIntegrationProperties {
		switch securityIntegrationProperty.Name {
		case "ENABLED",
			"NETWORK_POLICY",
			"RUN_AS_ROLE",
			"SYNC_PASSWORD",
			"COMMENT":
			securityIntegrationSchema[strings.ToLower(securityIntegrationProperty.Name)] = []map[string]any{
				{
					"name":    securityIntegrationProperty.Name,
					"type":    securityIntegrationProperty.Type,
					"value":   securityIntegrationProperty.Value,
					"default": securityIntegrationProperty.Default,
				},
			}
		}
	}
	return securityIntegrationSchema
}

var _ = SecurityIntegrationPropertiesToSchema
