// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowUserSchema represents output of SHOW query for the single User.
var ShowUserSchema = map[string]*schema.Schema{
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"login_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"display_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"first_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"last_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"email": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"mins_to_unlock": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"days_to_expiry": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"disabled": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"must_change_password": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"snowflake_lock": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"default_warehouse": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"default_namespace": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"default_role": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"default_secondary_roles": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"ext_authn_duo": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"ext_authn_uid": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"mins_to_bypass_mfa": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"last_success_login": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"expires_at_time": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"locked_until_time": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"has_password": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"has_rsa_public_key": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"type": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"has_mfa": {
		Type:     schema.TypeBool,
		Computed: true,
	},
}

var _ = ShowUserSchema

func UserToSchema(user *sdk.User) map[string]any {
	userSchema := make(map[string]any)
	userSchema["name"] = user.Name
	userSchema["created_on"] = user.CreatedOn.String()
	userSchema["login_name"] = user.LoginName
	userSchema["display_name"] = user.DisplayName
	userSchema["first_name"] = user.FirstName
	userSchema["last_name"] = user.LastName
	userSchema["email"] = user.Email
	userSchema["mins_to_unlock"] = user.MinsToUnlock
	userSchema["days_to_expiry"] = user.DaysToExpiry
	userSchema["comment"] = user.Comment
	userSchema["disabled"] = user.Disabled
	userSchema["must_change_password"] = user.MustChangePassword
	userSchema["snowflake_lock"] = user.SnowflakeLock
	userSchema["default_warehouse"] = user.DefaultWarehouse
	userSchema["default_namespace"] = user.DefaultNamespace
	userSchema["default_role"] = user.DefaultRole
	userSchema["default_secondary_roles"] = user.DefaultSecondaryRoles
	userSchema["ext_authn_duo"] = user.ExtAuthnDuo
	userSchema["ext_authn_uid"] = user.ExtAuthnUid
	userSchema["mins_to_bypass_mfa"] = user.MinsToBypassMfa
	userSchema["owner"] = user.Owner
	userSchema["last_success_login"] = user.LastSuccessLogin.String()
	userSchema["expires_at_time"] = user.ExpiresAtTime.String()
	userSchema["locked_until_time"] = user.LockedUntilTime.String()
	userSchema["has_password"] = user.HasPassword
	userSchema["has_rsa_public_key"] = user.HasRsaPublicKey
	userSchema["type"] = user.Type
	userSchema["has_mfa"] = user.HasMfa
	return userSchema
}

var _ = UserToSchema
