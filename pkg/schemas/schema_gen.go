// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowSchemaSchema represents output of SHOW query for the single Schema.
var ShowSchemaSchema = map[string]*schema.Schema{
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"dropped_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_default": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_current": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"database_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"options": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"retention_time": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner_role_type": {
		Type:     schema.TypeString,
		Computed: true,
	},
}

var _ = ShowSchemaSchema

func SchemaToSchema(schema *sdk.Schema) map[string]any {
	schemaSchema := make(map[string]any)
	schemaSchema["created_on"] = schema.CreatedOn.String()
	schemaSchema["dropped_on"] = schema.DroppedOn.String()
	schemaSchema["name"] = schema.Name
	schemaSchema["is_default"] = schema.IsDefault
	schemaSchema["is_current"] = schema.IsCurrent
	schemaSchema["database_name"] = schema.DatabaseName
	schemaSchema["owner"] = schema.Owner
	schemaSchema["comment"] = schema.Comment
	if schema.Options != nil {
		schemaSchema["options"] = schema.Options
	}
	schemaSchema["retention_time"] = schema.RetentionTime
	schemaSchema["owner_role_type"] = schema.OwnerRoleType
	return schemaSchema
}

var _ = SchemaToSchema
