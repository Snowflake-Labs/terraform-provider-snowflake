// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowExternalFunctionSchema represents output of SHOW query for the single ExternalFunction.
var ShowExternalFunctionSchema = map[string]*schema.Schema{
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"schema_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_builtin": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_aggregate": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_ansi": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"min_num_arguments": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"max_num_arguments": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"arguments": {
		Type:     schema.TypeInvalid,
		Computed: true,
	},
	"arguments_raw": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"description": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"catalog_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_table_function": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"valid_for_clustering": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_secure": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_external_function": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"language": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_memoizable": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_data_metric": {
		Type:     schema.TypeBool,
		Computed: true,
	},
}

var _ = ShowExternalFunctionSchema

func ExternalFunctionToSchema(externalFunction *sdk.ExternalFunction) map[string]any {
	externalFunctionSchema := make(map[string]any)
	externalFunctionSchema["created_on"] = externalFunction.CreatedOn
	externalFunctionSchema["name"] = externalFunction.Name
	externalFunctionSchema["schema_name"] = externalFunction.SchemaName
	externalFunctionSchema["is_builtin"] = externalFunction.IsBuiltin
	externalFunctionSchema["is_aggregate"] = externalFunction.IsAggregate
	externalFunctionSchema["is_ansi"] = externalFunction.IsAnsi
	externalFunctionSchema["min_num_arguments"] = externalFunction.MinNumArguments
	externalFunctionSchema["max_num_arguments"] = externalFunction.MaxNumArguments
	externalFunctionSchema["arguments"] = externalFunction.Arguments
	externalFunctionSchema["arguments_raw"] = externalFunction.ArgumentsRaw
	externalFunctionSchema["description"] = externalFunction.Description
	externalFunctionSchema["catalog_name"] = externalFunction.CatalogName
	externalFunctionSchema["is_table_function"] = externalFunction.IsTableFunction
	externalFunctionSchema["valid_for_clustering"] = externalFunction.ValidForClustering
	externalFunctionSchema["is_secure"] = externalFunction.IsSecure
	externalFunctionSchema["is_external_function"] = externalFunction.IsExternalFunction
	externalFunctionSchema["language"] = externalFunction.Language
	externalFunctionSchema["is_memoizable"] = externalFunction.IsMemoizable
	externalFunctionSchema["is_data_metric"] = externalFunction.IsDataMetric
	return externalFunctionSchema
}

var _ = ExternalFunctionToSchema
