// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowResourceMonitorSchema represents output of SHOW query for the single ResourceMonitor.
var ShowResourceMonitorSchema = map[string]*schema.Schema{
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"credit_quota": {
		Type:     schema.TypeFloat,
		Computed: true,
	},
	"used_credits": {
		Type:     schema.TypeFloat,
		Computed: true,
	},
	"remaining_credits": {
		Type:     schema.TypeFloat,
		Computed: true,
	},
	"frequency": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"start_time": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"end_time": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"suspend_at": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"suspend_immediate_at": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"notify_triggers": {
		Type:     schema.TypeInvalid,
		Computed: true,
	},
	"level": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"notify_users": {
		Type:     schema.TypeInvalid,
		Computed: true,
	},
}

var _ = ShowResourceMonitorSchema

func ResourceMonitorToSchema(resourceMonitor *sdk.ResourceMonitor) map[string]any {
	resourceMonitorSchema := make(map[string]any)
	resourceMonitorSchema["name"] = resourceMonitor.Name
	resourceMonitorSchema["credit_quota"] = resourceMonitor.CreditQuota
	resourceMonitorSchema["used_credits"] = resourceMonitor.UsedCredits
	resourceMonitorSchema["remaining_credits"] = resourceMonitor.RemainingCredits
	resourceMonitorSchema["frequency"] = string(resourceMonitor.Frequency)
	resourceMonitorSchema["start_time"] = resourceMonitor.StartTime
	resourceMonitorSchema["end_time"] = resourceMonitor.EndTime
	if resourceMonitor.SuspendAt != nil {
		resourceMonitorSchema["suspend_at"] = resourceMonitor.SuspendAt
	}
	if resourceMonitor.SuspendImmediateAt != nil {
		resourceMonitorSchema["suspend_immediate_at"] = resourceMonitor.SuspendImmediateAt
	}
	resourceMonitorSchema["notify_triggers"] = resourceMonitor.NotifyTriggers
	resourceMonitorSchema["level"] = int(resourceMonitor.Level)
	resourceMonitorSchema["comment"] = resourceMonitor.Comment
	resourceMonitorSchema["notify_users"] = resourceMonitor.NotifyUsers
	return resourceMonitorSchema
}

var _ = ResourceMonitorToSchema
