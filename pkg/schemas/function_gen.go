// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowFunctionSchema represents output of SHOW query for the single Function.
var ShowFunctionSchema = map[string]*schema.Schema{
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"schema_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_builtin": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_aggregate": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_ansi": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"min_num_arguments": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"max_num_arguments": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"arguments": {
		Type:     schema.TypeInvalid,
		Computed: true,
	},
	"arguments_raw": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"description": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"catalog_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_table_function": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"valid_for_clustering": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_secure": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_external_function": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"language": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_memoizable": {
		Type:     schema.TypeBool,
		Computed: true,
	},
}

var _ = ShowFunctionSchema

func FunctionToSchema(function *sdk.Function) map[string]any {
	functionSchema := make(map[string]any)
	functionSchema["created_on"] = function.CreatedOn
	functionSchema["name"] = function.Name
	functionSchema["schema_name"] = function.SchemaName
	functionSchema["is_builtin"] = function.IsBuiltin
	functionSchema["is_aggregate"] = function.IsAggregate
	functionSchema["is_ansi"] = function.IsAnsi
	functionSchema["min_num_arguments"] = function.MinNumArguments
	functionSchema["max_num_arguments"] = function.MaxNumArguments
	functionSchema["arguments"] = function.ArgumentsOld
	functionSchema["arguments_raw"] = function.ArgumentsRaw
	functionSchema["description"] = function.Description
	functionSchema["catalog_name"] = function.CatalogName
	functionSchema["is_table_function"] = function.IsTableFunction
	functionSchema["valid_for_clustering"] = function.ValidForClustering
	functionSchema["is_secure"] = function.IsSecure
	functionSchema["is_external_function"] = function.IsExternalFunction
	functionSchema["language"] = function.Language
	functionSchema["is_memoizable"] = function.IsMemoizable
	return functionSchema
}

var _ = FunctionToSchema
