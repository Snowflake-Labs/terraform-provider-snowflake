// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowReplicationDatabaseSchema represents output of SHOW query for the single ReplicationDatabase.
var ShowReplicationDatabaseSchema = map[string]*schema.Schema{
	"region_group": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"snowflake_region": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"account_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_primary": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"primary_database": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"replication_allowed_to_accounts": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"failover_allowed_to_accounts": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"organization_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"account_locator": {
		Type:     schema.TypeString,
		Computed: true,
	},
}

var _ = ShowReplicationDatabaseSchema

func ReplicationDatabaseToSchema(replicationDatabase *sdk.ReplicationDatabase) map[string]any {
	replicationDatabaseSchema := make(map[string]any)
	replicationDatabaseSchema["region_group"] = replicationDatabase.RegionGroup
	replicationDatabaseSchema["snowflake_region"] = replicationDatabase.SnowflakeRegion
	replicationDatabaseSchema["created_on"] = replicationDatabase.CreatedOn
	replicationDatabaseSchema["account_name"] = replicationDatabase.AccountName
	replicationDatabaseSchema["name"] = replicationDatabase.Name
	replicationDatabaseSchema["comment"] = replicationDatabase.Comment
	replicationDatabaseSchema["is_primary"] = replicationDatabase.IsPrimary
	if replicationDatabase.PrimaryDatabase != nil {
		replicationDatabaseSchema["primary_database"] = replicationDatabase.PrimaryDatabase.FullyQualifiedName()
	}
	replicationDatabaseSchema["replication_allowed_to_accounts"] = replicationDatabase.ReplicationAllowedToAccounts
	replicationDatabaseSchema["failover_allowed_to_accounts"] = replicationDatabase.FailoverAllowedToAccounts
	replicationDatabaseSchema["organization_name"] = replicationDatabase.OrganizationName
	replicationDatabaseSchema["account_locator"] = replicationDatabase.AccountLocator
	return replicationDatabaseSchema
}

var _ = ReplicationDatabaseToSchema
