// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowStageSchema represents output of SHOW query for the single Stage.
var ShowStageSchema = map[string]*schema.Schema{
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"database_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"schema_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"url": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"has_credentials": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"has_encryption_key": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"owner": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"region": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"type": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"cloud": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"storage_integration": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"endpoint": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner_role_type": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"directory_enabled": {
		Type:     schema.TypeBool,
		Computed: true,
	},
}

var _ = ShowStageSchema

func StageToSchema(stage *sdk.Stage) map[string]any {
	stageSchema := make(map[string]any)
	stageSchema["created_on"] = stage.CreatedOn.String()
	stageSchema["name"] = stage.Name
	stageSchema["database_name"] = stage.DatabaseName
	stageSchema["schema_name"] = stage.SchemaName
	stageSchema["url"] = stage.Url
	stageSchema["has_credentials"] = stage.HasCredentials
	stageSchema["has_encryption_key"] = stage.HasEncryptionKey
	stageSchema["owner"] = stage.Owner
	stageSchema["comment"] = stage.Comment
	if stage.Region != nil {
		stageSchema["region"] = stage.Region
	}
	stageSchema["type"] = stage.Type
	if stage.Cloud != nil {
		stageSchema["cloud"] = stage.Cloud
	}
	if stage.StorageIntegration != nil {
		stageSchema["storage_integration"] = stage.StorageIntegration
	}
	if stage.Endpoint != nil {
		stageSchema["endpoint"] = stage.Endpoint
	}
	if stage.OwnerRoleType != nil {
		stageSchema["owner_role_type"] = stage.OwnerRoleType
	}
	stageSchema["directory_enabled"] = stage.DirectoryEnabled
	return stageSchema
}

var _ = StageToSchema
