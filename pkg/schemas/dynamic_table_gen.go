// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowDynamicTableSchema represents output of SHOW query for the single DynamicTable.
var ShowDynamicTableSchema = map[string]*schema.Schema{
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"reserved": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"database_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"schema_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"cluster_by": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"rows": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"bytes": {
		Type:     schema.TypeInt,
		Computed: true,
	},
	"owner": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"target_lag": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"refresh_mode": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"refresh_mode_reason": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"warehouse": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"text": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"automatic_clustering": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"scheduling_state": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"last_suspended_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"is_clone": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"is_replica": {
		Type:     schema.TypeBool,
		Computed: true,
	},
	"data_timestamp": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner_role_type": {
		Type:     schema.TypeString,
		Computed: true,
	},
}

var _ = ShowDynamicTableSchema

func DynamicTableToSchema(dynamicTable *sdk.DynamicTable) map[string]any {
	dynamicTableSchema := make(map[string]any)
	dynamicTableSchema["created_on"] = dynamicTable.CreatedOn.String()
	dynamicTableSchema["name"] = dynamicTable.Name
	dynamicTableSchema["reserved"] = dynamicTable.Reserved
	dynamicTableSchema["database_name"] = dynamicTable.DatabaseName
	dynamicTableSchema["schema_name"] = dynamicTable.SchemaName
	dynamicTableSchema["cluster_by"] = dynamicTable.ClusterBy
	dynamicTableSchema["rows"] = dynamicTable.Rows
	dynamicTableSchema["bytes"] = dynamicTable.Bytes
	dynamicTableSchema["owner"] = dynamicTable.Owner
	dynamicTableSchema["target_lag"] = dynamicTable.TargetLag
	dynamicTableSchema["refresh_mode"] = string(dynamicTable.RefreshMode)
	dynamicTableSchema["refresh_mode_reason"] = dynamicTable.RefreshModeReason
	dynamicTableSchema["warehouse"] = dynamicTable.Warehouse
	dynamicTableSchema["comment"] = dynamicTable.Comment
	dynamicTableSchema["text"] = dynamicTable.Text
	dynamicTableSchema["automatic_clustering"] = dynamicTable.AutomaticClustering
	dynamicTableSchema["scheduling_state"] = string(dynamicTable.SchedulingState)
	dynamicTableSchema["last_suspended_on"] = dynamicTable.LastSuspendedOn.String()
	dynamicTableSchema["is_clone"] = dynamicTable.IsClone
	dynamicTableSchema["is_replica"] = dynamicTable.IsReplica
	dynamicTableSchema["data_timestamp"] = dynamicTable.DataTimestamp.String()
	dynamicTableSchema["owner_role_type"] = dynamicTable.OwnerRoleType
	return dynamicTableSchema
}

var _ = DynamicTableToSchema
