// Code generated by sdk-to-schema generator; DO NOT EDIT.

package schemas

import (
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// ShowAlertSchema represents output of SHOW query for the single Alert.
var ShowAlertSchema = map[string]*schema.Schema{
	"created_on": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"database_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"schema_name": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"comment": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"warehouse": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"schedule": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"state": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"condition": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"action": {
		Type:     schema.TypeString,
		Computed: true,
	},
	"owner_role_type": {
		Type:     schema.TypeString,
		Computed: true,
	},
}

var _ = ShowAlertSchema

func AlertToSchema(alert *sdk.Alert) map[string]any {
	alertSchema := make(map[string]any)
	alertSchema["created_on"] = alert.CreatedOn.String()
	alertSchema["name"] = alert.Name
	alertSchema["database_name"] = alert.DatabaseName
	alertSchema["schema_name"] = alert.SchemaName
	alertSchema["owner"] = alert.Owner
	if alert.Comment != nil {
		alertSchema["comment"] = alert.Comment
	}
	alertSchema["warehouse"] = alert.Warehouse
	alertSchema["schedule"] = alert.Schedule
	alertSchema["state"] = string(alert.State)
	alertSchema["condition"] = alert.Condition
	alertSchema["action"] = alert.Action
	alertSchema["owner_role_type"] = alert.OwnerRoleType
	return alertSchema
}

var _ = AlertToSchema
