// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type ExternalVolumeResourceAssert struct {
	*assert.ResourceAssert
}

func ExternalVolumeResource(t *testing.T, name string) *ExternalVolumeResourceAssert {
	t.Helper()

	return &ExternalVolumeResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedExternalVolumeResource(t *testing.T, id string) *ExternalVolumeResourceAssert {
	t.Helper()

	return &ExternalVolumeResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (e *ExternalVolumeResourceAssert) HasAllowWritesString(expected string) *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueSet("allow_writes", expected))
	return e
}

func (e *ExternalVolumeResourceAssert) HasCommentString(expected string) *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueSet("comment", expected))
	return e
}

func (e *ExternalVolumeResourceAssert) HasFullyQualifiedNameString(expected string) *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return e
}

func (e *ExternalVolumeResourceAssert) HasNameString(expected string) *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueSet("name", expected))
	return e
}

func (e *ExternalVolumeResourceAssert) HasStorageLocationString(expected string) *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueSet("storage_location", expected))
	return e
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (e *ExternalVolumeResourceAssert) HasNoAllowWrites() *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueNotSet("allow_writes"))
	return e
}

func (e *ExternalVolumeResourceAssert) HasNoComment() *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueNotSet("comment"))
	return e
}

func (e *ExternalVolumeResourceAssert) HasNoFullyQualifiedName() *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return e
}

func (e *ExternalVolumeResourceAssert) HasNoName() *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueNotSet("name"))
	return e
}

func (e *ExternalVolumeResourceAssert) HasNoStorageLocation() *ExternalVolumeResourceAssert {
	e.AddAssertion(assert.ValueNotSet("storage_location"))
	return e
}
