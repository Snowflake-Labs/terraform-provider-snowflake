// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type TagAssociationResourceAssert struct {
	*assert.ResourceAssert
}

func TagAssociationResource(t *testing.T, name string) *TagAssociationResourceAssert {
	t.Helper()

	return &TagAssociationResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedTagAssociationResource(t *testing.T, id string) *TagAssociationResourceAssert {
	t.Helper()

	return &TagAssociationResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (t *TagAssociationResourceAssert) HasObjectIdentifiersString(expected string) *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueSet("object_identifiers", expected))
	return t
}

func (t *TagAssociationResourceAssert) HasObjectNameString(expected string) *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueSet("object_name", expected))
	return t
}

func (t *TagAssociationResourceAssert) HasObjectTypeString(expected string) *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueSet("object_type", expected))
	return t
}

func (t *TagAssociationResourceAssert) HasSkipValidationString(expected string) *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueSet("skip_validation", expected))
	return t
}

func (t *TagAssociationResourceAssert) HasTagIdString(expected string) *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueSet("tag_id", expected))
	return t
}

func (t *TagAssociationResourceAssert) HasTagValueString(expected string) *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueSet("tag_value", expected))
	return t
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (t *TagAssociationResourceAssert) HasNoObjectIdentifiers() *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueNotSet("object_identifiers"))
	return t
}

func (t *TagAssociationResourceAssert) HasNoObjectName() *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueNotSet("object_name"))
	return t
}

func (t *TagAssociationResourceAssert) HasNoObjectType() *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueNotSet("object_type"))
	return t
}

func (t *TagAssociationResourceAssert) HasNoSkipValidation() *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueNotSet("skip_validation"))
	return t
}

func (t *TagAssociationResourceAssert) HasNoTagId() *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueNotSet("tag_id"))
	return t
}

func (t *TagAssociationResourceAssert) HasNoTagValue() *TagAssociationResourceAssert {
	t.AddAssertion(assert.ValueNotSet("tag_value"))
	return t
}
