// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type StreamOnTableResourceAssert struct {
	*assert.ResourceAssert
}

func StreamOnTableResource(t *testing.T, name string) *StreamOnTableResourceAssert {
	t.Helper()

	return &StreamOnTableResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedStreamOnTableResource(t *testing.T, id string) *StreamOnTableResourceAssert {
	t.Helper()

	return &StreamOnTableResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (s *StreamOnTableResourceAssert) HasAppendOnlyString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("append_only", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasAtString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("at", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasBeforeString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("before", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasCommentString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("comment", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasCopyGrantsString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("copy_grants", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasDatabaseString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("database", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasFullyQualifiedNameString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasNameString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("name", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasSchemaString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("schema", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasShowInitialRowsString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("show_initial_rows", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasStaleString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("stale", expected))
	return s
}

func (s *StreamOnTableResourceAssert) HasTableString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("table", expected))
	return s
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (s *StreamOnTableResourceAssert) HasNoAppendOnly() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("append_only"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoAt() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("at"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoBefore() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("before"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoComment() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("comment"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoCopyGrants() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("copy_grants"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoDatabase() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("database"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoFullyQualifiedName() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoName() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("name"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoSchema() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("schema"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoShowInitialRows() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("show_initial_rows"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoStale() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("stale"))
	return s
}

func (s *StreamOnTableResourceAssert) HasNoTable() *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueNotSet("table"))
	return s
}

func (s *StreamOnTableResourceAssert) HasStreamTypeString(expected string) *StreamOnTableResourceAssert {
	s.AddAssertion(assert.ValueSet("stream_type", expected))
	return s
}
