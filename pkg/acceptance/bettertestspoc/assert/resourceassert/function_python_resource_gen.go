// Code generated by assertions generator; DO NOT EDIT.

package resourceassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
)

type FunctionPythonResourceAssert struct {
	*assert.ResourceAssert
}

func FunctionPythonResource(t *testing.T, name string) *FunctionPythonResourceAssert {
	t.Helper()

	return &FunctionPythonResourceAssert{
		ResourceAssert: assert.NewResourceAssert(name, "resource"),
	}
}

func ImportedFunctionPythonResource(t *testing.T, id string) *FunctionPythonResourceAssert {
	t.Helper()

	return &FunctionPythonResourceAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported resource"),
	}
}

///////////////////////////////////
// Attribute value string checks //
///////////////////////////////////

func (f *FunctionPythonResourceAssert) HasArgumentsString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("arguments", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasCommentString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("comment", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasDatabaseString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("database", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasEnableConsoleOutputString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("enable_console_output", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasExternalAccessIntegrationsString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("external_access_integrations", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasFullyQualifiedNameString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("fully_qualified_name", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasFunctionDefinitionString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("function_definition", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasFunctionLanguageString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("function_language", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasHandlerString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("handler", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasImportsString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("imports", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasIsAggregateString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("is_aggregate", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasIsSecureString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("is_secure", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasLogLevelString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("log_level", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasMetricLevelString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("metric_level", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasNameString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("name", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasNullInputBehaviorString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("null_input_behavior", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasPackagesString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("packages", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasReturnResultsBehaviorString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("return_results_behavior", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasReturnTypeString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("return_type", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasRuntimeVersionString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("runtime_version", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasSchemaString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("schema", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasSecretsString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("secrets", expected))
	return f
}

func (f *FunctionPythonResourceAssert) HasTraceLevelString(expected string) *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("trace_level", expected))
	return f
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (f *FunctionPythonResourceAssert) HasNoArguments() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("arguments.#", "0"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoComment() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("comment"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoDatabase() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("database"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoEnableConsoleOutput() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("enable_console_output"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoExternalAccessIntegrations() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("external_access_integrations.#", "0"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoFullyQualifiedName() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("fully_qualified_name"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoFunctionDefinition() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("function_definition"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoFunctionLanguage() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("function_language"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoHandler() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("handler"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoImports() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("imports.#", "0"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoIsAggregate() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("is_aggregate"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoIsSecure() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("is_secure"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoLogLevel() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("log_level"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoMetricLevel() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("metric_level"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoName() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("name"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoNullInputBehavior() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("null_input_behavior"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoPackages() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("packages.#", "0"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoReturnResultsBehavior() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("return_results_behavior"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoReturnType() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("return_type"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoRuntimeVersion() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("runtime_version"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoSchema() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("schema"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoSecrets() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("secrets.#", "0"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNoTraceLevel() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueNotSet("trace_level"))
	return f
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (f *FunctionPythonResourceAssert) HasCommentEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("comment", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasDatabaseEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("database", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasFullyQualifiedNameEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("fully_qualified_name", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasFunctionDefinitionEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("function_definition", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasFunctionLanguageEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("function_language", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasHandlerEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("handler", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasIsAggregateEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("is_aggregate", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasIsSecureEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("is_secure", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasLogLevelEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("log_level", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasMetricLevelEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("metric_level", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasNameEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("name", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasNullInputBehaviorEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("null_input_behavior", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasReturnResultsBehaviorEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("return_results_behavior", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasReturnTypeEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("return_type", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasRuntimeVersionEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("runtime_version", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasSchemaEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("schema", ""))
	return f
}

func (f *FunctionPythonResourceAssert) HasTraceLevelEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValueSet("trace_level", ""))
	return f
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (f *FunctionPythonResourceAssert) HasArgumentsNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("arguments"))
	return f
}

func (f *FunctionPythonResourceAssert) HasCommentNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("comment"))
	return f
}

func (f *FunctionPythonResourceAssert) HasDatabaseNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("database"))
	return f
}

func (f *FunctionPythonResourceAssert) HasEnableConsoleOutputNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("enable_console_output"))
	return f
}

func (f *FunctionPythonResourceAssert) HasExternalAccessIntegrationsNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("external_access_integrations"))
	return f
}

func (f *FunctionPythonResourceAssert) HasFullyQualifiedNameNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("fully_qualified_name"))
	return f
}

func (f *FunctionPythonResourceAssert) HasFunctionDefinitionNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("function_definition"))
	return f
}

func (f *FunctionPythonResourceAssert) HasFunctionLanguageNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("function_language"))
	return f
}

func (f *FunctionPythonResourceAssert) HasHandlerNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("handler"))
	return f
}

func (f *FunctionPythonResourceAssert) HasImportsNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("imports"))
	return f
}

func (f *FunctionPythonResourceAssert) HasIsAggregateNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("is_aggregate"))
	return f
}

func (f *FunctionPythonResourceAssert) HasIsSecureNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("is_secure"))
	return f
}

func (f *FunctionPythonResourceAssert) HasLogLevelNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("log_level"))
	return f
}

func (f *FunctionPythonResourceAssert) HasMetricLevelNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("metric_level"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNameNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("name"))
	return f
}

func (f *FunctionPythonResourceAssert) HasNullInputBehaviorNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("null_input_behavior"))
	return f
}

func (f *FunctionPythonResourceAssert) HasPackagesNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("packages"))
	return f
}

func (f *FunctionPythonResourceAssert) HasReturnResultsBehaviorNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("return_results_behavior"))
	return f
}

func (f *FunctionPythonResourceAssert) HasReturnTypeNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("return_type"))
	return f
}

func (f *FunctionPythonResourceAssert) HasRuntimeVersionNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("runtime_version"))
	return f
}

func (f *FunctionPythonResourceAssert) HasSchemaNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("schema"))
	return f
}

func (f *FunctionPythonResourceAssert) HasSecretsNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("secrets"))
	return f
}

func (f *FunctionPythonResourceAssert) HasTraceLevelNotEmpty() *FunctionPythonResourceAssert {
	f.AddAssertion(assert.ValuePresent("trace_level"))
	return f
}
