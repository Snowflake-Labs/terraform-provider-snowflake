// Code generated by assertions generator; DO NOT EDIT.

package resourceparametersassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type DatabaseResourceParametersAssert struct {
	*assert.ResourceAssert
}

func DatabaseResourceParameters(t *testing.T, name string) *DatabaseResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := DatabaseResourceParametersAssert{
		ResourceAssert: assert.NewResourceAssert(name, "parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

func ImportedDatabaseResourceParameters(t *testing.T, id string) *DatabaseResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := DatabaseResourceParametersAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (d *DatabaseResourceParametersAssert) HasDataRetentionTimeInDays(expected int) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterIntValueSet(sdk.DatabaseParameterDataRetentionTimeInDays, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasMaxDataExtensionTimeInDays(expected int) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterIntValueSet(sdk.DatabaseParameterMaxDataExtensionTimeInDays, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasExternalVolume(expected string) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterValueSet(sdk.DatabaseParameterExternalVolume, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasCatalog(expected string) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterValueSet(sdk.DatabaseParameterCatalog, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasReplaceInvalidCharacters(expected bool) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.DatabaseParameterReplaceInvalidCharacters, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasDefaultDdlCollation(expected string) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterValueSet(sdk.DatabaseParameterDefaultDdlCollation, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasStorageSerializationPolicy(expected sdk.StorageSerializationPolicy) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.DatabaseParameterStorageSerializationPolicy, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasLogLevel(expected sdk.LogLevel) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.DatabaseParameterLogLevel, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasTraceLevel(expected sdk.TraceLevel) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.DatabaseParameterTraceLevel, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasSuspendTaskAfterNumFailures(expected int) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterIntValueSet(sdk.DatabaseParameterSuspendTaskAfterNumFailures, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasTaskAutoRetryAttempts(expected int) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterIntValueSet(sdk.DatabaseParameterTaskAutoRetryAttempts, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasUserTaskManagedInitialWarehouseSize(expected sdk.WarehouseSize) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.DatabaseParameterUserTaskManagedInitialWarehouseSize, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasUserTaskTimeoutMs(expected int) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterIntValueSet(sdk.DatabaseParameterUserTaskTimeoutMs, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasUserTaskMinimumTriggerIntervalInSeconds(expected int) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterIntValueSet(sdk.DatabaseParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasQuotedIdentifiersIgnoreCase(expected bool) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.DatabaseParameterQuotedIdentifiersIgnoreCase, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasEnableConsoleOutput(expected bool) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.DatabaseParameterEnableConsoleOutput, expected))
	return d
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (d *DatabaseResourceParametersAssert) HasDataRetentionTimeInDaysLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterDataRetentionTimeInDays, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasMaxDataExtensionTimeInDaysLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterMaxDataExtensionTimeInDays, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasExternalVolumeLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterExternalVolume, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasCatalogLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterCatalog, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasReplaceInvalidCharactersLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterReplaceInvalidCharacters, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasDefaultDdlCollationLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterDefaultDdlCollation, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasStorageSerializationPolicyLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterStorageSerializationPolicy, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasLogLevelLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterLogLevel, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasTraceLevelLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterTraceLevel, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasSuspendTaskAfterNumFailuresLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterSuspendTaskAfterNumFailures, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasTaskAutoRetryAttemptsLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterTaskAutoRetryAttempts, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasUserTaskManagedInitialWarehouseSizeLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterUserTaskManagedInitialWarehouseSize, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasUserTaskTimeoutMsLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterUserTaskTimeoutMs, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasUserTaskMinimumTriggerIntervalInSecondsLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasQuotedIdentifiersIgnoreCaseLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterQuotedIdentifiersIgnoreCase, expected))
	return d
}

func (d *DatabaseResourceParametersAssert) HasEnableConsoleOutputLevel(expected sdk.ParameterType) *DatabaseResourceParametersAssert {
	d.AddAssertion(assert.ResourceParameterLevelSet(sdk.DatabaseParameterEnableConsoleOutput, expected))
	return d
}
