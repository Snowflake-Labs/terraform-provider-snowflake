// Code generated by assertions generator; DO NOT EDIT.

package resourceparametersassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type ProcedureResourceParametersAssert struct {
	*assert.ResourceAssert
}

func ProcedureResourceParameters(t *testing.T, name string) *ProcedureResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := ProcedureResourceParametersAssert{
		ResourceAssert: assert.NewResourceAssert(name, "parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

func ImportedProcedureResourceParameters(t *testing.T, id string) *ProcedureResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := ProcedureResourceParametersAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (p *ProcedureResourceParametersAssert) HasAutoEventLogging(expected sdk.AutoEventLogging) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.ProcedureParameterAutoEventLogging, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasEnableConsoleOutput(expected bool) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.ProcedureParameterEnableConsoleOutput, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasLogLevel(expected sdk.LogLevel) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.ProcedureParameterLogLevel, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasMetricLevel(expected sdk.MetricLevel) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.ProcedureParameterMetricLevel, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasTraceLevel(expected sdk.TraceLevel) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.ProcedureParameterTraceLevel, expected))
	return p
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (p *ProcedureResourceParametersAssert) HasAutoEventLoggingLevel(expected sdk.ParameterType) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterLevelSet(sdk.ProcedureParameterAutoEventLogging, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasEnableConsoleOutputLevel(expected sdk.ParameterType) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterLevelSet(sdk.ProcedureParameterEnableConsoleOutput, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasLogLevelLevel(expected sdk.ParameterType) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterLevelSet(sdk.ProcedureParameterLogLevel, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasMetricLevelLevel(expected sdk.ParameterType) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterLevelSet(sdk.ProcedureParameterMetricLevel, expected))
	return p
}

func (p *ProcedureResourceParametersAssert) HasTraceLevelLevel(expected sdk.ParameterType) *ProcedureResourceParametersAssert {
	p.AddAssertion(assert.ResourceParameterLevelSet(sdk.ProcedureParameterTraceLevel, expected))
	return p
}
