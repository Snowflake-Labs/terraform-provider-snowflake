// Code generated by assertions generator; DO NOT EDIT.

package resourceparametersassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type TaskResourceParametersAssert struct {
	*assert.ResourceAssert
}

func TaskResourceParameters(t *testing.T, name string) *TaskResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := TaskResourceParametersAssert{
		ResourceAssert: assert.NewResourceAssert(name, "parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

func ImportedTaskResourceParameters(t *testing.T, id string) *TaskResourceParametersAssert {
	t.Helper()

	resourceParameterAssert := TaskResourceParametersAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "imported parameters"),
	}
	resourceParameterAssert.AddAssertion(assert.ValueSet("parameters.#", "1"))
	return &resourceParameterAssert
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (t *TaskResourceParametersAssert) HasSuspendTaskAfterNumFailures(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterSuspendTaskAfterNumFailures, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTaskAutoRetryAttempts(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterTaskAutoRetryAttempts, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUserTaskManagedInitialWarehouseSize(expected sdk.WarehouseSize) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterUserTaskManagedInitialWarehouseSize, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUserTaskMinimumTriggerIntervalInSeconds(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUserTaskTimeoutMs(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterUserTaskTimeoutMs, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasAbortDetachedQuery(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterAbortDetachedQuery, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasAutocommit(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterAutocommit, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasBinaryInputFormat(expected sdk.BinaryInputFormat) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterBinaryInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasBinaryOutputFormat(expected sdk.BinaryOutputFormat) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterBinaryOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientMemoryLimit(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterClientMemoryLimit, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientMetadataRequestUseConnectionCtx(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterClientMetadataRequestUseConnectionCtx, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientPrefetchThreads(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterClientPrefetchThreads, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientResultChunkSize(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterClientResultChunkSize, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientResultColumnCaseInsensitive(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterClientResultColumnCaseInsensitive, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientSessionKeepAlive(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterClientSessionKeepAlive, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientSessionKeepAliveHeartbeatFrequency(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterClientSessionKeepAliveHeartbeatFrequency, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientTimestampTypeMapping(expected sdk.ClientTimestampTypeMapping) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterClientTimestampTypeMapping, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasDateInputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterDateInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasDateOutputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterDateOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasEnableUnloadPhysicalTypeOptimization(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterEnableUnloadPhysicalTypeOptimization, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasErrorOnNondeterministicMerge(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterErrorOnNondeterministicMerge, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasErrorOnNondeterministicUpdate(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterErrorOnNondeterministicUpdate, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasGeographyOutputFormat(expected sdk.GeographyOutputFormat) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterGeographyOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasGeometryOutputFormat(expected sdk.GeometryOutputFormat) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterGeometryOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasJdbcTreatTimestampNtzAsUtc(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterJdbcTreatTimestampNtzAsUtc, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasJdbcUseSessionTimezone(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterJdbcUseSessionTimezone, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasJsonIndent(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterJsonIndent, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasLockTimeout(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterLockTimeout, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasLogLevel(expected sdk.LogLevel) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterLogLevel, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasMultiStatementCount(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterMultiStatementCount, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasNoorderSequenceAsDefault(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterNoorderSequenceAsDefault, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasOdbcTreatDecimalAsInt(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterOdbcTreatDecimalAsInt, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasQueryTag(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterQueryTag, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasQuotedIdentifiersIgnoreCase(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterQuotedIdentifiersIgnoreCase, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasRowsPerResultset(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterRowsPerResultset, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasS3StageVpceDnsName(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterS3StageVpceDnsName, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasSearchPath(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterSearchPath, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasStatementQueuedTimeoutInSeconds(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterStatementQueuedTimeoutInSeconds, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasStatementTimeoutInSeconds(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterStatementTimeoutInSeconds, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasStrictJsonOutput(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterStrictJsonOutput, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampDayIsAlways24h(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterTimestampDayIsAlways24h, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampInputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimestampInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampLtzOutputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimestampLtzOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampNtzOutputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimestampNtzOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampOutputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimestampOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampTypeMapping(expected sdk.TimestampTypeMapping) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterTimestampTypeMapping, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampTzOutputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimestampTzOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimezone(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimezone, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimeInputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimeInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimeOutputFormat(expected string) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterValueSet(sdk.TaskParameterTimeOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTraceLevel(expected sdk.TraceLevel) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterTraceLevel, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTransactionAbortOnError(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterTransactionAbortOnError, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTransactionDefaultIsolationLevel(expected sdk.TransactionDefaultIsolationLevel) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterTransactionDefaultIsolationLevel, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTwoDigitCenturyStart(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterTwoDigitCenturyStart, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUnsupportedDdlAction(expected sdk.UnsupportedDDLAction) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterStringUnderlyingValueSet(sdk.TaskParameterUnsupportedDdlAction, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUseCachedResult(expected bool) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterBoolValueSet(sdk.TaskParameterUseCachedResult, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasWeekOfYearPolicy(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterWeekOfYearPolicy, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasWeekStart(expected int) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterIntValueSet(sdk.TaskParameterWeekStart, expected))
	return t
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (t *TaskResourceParametersAssert) HasSuspendTaskAfterNumFailuresLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterSuspendTaskAfterNumFailures, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTaskAutoRetryAttemptsLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTaskAutoRetryAttempts, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUserTaskManagedInitialWarehouseSizeLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterUserTaskManagedInitialWarehouseSize, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUserTaskMinimumTriggerIntervalInSecondsLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUserTaskTimeoutMsLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterUserTaskTimeoutMs, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasAbortDetachedQueryLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterAbortDetachedQuery, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasAutocommitLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterAutocommit, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasBinaryInputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterBinaryInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasBinaryOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterBinaryOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientMemoryLimitLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientMemoryLimit, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientMetadataRequestUseConnectionCtxLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientMetadataRequestUseConnectionCtx, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientPrefetchThreadsLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientPrefetchThreads, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientResultChunkSizeLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientResultChunkSize, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientResultColumnCaseInsensitiveLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientResultColumnCaseInsensitive, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientSessionKeepAliveLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientSessionKeepAlive, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientSessionKeepAliveHeartbeatFrequencyLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientSessionKeepAliveHeartbeatFrequency, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasClientTimestampTypeMappingLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterClientTimestampTypeMapping, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasDateInputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterDateInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasDateOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterDateOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasEnableUnloadPhysicalTypeOptimizationLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterEnableUnloadPhysicalTypeOptimization, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasErrorOnNondeterministicMergeLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterErrorOnNondeterministicMerge, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasErrorOnNondeterministicUpdateLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterErrorOnNondeterministicUpdate, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasGeographyOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterGeographyOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasGeometryOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterGeometryOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasJdbcTreatTimestampNtzAsUtcLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterJdbcTreatTimestampNtzAsUtc, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasJdbcUseSessionTimezoneLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterJdbcUseSessionTimezone, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasJsonIndentLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterJsonIndent, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasLockTimeoutLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterLockTimeout, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasLogLevelLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterLogLevel, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasMultiStatementCountLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterMultiStatementCount, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasNoorderSequenceAsDefaultLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterNoorderSequenceAsDefault, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasOdbcTreatDecimalAsIntLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterOdbcTreatDecimalAsInt, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasQueryTagLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterQueryTag, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasQuotedIdentifiersIgnoreCaseLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterQuotedIdentifiersIgnoreCase, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasRowsPerResultsetLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterRowsPerResultset, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasS3StageVpceDnsNameLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterS3StageVpceDnsName, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasSearchPathLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterSearchPath, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasStatementQueuedTimeoutInSecondsLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterStatementQueuedTimeoutInSeconds, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasStatementTimeoutInSecondsLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterStatementTimeoutInSeconds, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasStrictJsonOutputLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterStrictJsonOutput, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampDayIsAlways24hLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampDayIsAlways24h, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampInputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampLtzOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampLtzOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampNtzOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampNtzOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampTypeMappingLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampTypeMapping, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimestampTzOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimestampTzOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimezoneLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimezone, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimeInputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimeInputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTimeOutputFormatLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTimeOutputFormat, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTraceLevelLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTraceLevel, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTransactionAbortOnErrorLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTransactionAbortOnError, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTransactionDefaultIsolationLevelLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTransactionDefaultIsolationLevel, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasTwoDigitCenturyStartLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterTwoDigitCenturyStart, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUnsupportedDdlActionLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterUnsupportedDdlAction, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasUseCachedResultLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterUseCachedResult, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasWeekOfYearPolicyLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterWeekOfYearPolicy, expected))
	return t
}

func (t *TaskResourceParametersAssert) HasWeekStartLevel(expected sdk.ParameterType) *TaskResourceParametersAssert {
	t.AddAssertion(assert.ResourceParameterLevelSet(sdk.TaskParameterWeekStart, expected))
	return t
}
