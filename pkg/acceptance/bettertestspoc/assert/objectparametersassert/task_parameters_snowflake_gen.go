// Code generated by assertions generator; DO NOT EDIT.

package objectparametersassert

import (
	"strings"
	"testing"

	acc "github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type TaskParametersAssert struct {
	*assert.SnowflakeParametersAssert[sdk.SchemaObjectIdentifier]
}

func TaskParameters(t *testing.T, id sdk.SchemaObjectIdentifier) *TaskParametersAssert {
	t.Helper()
	return &TaskParametersAssert{
		assert.NewSnowflakeParametersAssertWithProvider(id, sdk.ObjectTypeTask, acc.TestClient().Parameter.ShowTaskParameters),
	}
}

func TaskParametersPrefetched(t *testing.T, id sdk.SchemaObjectIdentifier, parameters []*sdk.Parameter) *TaskParametersAssert {
	t.Helper()
	return &TaskParametersAssert{
		assert.NewSnowflakeParametersAssertWithParameters(id, sdk.ObjectTypeTask, parameters),
	}
}

//////////////////////////////
// Generic parameter checks //
//////////////////////////////

func (t *TaskParametersAssert) HasBoolParameterValue(parameterName sdk.TaskParameter, expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(parameterName, expected))
	return t
}

func (t *TaskParametersAssert) HasIntParameterValue(parameterName sdk.TaskParameter, expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(parameterName, expected))
	return t
}

func (t *TaskParametersAssert) HasStringParameterValue(parameterName sdk.TaskParameter, expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(parameterName, expected))
	return t
}

func (t *TaskParametersAssert) HasDefaultParameterValue(parameterName sdk.TaskParameter) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterDefaultValueSet(parameterName))
	return t
}

func (t *TaskParametersAssert) HasDefaultParameterValueOnLevel(parameterName sdk.TaskParameter, parameterType sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterDefaultValueOnLevelSet(parameterName, parameterType))
	return t
}

///////////////////////////////
// Aggregated generic checks //
///////////////////////////////

// HasAllDefaults checks if all the parameters:
// - have a default value by comparing current value of the sdk.Parameter with its default
// - have an expected level
func (t *TaskParametersAssert) HasAllDefaults() *TaskParametersAssert {
	return t.
		HasDefaultParameterValueOnLevel(sdk.TaskParameterSuspendTaskAfterNumFailures, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTaskAutoRetryAttempts, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterUserTaskManagedInitialWarehouseSize, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterUserTaskMinimumTriggerIntervalInSeconds, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterUserTaskTimeoutMs, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterAbortDetachedQuery, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterAutocommit, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterBinaryInputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterBinaryOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientMemoryLimit, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientMetadataRequestUseConnectionCtx, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientPrefetchThreads, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientResultChunkSize, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientResultColumnCaseInsensitive, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientSessionKeepAlive, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientSessionKeepAliveHeartbeatFrequency, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterClientTimestampTypeMapping, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterDateInputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterDateOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterEnableUnloadPhysicalTypeOptimization, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterErrorOnNondeterministicMerge, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterErrorOnNondeterministicUpdate, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterGeographyOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterGeometryOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterJdbcTreatTimestampNtzAsUtc, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterJdbcUseSessionTimezone, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterJsonIndent, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterLockTimeout, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterLogLevel, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterMultiStatementCount, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterNoorderSequenceAsDefault, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterOdbcTreatDecimalAsInt, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterQueryTag, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterQuotedIdentifiersIgnoreCase, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterRowsPerResultset, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterS3StageVpceDnsName, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterSearchPath, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterStatementQueuedTimeoutInSeconds, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterStatementTimeoutInSeconds, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterStrictJsonOutput, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampDayIsAlways24h, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampInputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampLtzOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampNtzOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampTypeMapping, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimestampTzOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimezone, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimeInputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTimeOutputFormat, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTraceLevel, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTransactionAbortOnError, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTransactionDefaultIsolationLevel, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterTwoDigitCenturyStart, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterUnsupportedDdlAction, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterUseCachedResult, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterWeekOfYearPolicy, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.TaskParameterWeekStart, sdk.ParameterTypeSnowflakeDefault)
}

func (t *TaskParametersAssert) HasAllDefaultsExplicit() *TaskParametersAssert {
	return t.
		HasDefaultSuspendTaskAfterNumFailuresValueExplicit().
		HasDefaultTaskAutoRetryAttemptsValueExplicit().
		HasDefaultUserTaskManagedInitialWarehouseSizeValueExplicit().
		HasDefaultUserTaskMinimumTriggerIntervalInSecondsValueExplicit().
		HasDefaultUserTaskTimeoutMsValueExplicit().
		HasDefaultAbortDetachedQueryValueExplicit().
		HasDefaultAutocommitValueExplicit().
		HasDefaultBinaryInputFormatValueExplicit().
		HasDefaultBinaryOutputFormatValueExplicit().
		HasDefaultClientMemoryLimitValueExplicit().
		HasDefaultClientMetadataRequestUseConnectionCtxValueExplicit().
		HasDefaultClientPrefetchThreadsValueExplicit().
		HasDefaultClientResultChunkSizeValueExplicit().
		HasDefaultClientResultColumnCaseInsensitiveValueExplicit().
		HasDefaultClientSessionKeepAliveValueExplicit().
		HasDefaultClientSessionKeepAliveHeartbeatFrequencyValueExplicit().
		HasDefaultClientTimestampTypeMappingValueExplicit().
		HasDefaultDateInputFormatValueExplicit().
		HasDefaultDateOutputFormatValueExplicit().
		HasDefaultEnableUnloadPhysicalTypeOptimizationValueExplicit().
		HasDefaultErrorOnNondeterministicMergeValueExplicit().
		HasDefaultErrorOnNondeterministicUpdateValueExplicit().
		HasDefaultGeographyOutputFormatValueExplicit().
		HasDefaultGeometryOutputFormatValueExplicit().
		HasDefaultJdbcTreatTimestampNtzAsUtcValueExplicit().
		HasDefaultJdbcUseSessionTimezoneValueExplicit().
		HasDefaultJsonIndentValueExplicit().
		HasDefaultLockTimeoutValueExplicit().
		HasDefaultLogLevelValueExplicit().
		HasDefaultMultiStatementCountValueExplicit().
		HasDefaultNoorderSequenceAsDefaultValueExplicit().
		HasDefaultOdbcTreatDecimalAsIntValueExplicit().
		HasDefaultQueryTagValueExplicit().
		HasDefaultQuotedIdentifiersIgnoreCaseValueExplicit().
		HasDefaultRowsPerResultsetValueExplicit().
		HasDefaultS3StageVpceDnsNameValueExplicit().
		HasDefaultSearchPathValueExplicit().
		HasDefaultStatementQueuedTimeoutInSecondsValueExplicit().
		HasDefaultStatementTimeoutInSecondsValueExplicit().
		HasDefaultStrictJsonOutputValueExplicit().
		HasDefaultTimestampDayIsAlways24hValueExplicit().
		HasDefaultTimestampInputFormatValueExplicit().
		HasDefaultTimestampLtzOutputFormatValueExplicit().
		HasDefaultTimestampNtzOutputFormatValueExplicit().
		HasDefaultTimestampOutputFormatValueExplicit().
		HasDefaultTimestampTypeMappingValueExplicit().
		HasDefaultTimestampTzOutputFormatValueExplicit().
		HasDefaultTimezoneValueExplicit().
		HasDefaultTimeInputFormatValueExplicit().
		HasDefaultTimeOutputFormatValueExplicit().
		HasDefaultTraceLevelValueExplicit().
		HasDefaultTransactionAbortOnErrorValueExplicit().
		HasDefaultTransactionDefaultIsolationLevelValueExplicit().
		HasDefaultTwoDigitCenturyStartValueExplicit().
		HasDefaultUnsupportedDdlActionValueExplicit().
		HasDefaultUseCachedResultValueExplicit().
		HasDefaultWeekOfYearPolicyValueExplicit().
		HasDefaultWeekStartValueExplicit()
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (t *TaskParametersAssert) HasSuspendTaskAfterNumFailures(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterSuspendTaskAfterNumFailures, expected))
	return t
}

func (t *TaskParametersAssert) HasTaskAutoRetryAttempts(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterTaskAutoRetryAttempts, expected))
	return t
}

func (t *TaskParametersAssert) HasUserTaskManagedInitialWarehouseSize(expected sdk.WarehouseSize) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterUserTaskManagedInitialWarehouseSize, expected))
	return t
}

func (t *TaskParametersAssert) HasUserTaskMinimumTriggerIntervalInSeconds(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return t
}

func (t *TaskParametersAssert) HasUserTaskTimeoutMs(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterUserTaskTimeoutMs, expected))
	return t
}

func (t *TaskParametersAssert) HasAbortDetachedQuery(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterAbortDetachedQuery, expected))
	return t
}

func (t *TaskParametersAssert) HasAutocommit(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterAutocommit, expected))
	return t
}

func (t *TaskParametersAssert) HasBinaryInputFormat(expected sdk.BinaryInputFormat) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterBinaryInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasBinaryOutputFormat(expected sdk.BinaryOutputFormat) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterBinaryOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasClientMemoryLimit(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterClientMemoryLimit, expected))
	return t
}

func (t *TaskParametersAssert) HasClientMetadataRequestUseConnectionCtx(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterClientMetadataRequestUseConnectionCtx, expected))
	return t
}

func (t *TaskParametersAssert) HasClientPrefetchThreads(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterClientPrefetchThreads, expected))
	return t
}

func (t *TaskParametersAssert) HasClientResultChunkSize(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterClientResultChunkSize, expected))
	return t
}

func (t *TaskParametersAssert) HasClientResultColumnCaseInsensitive(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterClientResultColumnCaseInsensitive, expected))
	return t
}

func (t *TaskParametersAssert) HasClientSessionKeepAlive(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterClientSessionKeepAlive, expected))
	return t
}

func (t *TaskParametersAssert) HasClientSessionKeepAliveHeartbeatFrequency(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterClientSessionKeepAliveHeartbeatFrequency, expected))
	return t
}

func (t *TaskParametersAssert) HasClientTimestampTypeMapping(expected sdk.ClientTimestampTypeMapping) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterClientTimestampTypeMapping, expected))
	return t
}

func (t *TaskParametersAssert) HasDateInputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterDateInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasDateOutputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterDateOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasEnableUnloadPhysicalTypeOptimization(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterEnableUnloadPhysicalTypeOptimization, expected))
	return t
}

func (t *TaskParametersAssert) HasErrorOnNondeterministicMerge(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterErrorOnNondeterministicMerge, expected))
	return t
}

func (t *TaskParametersAssert) HasErrorOnNondeterministicUpdate(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterErrorOnNondeterministicUpdate, expected))
	return t
}

func (t *TaskParametersAssert) HasGeographyOutputFormat(expected sdk.GeographyOutputFormat) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterGeographyOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasGeometryOutputFormat(expected sdk.GeometryOutputFormat) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterGeometryOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasJdbcTreatTimestampNtzAsUtc(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterJdbcTreatTimestampNtzAsUtc, expected))
	return t
}

func (t *TaskParametersAssert) HasJdbcUseSessionTimezone(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterJdbcUseSessionTimezone, expected))
	return t
}

func (t *TaskParametersAssert) HasJsonIndent(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterJsonIndent, expected))
	return t
}

func (t *TaskParametersAssert) HasLockTimeout(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterLockTimeout, expected))
	return t
}

func (t *TaskParametersAssert) HasLogLevel(expected sdk.LogLevel) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterLogLevel, expected))
	return t
}

func (t *TaskParametersAssert) HasMultiStatementCount(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterMultiStatementCount, expected))
	return t
}

func (t *TaskParametersAssert) HasNoorderSequenceAsDefault(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterNoorderSequenceAsDefault, expected))
	return t
}

func (t *TaskParametersAssert) HasOdbcTreatDecimalAsInt(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterOdbcTreatDecimalAsInt, expected))
	return t
}

func (t *TaskParametersAssert) HasQueryTag(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterQueryTag, expected))
	return t
}

func (t *TaskParametersAssert) HasQuotedIdentifiersIgnoreCase(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterQuotedIdentifiersIgnoreCase, expected))
	return t
}

func (t *TaskParametersAssert) HasRowsPerResultset(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterRowsPerResultset, expected))
	return t
}

func (t *TaskParametersAssert) HasS3StageVpceDnsName(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterS3StageVpceDnsName, expected))
	return t
}

func (t *TaskParametersAssert) HasSearchPath(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterSearchPath, expected))
	return t
}

func (t *TaskParametersAssert) HasStatementQueuedTimeoutInSeconds(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterStatementQueuedTimeoutInSeconds, expected))
	return t
}

func (t *TaskParametersAssert) HasStatementTimeoutInSeconds(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterStatementTimeoutInSeconds, expected))
	return t
}

func (t *TaskParametersAssert) HasStrictJsonOutput(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterStrictJsonOutput, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampDayIsAlways24h(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterTimestampDayIsAlways24h, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampInputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimestampInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampLtzOutputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimestampLtzOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampNtzOutputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimestampNtzOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampOutputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimestampOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampTypeMapping(expected sdk.TimestampTypeMapping) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterTimestampTypeMapping, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampTzOutputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimestampTzOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimezone(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimezone, expected))
	return t
}

func (t *TaskParametersAssert) HasTimeInputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimeInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimeOutputFormat(expected string) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterValueSet(sdk.TaskParameterTimeOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTraceLevel(expected sdk.TraceLevel) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterTraceLevel, expected))
	return t
}

func (t *TaskParametersAssert) HasTransactionAbortOnError(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterTransactionAbortOnError, expected))
	return t
}

func (t *TaskParametersAssert) HasTransactionDefaultIsolationLevel(expected sdk.TransactionDefaultIsolationLevel) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterTransactionDefaultIsolationLevel, expected))
	return t
}

func (t *TaskParametersAssert) HasTwoDigitCenturyStart(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterTwoDigitCenturyStart, expected))
	return t
}

func (t *TaskParametersAssert) HasUnsupportedDdlAction(expected sdk.UnsupportedDDLAction) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.TaskParameterUnsupportedDdlAction, expected))
	return t
}

func (t *TaskParametersAssert) HasUseCachedResult(expected bool) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.TaskParameterUseCachedResult, expected))
	return t
}

func (t *TaskParametersAssert) HasWeekOfYearPolicy(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterWeekOfYearPolicy, expected))
	return t
}

func (t *TaskParametersAssert) HasWeekStart(expected int) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterIntValueSet(sdk.TaskParameterWeekStart, expected))
	return t
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (t *TaskParametersAssert) HasSuspendTaskAfterNumFailuresLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterSuspendTaskAfterNumFailures, expected))
	return t
}

func (t *TaskParametersAssert) HasTaskAutoRetryAttemptsLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTaskAutoRetryAttempts, expected))
	return t
}

func (t *TaskParametersAssert) HasUserTaskManagedInitialWarehouseSizeLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterUserTaskManagedInitialWarehouseSize, expected))
	return t
}

func (t *TaskParametersAssert) HasUserTaskMinimumTriggerIntervalInSecondsLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterUserTaskMinimumTriggerIntervalInSeconds, expected))
	return t
}

func (t *TaskParametersAssert) HasUserTaskTimeoutMsLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterUserTaskTimeoutMs, expected))
	return t
}

func (t *TaskParametersAssert) HasAbortDetachedQueryLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterAbortDetachedQuery, expected))
	return t
}

func (t *TaskParametersAssert) HasAutocommitLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterAutocommit, expected))
	return t
}

func (t *TaskParametersAssert) HasBinaryInputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterBinaryInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasBinaryOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterBinaryOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasClientMemoryLimitLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientMemoryLimit, expected))
	return t
}

func (t *TaskParametersAssert) HasClientMetadataRequestUseConnectionCtxLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientMetadataRequestUseConnectionCtx, expected))
	return t
}

func (t *TaskParametersAssert) HasClientPrefetchThreadsLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientPrefetchThreads, expected))
	return t
}

func (t *TaskParametersAssert) HasClientResultChunkSizeLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientResultChunkSize, expected))
	return t
}

func (t *TaskParametersAssert) HasClientResultColumnCaseInsensitiveLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientResultColumnCaseInsensitive, expected))
	return t
}

func (t *TaskParametersAssert) HasClientSessionKeepAliveLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientSessionKeepAlive, expected))
	return t
}

func (t *TaskParametersAssert) HasClientSessionKeepAliveHeartbeatFrequencyLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientSessionKeepAliveHeartbeatFrequency, expected))
	return t
}

func (t *TaskParametersAssert) HasClientTimestampTypeMappingLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterClientTimestampTypeMapping, expected))
	return t
}

func (t *TaskParametersAssert) HasDateInputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterDateInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasDateOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterDateOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasEnableUnloadPhysicalTypeOptimizationLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterEnableUnloadPhysicalTypeOptimization, expected))
	return t
}

func (t *TaskParametersAssert) HasErrorOnNondeterministicMergeLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterErrorOnNondeterministicMerge, expected))
	return t
}

func (t *TaskParametersAssert) HasErrorOnNondeterministicUpdateLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterErrorOnNondeterministicUpdate, expected))
	return t
}

func (t *TaskParametersAssert) HasGeographyOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterGeographyOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasGeometryOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterGeometryOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasJdbcTreatTimestampNtzAsUtcLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterJdbcTreatTimestampNtzAsUtc, expected))
	return t
}

func (t *TaskParametersAssert) HasJdbcUseSessionTimezoneLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterJdbcUseSessionTimezone, expected))
	return t
}

func (t *TaskParametersAssert) HasJsonIndentLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterJsonIndent, expected))
	return t
}

func (t *TaskParametersAssert) HasLockTimeoutLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterLockTimeout, expected))
	return t
}

func (t *TaskParametersAssert) HasLogLevelLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterLogLevel, expected))
	return t
}

func (t *TaskParametersAssert) HasMultiStatementCountLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterMultiStatementCount, expected))
	return t
}

func (t *TaskParametersAssert) HasNoorderSequenceAsDefaultLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterNoorderSequenceAsDefault, expected))
	return t
}

func (t *TaskParametersAssert) HasOdbcTreatDecimalAsIntLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterOdbcTreatDecimalAsInt, expected))
	return t
}

func (t *TaskParametersAssert) HasQueryTagLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterQueryTag, expected))
	return t
}

func (t *TaskParametersAssert) HasQuotedIdentifiersIgnoreCaseLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterQuotedIdentifiersIgnoreCase, expected))
	return t
}

func (t *TaskParametersAssert) HasRowsPerResultsetLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterRowsPerResultset, expected))
	return t
}

func (t *TaskParametersAssert) HasS3StageVpceDnsNameLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterS3StageVpceDnsName, expected))
	return t
}

func (t *TaskParametersAssert) HasSearchPathLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterSearchPath, expected))
	return t
}

func (t *TaskParametersAssert) HasStatementQueuedTimeoutInSecondsLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterStatementQueuedTimeoutInSeconds, expected))
	return t
}

func (t *TaskParametersAssert) HasStatementTimeoutInSecondsLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterStatementTimeoutInSeconds, expected))
	return t
}

func (t *TaskParametersAssert) HasStrictJsonOutputLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterStrictJsonOutput, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampDayIsAlways24hLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampDayIsAlways24h, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampInputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampLtzOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampLtzOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampNtzOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampNtzOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampTypeMappingLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampTypeMapping, expected))
	return t
}

func (t *TaskParametersAssert) HasTimestampTzOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimestampTzOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimezoneLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimezone, expected))
	return t
}

func (t *TaskParametersAssert) HasTimeInputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimeInputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTimeOutputFormatLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTimeOutputFormat, expected))
	return t
}

func (t *TaskParametersAssert) HasTraceLevelLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTraceLevel, expected))
	return t
}

func (t *TaskParametersAssert) HasTransactionAbortOnErrorLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTransactionAbortOnError, expected))
	return t
}

func (t *TaskParametersAssert) HasTransactionDefaultIsolationLevelLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTransactionDefaultIsolationLevel, expected))
	return t
}

func (t *TaskParametersAssert) HasTwoDigitCenturyStartLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterTwoDigitCenturyStart, expected))
	return t
}

func (t *TaskParametersAssert) HasUnsupportedDdlActionLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterUnsupportedDdlAction, expected))
	return t
}

func (t *TaskParametersAssert) HasUseCachedResultLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterUseCachedResult, expected))
	return t
}

func (t *TaskParametersAssert) HasWeekOfYearPolicyLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterWeekOfYearPolicy, expected))
	return t
}

func (t *TaskParametersAssert) HasWeekStartLevel(expected sdk.ParameterType) *TaskParametersAssert {
	t.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.TaskParameterWeekStart, expected))
	return t
}

////////////////////////////////////
// Parameter default value checks //
////////////////////////////////////

func (t *TaskParametersAssert) HasDefaultSuspendTaskAfterNumFailuresValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterSuspendTaskAfterNumFailures)
}

func (t *TaskParametersAssert) HasDefaultTaskAutoRetryAttemptsValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTaskAutoRetryAttempts)
}

func (t *TaskParametersAssert) HasDefaultUserTaskManagedInitialWarehouseSizeValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterUserTaskManagedInitialWarehouseSize)
}

func (t *TaskParametersAssert) HasDefaultUserTaskMinimumTriggerIntervalInSecondsValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterUserTaskMinimumTriggerIntervalInSeconds)
}

func (t *TaskParametersAssert) HasDefaultUserTaskTimeoutMsValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterUserTaskTimeoutMs)
}

func (t *TaskParametersAssert) HasDefaultAbortDetachedQueryValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterAbortDetachedQuery)
}

func (t *TaskParametersAssert) HasDefaultAutocommitValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterAutocommit)
}

func (t *TaskParametersAssert) HasDefaultBinaryInputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterBinaryInputFormat)
}

func (t *TaskParametersAssert) HasDefaultBinaryOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterBinaryOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultClientMemoryLimitValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientMemoryLimit)
}

func (t *TaskParametersAssert) HasDefaultClientMetadataRequestUseConnectionCtxValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientMetadataRequestUseConnectionCtx)
}

func (t *TaskParametersAssert) HasDefaultClientPrefetchThreadsValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientPrefetchThreads)
}

func (t *TaskParametersAssert) HasDefaultClientResultChunkSizeValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientResultChunkSize)
}

func (t *TaskParametersAssert) HasDefaultClientResultColumnCaseInsensitiveValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientResultColumnCaseInsensitive)
}

func (t *TaskParametersAssert) HasDefaultClientSessionKeepAliveValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientSessionKeepAlive)
}

func (t *TaskParametersAssert) HasDefaultClientSessionKeepAliveHeartbeatFrequencyValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientSessionKeepAliveHeartbeatFrequency)
}

func (t *TaskParametersAssert) HasDefaultClientTimestampTypeMappingValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterClientTimestampTypeMapping)
}

func (t *TaskParametersAssert) HasDefaultDateInputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterDateInputFormat)
}

func (t *TaskParametersAssert) HasDefaultDateOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterDateOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultEnableUnloadPhysicalTypeOptimizationValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterEnableUnloadPhysicalTypeOptimization)
}

func (t *TaskParametersAssert) HasDefaultErrorOnNondeterministicMergeValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterErrorOnNondeterministicMerge)
}

func (t *TaskParametersAssert) HasDefaultErrorOnNondeterministicUpdateValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterErrorOnNondeterministicUpdate)
}

func (t *TaskParametersAssert) HasDefaultGeographyOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterGeographyOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultGeometryOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterGeometryOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultJdbcTreatTimestampNtzAsUtcValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterJdbcTreatTimestampNtzAsUtc)
}

func (t *TaskParametersAssert) HasDefaultJdbcUseSessionTimezoneValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterJdbcUseSessionTimezone)
}

func (t *TaskParametersAssert) HasDefaultJsonIndentValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterJsonIndent)
}

func (t *TaskParametersAssert) HasDefaultLockTimeoutValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterLockTimeout)
}

func (t *TaskParametersAssert) HasDefaultLogLevelValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterLogLevel)
}

func (t *TaskParametersAssert) HasDefaultMultiStatementCountValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterMultiStatementCount)
}

func (t *TaskParametersAssert) HasDefaultNoorderSequenceAsDefaultValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterNoorderSequenceAsDefault)
}

func (t *TaskParametersAssert) HasDefaultOdbcTreatDecimalAsIntValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterOdbcTreatDecimalAsInt)
}

func (t *TaskParametersAssert) HasDefaultQueryTagValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterQueryTag)
}

func (t *TaskParametersAssert) HasDefaultQuotedIdentifiersIgnoreCaseValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterQuotedIdentifiersIgnoreCase)
}

func (t *TaskParametersAssert) HasDefaultRowsPerResultsetValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterRowsPerResultset)
}

func (t *TaskParametersAssert) HasDefaultS3StageVpceDnsNameValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterS3StageVpceDnsName)
}

func (t *TaskParametersAssert) HasDefaultSearchPathValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterSearchPath)
}

func (t *TaskParametersAssert) HasDefaultStatementQueuedTimeoutInSecondsValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterStatementQueuedTimeoutInSeconds)
}

func (t *TaskParametersAssert) HasDefaultStatementTimeoutInSecondsValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterStatementTimeoutInSeconds)
}

func (t *TaskParametersAssert) HasDefaultStrictJsonOutputValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterStrictJsonOutput)
}

func (t *TaskParametersAssert) HasDefaultTimestampDayIsAlways24hValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampDayIsAlways24h)
}

func (t *TaskParametersAssert) HasDefaultTimestampInputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampInputFormat)
}

func (t *TaskParametersAssert) HasDefaultTimestampLtzOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampLtzOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultTimestampNtzOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampNtzOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultTimestampOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultTimestampTypeMappingValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampTypeMapping)
}

func (t *TaskParametersAssert) HasDefaultTimestampTzOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimestampTzOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultTimezoneValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimezone)
}

func (t *TaskParametersAssert) HasDefaultTimeInputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimeInputFormat)
}

func (t *TaskParametersAssert) HasDefaultTimeOutputFormatValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTimeOutputFormat)
}

func (t *TaskParametersAssert) HasDefaultTraceLevelValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTraceLevel)
}

func (t *TaskParametersAssert) HasDefaultTransactionAbortOnErrorValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTransactionAbortOnError)
}

func (t *TaskParametersAssert) HasDefaultTransactionDefaultIsolationLevelValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTransactionDefaultIsolationLevel)
}

func (t *TaskParametersAssert) HasDefaultTwoDigitCenturyStartValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterTwoDigitCenturyStart)
}

func (t *TaskParametersAssert) HasDefaultUnsupportedDdlActionValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterUnsupportedDdlAction)
}

func (t *TaskParametersAssert) HasDefaultUseCachedResultValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterUseCachedResult)
}

func (t *TaskParametersAssert) HasDefaultWeekOfYearPolicyValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterWeekOfYearPolicy)
}

func (t *TaskParametersAssert) HasDefaultWeekStartValue() *TaskParametersAssert {
	return t.HasDefaultParameterValue(sdk.TaskParameterWeekStart)
}

/////////////////////////////////////////////
// Parameter explicit default value checks //
/////////////////////////////////////////////

func (t *TaskParametersAssert) HasDefaultSuspendTaskAfterNumFailuresValueExplicit() *TaskParametersAssert {
	return t.HasSuspendTaskAfterNumFailures(10)
}

func (t *TaskParametersAssert) HasDefaultTaskAutoRetryAttemptsValueExplicit() *TaskParametersAssert {
	return t.HasTaskAutoRetryAttempts(0)
}

func (t *TaskParametersAssert) HasDefaultUserTaskManagedInitialWarehouseSizeValueExplicit() *TaskParametersAssert {
	return t.HasUserTaskManagedInitialWarehouseSize(sdk.WarehouseSize("Medium"))
}

func (t *TaskParametersAssert) HasDefaultUserTaskMinimumTriggerIntervalInSecondsValueExplicit() *TaskParametersAssert {
	return t.HasUserTaskMinimumTriggerIntervalInSeconds(30)
}

func (t *TaskParametersAssert) HasDefaultUserTaskTimeoutMsValueExplicit() *TaskParametersAssert {
	return t.HasUserTaskTimeoutMs(3600000)
}

func (t *TaskParametersAssert) HasDefaultAbortDetachedQueryValueExplicit() *TaskParametersAssert {
	return t.HasAbortDetachedQuery(false)
}

func (t *TaskParametersAssert) HasDefaultAutocommitValueExplicit() *TaskParametersAssert {
	return t.HasAutocommit(true)
}

func (t *TaskParametersAssert) HasDefaultBinaryInputFormatValueExplicit() *TaskParametersAssert {
	return t.HasBinaryInputFormat(sdk.BinaryInputFormatHex)
}

func (t *TaskParametersAssert) HasDefaultBinaryOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasBinaryOutputFormat(sdk.BinaryOutputFormatHex)
}

func (t *TaskParametersAssert) HasDefaultClientMemoryLimitValueExplicit() *TaskParametersAssert {
	return t.HasClientMemoryLimit(1536)
}

func (t *TaskParametersAssert) HasDefaultClientMetadataRequestUseConnectionCtxValueExplicit() *TaskParametersAssert {
	return t.HasClientMetadataRequestUseConnectionCtx(false)
}

func (t *TaskParametersAssert) HasDefaultClientPrefetchThreadsValueExplicit() *TaskParametersAssert {
	return t.HasClientPrefetchThreads(4)
}

func (t *TaskParametersAssert) HasDefaultClientResultChunkSizeValueExplicit() *TaskParametersAssert {
	return t.HasClientResultChunkSize(160)
}

func (t *TaskParametersAssert) HasDefaultClientResultColumnCaseInsensitiveValueExplicit() *TaskParametersAssert {
	return t.HasClientResultColumnCaseInsensitive(false)
}

func (t *TaskParametersAssert) HasDefaultClientSessionKeepAliveValueExplicit() *TaskParametersAssert {
	return t.HasClientSessionKeepAlive(false)
}

func (t *TaskParametersAssert) HasDefaultClientSessionKeepAliveHeartbeatFrequencyValueExplicit() *TaskParametersAssert {
	return t.HasClientSessionKeepAliveHeartbeatFrequency(3600)
}

func (t *TaskParametersAssert) HasDefaultClientTimestampTypeMappingValueExplicit() *TaskParametersAssert {
	return t.HasClientTimestampTypeMapping(sdk.ClientTimestampTypeMappingLtz)
}

func (t *TaskParametersAssert) HasDefaultDateInputFormatValueExplicit() *TaskParametersAssert {
	return t.HasDateInputFormat("AUTO")
}

func (t *TaskParametersAssert) HasDefaultDateOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasDateOutputFormat("YYYY-MM-DD")
}

func (t *TaskParametersAssert) HasDefaultEnableUnloadPhysicalTypeOptimizationValueExplicit() *TaskParametersAssert {
	return t.HasEnableUnloadPhysicalTypeOptimization(true)
}

func (t *TaskParametersAssert) HasDefaultErrorOnNondeterministicMergeValueExplicit() *TaskParametersAssert {
	return t.HasErrorOnNondeterministicMerge(true)
}

func (t *TaskParametersAssert) HasDefaultErrorOnNondeterministicUpdateValueExplicit() *TaskParametersAssert {
	return t.HasErrorOnNondeterministicUpdate(false)
}

func (t *TaskParametersAssert) HasDefaultGeographyOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasGeographyOutputFormat(sdk.GeographyOutputFormatGeoJSON)
}

func (t *TaskParametersAssert) HasDefaultGeometryOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasGeometryOutputFormat(sdk.GeometryOutputFormatGeoJSON)
}

func (t *TaskParametersAssert) HasDefaultJdbcTreatTimestampNtzAsUtcValueExplicit() *TaskParametersAssert {
	return t.HasJdbcTreatTimestampNtzAsUtc(false)
}

func (t *TaskParametersAssert) HasDefaultJdbcUseSessionTimezoneValueExplicit() *TaskParametersAssert {
	return t.HasJdbcUseSessionTimezone(true)
}

func (t *TaskParametersAssert) HasDefaultJsonIndentValueExplicit() *TaskParametersAssert {
	return t.HasJsonIndent(2)
}

func (t *TaskParametersAssert) HasDefaultLockTimeoutValueExplicit() *TaskParametersAssert {
	return t.HasLockTimeout(43200)
}

func (t *TaskParametersAssert) HasDefaultLogLevelValueExplicit() *TaskParametersAssert {
	return t.HasLogLevel(sdk.LogLevelOff)
}

func (t *TaskParametersAssert) HasDefaultMultiStatementCountValueExplicit() *TaskParametersAssert {
	return t.HasMultiStatementCount(1)
}

func (t *TaskParametersAssert) HasDefaultNoorderSequenceAsDefaultValueExplicit() *TaskParametersAssert {
	return t.HasNoorderSequenceAsDefault(true)
}

func (t *TaskParametersAssert) HasDefaultOdbcTreatDecimalAsIntValueExplicit() *TaskParametersAssert {
	return t.HasOdbcTreatDecimalAsInt(false)
}

func (t *TaskParametersAssert) HasDefaultQueryTagValueExplicit() *TaskParametersAssert {
	return t.HasQueryTag("")
}

func (t *TaskParametersAssert) HasDefaultQuotedIdentifiersIgnoreCaseValueExplicit() *TaskParametersAssert {
	return t.HasQuotedIdentifiersIgnoreCase(false)
}

func (t *TaskParametersAssert) HasDefaultRowsPerResultsetValueExplicit() *TaskParametersAssert {
	return t.HasRowsPerResultset(0)
}

func (t *TaskParametersAssert) HasDefaultS3StageVpceDnsNameValueExplicit() *TaskParametersAssert {
	return t.HasS3StageVpceDnsName("")
}

func (t *TaskParametersAssert) HasDefaultSearchPathValueExplicit() *TaskParametersAssert {
	return t.HasSearchPath("$current, $public")
}

func (t *TaskParametersAssert) HasDefaultStatementQueuedTimeoutInSecondsValueExplicit() *TaskParametersAssert {
	return t.HasStatementQueuedTimeoutInSeconds(0)
}

func (t *TaskParametersAssert) HasDefaultStatementTimeoutInSecondsValueExplicit() *TaskParametersAssert {
	return t.HasStatementTimeoutInSeconds(172800)
}

func (t *TaskParametersAssert) HasDefaultStrictJsonOutputValueExplicit() *TaskParametersAssert {
	return t.HasStrictJsonOutput(false)
}

func (t *TaskParametersAssert) HasDefaultTimestampDayIsAlways24hValueExplicit() *TaskParametersAssert {
	return t.HasTimestampDayIsAlways24h(false)
}

func (t *TaskParametersAssert) HasDefaultTimestampInputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimestampInputFormat("AUTO")
}

func (t *TaskParametersAssert) HasDefaultTimestampLtzOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimestampLtzOutputFormat("")
}

func (t *TaskParametersAssert) HasDefaultTimestampNtzOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimestampNtzOutputFormat("YYYY-MM-DD HH24:MI:SS.FF3")
}

func (t *TaskParametersAssert) HasDefaultTimestampOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimestampOutputFormat("YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM")
}

func (t *TaskParametersAssert) HasDefaultTimestampTypeMappingValueExplicit() *TaskParametersAssert {
	return t.HasTimestampTypeMapping(sdk.TimestampTypeMappingNtz)
}

func (t *TaskParametersAssert) HasDefaultTimestampTzOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimestampTzOutputFormat("")
}

func (t *TaskParametersAssert) HasDefaultTimezoneValueExplicit() *TaskParametersAssert {
	return t.HasTimezone("America/Los_Angeles")
}

func (t *TaskParametersAssert) HasDefaultTimeInputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimeInputFormat("AUTO")
}

func (t *TaskParametersAssert) HasDefaultTimeOutputFormatValueExplicit() *TaskParametersAssert {
	return t.HasTimeOutputFormat("HH24:MI:SS")
}

func (t *TaskParametersAssert) HasDefaultTraceLevelValueExplicit() *TaskParametersAssert {
	return t.HasTraceLevel(sdk.TraceLevelOff)
}

func (t *TaskParametersAssert) HasDefaultTransactionAbortOnErrorValueExplicit() *TaskParametersAssert {
	return t.HasTransactionAbortOnError(false)
}

func (t *TaskParametersAssert) HasDefaultTransactionDefaultIsolationLevelValueExplicit() *TaskParametersAssert {
	return t.HasTransactionDefaultIsolationLevel(sdk.TransactionDefaultIsolationLevelReadCommitted)
}

func (t *TaskParametersAssert) HasDefaultTwoDigitCenturyStartValueExplicit() *TaskParametersAssert {
	return t.HasTwoDigitCenturyStart(1970)
}

func (t *TaskParametersAssert) HasDefaultUnsupportedDdlActionValueExplicit() *TaskParametersAssert {
	return t.HasUnsupportedDdlAction(sdk.UnsupportedDDLAction(strings.ToLower(string(sdk.UnsupportedDDLActionIgnore))))
}

func (t *TaskParametersAssert) HasDefaultUseCachedResultValueExplicit() *TaskParametersAssert {
	return t.HasUseCachedResult(true)
}

func (t *TaskParametersAssert) HasDefaultWeekOfYearPolicyValueExplicit() *TaskParametersAssert {
	return t.HasWeekOfYearPolicy(0)
}

func (t *TaskParametersAssert) HasDefaultWeekStartValueExplicit() *TaskParametersAssert {
	return t.HasWeekStart(0)
}
