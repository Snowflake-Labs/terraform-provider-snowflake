// Code generated by assertions generator; DO NOT EDIT.

package objectparametersassert

import (
	"testing"

	acc "github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type FunctionParametersAssert struct {
	*assert.SnowflakeParametersAssert[sdk.SchemaObjectIdentifierWithArguments]
}

func FunctionParameters(t *testing.T, id sdk.SchemaObjectIdentifierWithArguments) *FunctionParametersAssert {
	t.Helper()
	return &FunctionParametersAssert{
		assert.NewSnowflakeParametersAssertWithProvider(id, sdk.ObjectTypeFunction, acc.TestClient().Parameter.ShowFunctionParameters),
	}
}

func FunctionParametersPrefetched(t *testing.T, id sdk.SchemaObjectIdentifierWithArguments, parameters []*sdk.Parameter) *FunctionParametersAssert {
	t.Helper()
	return &FunctionParametersAssert{
		assert.NewSnowflakeParametersAssertWithParameters(id, sdk.ObjectTypeFunction, parameters),
	}
}

//////////////////////////////
// Generic parameter checks //
//////////////////////////////

func (f *FunctionParametersAssert) HasBoolParameterValue(parameterName sdk.FunctionParameter, expected bool) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterBoolValueSet(parameterName, expected))
	return f
}

func (f *FunctionParametersAssert) HasIntParameterValue(parameterName sdk.FunctionParameter, expected int) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterIntValueSet(parameterName, expected))
	return f
}

func (f *FunctionParametersAssert) HasStringParameterValue(parameterName sdk.FunctionParameter, expected string) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterValueSet(parameterName, expected))
	return f
}

func (f *FunctionParametersAssert) HasDefaultParameterValue(parameterName sdk.FunctionParameter) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterDefaultValueSet(parameterName))
	return f
}

func (f *FunctionParametersAssert) HasDefaultParameterValueOnLevel(parameterName sdk.FunctionParameter, parameterType sdk.ParameterType) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterDefaultValueOnLevelSet(parameterName, parameterType))
	return f
}

///////////////////////////////
// Aggregated generic checks //
///////////////////////////////

// HasAllDefaults checks if all the parameters:
// - have a default value by comparing current value of the sdk.Parameter with its default
// - have an expected level
func (f *FunctionParametersAssert) HasAllDefaults() *FunctionParametersAssert {
	return f.
		HasDefaultParameterValueOnLevel(sdk.FunctionParameterEnableConsoleOutput, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.FunctionParameterLogLevel, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.FunctionParameterMetricLevel, sdk.ParameterTypeSnowflakeDefault).
		HasDefaultParameterValueOnLevel(sdk.FunctionParameterTraceLevel, sdk.ParameterTypeSnowflakeDefault)
}

func (f *FunctionParametersAssert) HasAllDefaultsExplicit() *FunctionParametersAssert {
	return f.
		HasDefaultEnableConsoleOutputValueExplicit().
		HasDefaultLogLevelValueExplicit().
		HasDefaultMetricLevelValueExplicit().
		HasDefaultTraceLevelValueExplicit()
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (f *FunctionParametersAssert) HasEnableConsoleOutput(expected bool) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.FunctionParameterEnableConsoleOutput, expected))
	return f
}

func (f *FunctionParametersAssert) HasLogLevel(expected sdk.LogLevel) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.FunctionParameterLogLevel, expected))
	return f
}

func (f *FunctionParametersAssert) HasMetricLevel(expected sdk.MetricLevel) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.FunctionParameterMetricLevel, expected))
	return f
}

func (f *FunctionParametersAssert) HasTraceLevel(expected sdk.TraceLevel) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterStringUnderlyingValueSet(sdk.FunctionParameterTraceLevel, expected))
	return f
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (f *FunctionParametersAssert) HasEnableConsoleOutputLevel(expected sdk.ParameterType) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.FunctionParameterEnableConsoleOutput, expected))
	return f
}

func (f *FunctionParametersAssert) HasLogLevelLevel(expected sdk.ParameterType) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.FunctionParameterLogLevel, expected))
	return f
}

func (f *FunctionParametersAssert) HasMetricLevelLevel(expected sdk.ParameterType) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.FunctionParameterMetricLevel, expected))
	return f
}

func (f *FunctionParametersAssert) HasTraceLevelLevel(expected sdk.ParameterType) *FunctionParametersAssert {
	f.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.FunctionParameterTraceLevel, expected))
	return f
}

////////////////////////////////////
// Parameter default value checks //
////////////////////////////////////

func (f *FunctionParametersAssert) HasDefaultEnableConsoleOutputValue() *FunctionParametersAssert {
	return f.HasDefaultParameterValue(sdk.FunctionParameterEnableConsoleOutput)
}

func (f *FunctionParametersAssert) HasDefaultLogLevelValue() *FunctionParametersAssert {
	return f.HasDefaultParameterValue(sdk.FunctionParameterLogLevel)
}

func (f *FunctionParametersAssert) HasDefaultMetricLevelValue() *FunctionParametersAssert {
	return f.HasDefaultParameterValue(sdk.FunctionParameterMetricLevel)
}

func (f *FunctionParametersAssert) HasDefaultTraceLevelValue() *FunctionParametersAssert {
	return f.HasDefaultParameterValue(sdk.FunctionParameterTraceLevel)
}

/////////////////////////////////////////////
// Parameter explicit default value checks //
/////////////////////////////////////////////

func (f *FunctionParametersAssert) HasDefaultEnableConsoleOutputValueExplicit() *FunctionParametersAssert {
	return f.HasEnableConsoleOutput(false)
}

func (f *FunctionParametersAssert) HasDefaultLogLevelValueExplicit() *FunctionParametersAssert {
	return f.HasLogLevel(sdk.LogLevelOff)
}

func (f *FunctionParametersAssert) HasDefaultMetricLevelValueExplicit() *FunctionParametersAssert {
	return f.HasMetricLevel(sdk.MetricLevelNone)
}

func (f *FunctionParametersAssert) HasDefaultTraceLevelValueExplicit() *FunctionParametersAssert {
	return f.HasTraceLevel(sdk.TraceLevelOff)
}
