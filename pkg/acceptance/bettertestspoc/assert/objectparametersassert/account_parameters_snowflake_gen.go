// Code generated by assertions generator; DO NOT EDIT.

package objectparametersassert

import (
	"testing"

	acc "github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type AccountParametersAssert struct {
	*assert.SnowflakeParametersAssert[sdk.AccountObjectIdentifier]
}

func AccountParameters(t *testing.T, id sdk.AccountObjectIdentifier) *AccountParametersAssert {
	t.Helper()
	return &AccountParametersAssert{
		// Modified manually, don't override
		assert.NewSnowflakeParametersAssertWithProvider(id, sdk.ObjectTypeAccount, func(t *testing.T, identifier sdk.AccountObjectIdentifier) []*sdk.Parameter {
			return acc.TestClient().Parameter.ShowAccountParameters(t)
		}),
	}
}

func AccountParametersPrefetched(t *testing.T, id sdk.AccountObjectIdentifier, parameters []*sdk.Parameter) *AccountParametersAssert {
	t.Helper()
	return &AccountParametersAssert{
		assert.NewSnowflakeParametersAssertWithParameters(id, sdk.ObjectTypeAccount, parameters),
	}
}

//////////////////////////////
// Generic parameter checks //
//////////////////////////////

func (a *AccountParametersAssert) HasBoolParameterValue(parameterName sdk.AccountParameter, expected bool) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterBoolValueSet(parameterName, expected))
	return a
}

func (a *AccountParametersAssert) HasIntParameterValue(parameterName sdk.AccountParameter, expected int) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterIntValueSet(parameterName, expected))
	return a
}

func (a *AccountParametersAssert) HasStringParameterValue(parameterName sdk.AccountParameter, expected string) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterValueSet(parameterName, expected))
	return a
}

func (a *AccountParametersAssert) HasDefaultParameterValue(parameterName sdk.AccountParameter) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterDefaultValueSet(parameterName))
	return a
}

func (a *AccountParametersAssert) HasDefaultParameterValueOnLevel(parameterName sdk.AccountParameter, parameterType sdk.ParameterType) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterDefaultValueOnLevelSet(parameterName, parameterType))
	return a
}

///////////////////////////////
// Aggregated generic checks //
///////////////////////////////

// HasAllDefaults checks if all the parameters:
// - have a default value by comparing current value of the sdk.Parameter with its default
// - have an expected level
func (a *AccountParametersAssert) HasAllDefaults() *AccountParametersAssert {
	return a.
		HasDefaultParameterValueOnLevel(sdk.AccountParameterEnableUnredactedQuerySyntaxError, sdk.ParameterTypeSnowflakeDefault)
}

func (a *AccountParametersAssert) HasAllDefaultsExplicit() *AccountParametersAssert {
	return a.
		HasDefaultEnableUnredactedQuerySyntaxErrorValueExplicit()
}

////////////////////////////
// Parameter value checks //
////////////////////////////

func (a *AccountParametersAssert) HasEnableUnredactedQuerySyntaxError(expected bool) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterBoolValueSet(sdk.AccountParameterEnableUnredactedQuerySyntaxError, expected))
	return a
}

////////////////////////////
// Parameter level checks //
////////////////////////////

func (a *AccountParametersAssert) HasEnableUnredactedQuerySyntaxErrorLevel(expected sdk.ParameterType) *AccountParametersAssert {
	a.AddAssertion(assert.SnowflakeParameterLevelSet(sdk.AccountParameterEnableUnredactedQuerySyntaxError, expected))
	return a
}

////////////////////////////////////
// Parameter default value checks //
////////////////////////////////////

func (a *AccountParametersAssert) HasDefaultEnableUnredactedQuerySyntaxErrorValue() *AccountParametersAssert {
	return a.HasDefaultParameterValue(sdk.AccountParameterEnableUnredactedQuerySyntaxError)
}

/////////////////////////////////////////////
// Parameter explicit default value checks //
/////////////////////////////////////////////

func (a *AccountParametersAssert) HasDefaultEnableUnredactedQuerySyntaxErrorValueExplicit() *AccountParametersAssert {
	return a.HasEnableUnredactedQuerySyntaxError(false)
}
