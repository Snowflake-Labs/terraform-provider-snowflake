// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type RowAccessPolicyShowOutputAssert struct {
	*assert.ResourceAssert
}

func RowAccessPolicyShowOutput(t *testing.T, name string) *RowAccessPolicyShowOutputAssert {
	t.Helper()

	r := RowAccessPolicyShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	r.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &r
}

func ImportedRowAccessPolicyShowOutput(t *testing.T, id string) *RowAccessPolicyShowOutputAssert {
	t.Helper()

	r := RowAccessPolicyShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	r.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &r
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (r *RowAccessPolicyShowOutputAssert) HasCreatedOn(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasName(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasDatabaseName(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("database_name", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasSchemaName(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("schema_name", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasKind(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("kind", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasOwner(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("owner", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasComment(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasOptions(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("options", expected))
	return r
}

func (r *RowAccessPolicyShowOutputAssert) HasOwnerRoleType(expected string) *RowAccessPolicyShowOutputAssert {
	r.AddAssertion(assert.ResourceShowOutputValueSet("owner_role_type", expected))
	return r
}
