// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"
	"time"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type DatabaseShowOutputAssert struct {
	*assert.ResourceAssert
}

func DatabaseShowOutput(t *testing.T, name string) *DatabaseShowOutputAssert {
	t.Helper()

	databaseAssert := DatabaseShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	databaseAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &databaseAssert
}

func ImportedDatabaseShowOutput(t *testing.T, id string) *DatabaseShowOutputAssert {
	t.Helper()

	databaseAssert := DatabaseShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	databaseAssert.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &databaseAssert
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (d *DatabaseShowOutputAssert) HasCreatedOn(expected time.Time) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected.String()))
	return d
}

func (d *DatabaseShowOutputAssert) HasName(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasIsDefault(expected bool) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_default", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasIsCurrent(expected bool) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_current", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasOrigin(expected sdk.ExternalObjectIdentifier) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueSet("origin", expected.FullyQualifiedName()))
	return d
}

func (d *DatabaseShowOutputAssert) HasOwner(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("owner", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasComment(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasOptions(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("options", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasRetentionTime(expected int) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputIntValueSet("retention_time", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasResourceGroup(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("resource_group", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasDroppedOn(expected time.Time) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("dropped_on", expected.String()))
	return d
}

func (d *DatabaseShowOutputAssert) HasTransient(expected bool) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueSet("transient", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasKind(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("kind", expected))
	return d
}

func (d *DatabaseShowOutputAssert) HasOwnerRoleType(expected string) *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("owner_role_type", expected))
	return d
}

///////////////////////////////
// Attribute no value checks //
///////////////////////////////

func (d *DatabaseShowOutputAssert) HasNoCreatedOn() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("created_on"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoName() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("name"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoIsDefault() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_default"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoIsCurrent() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("is_current"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoOrigin() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputStringUnderlyingValueNotSet("origin"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoOwner() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("owner"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoComment() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("comment"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoOptions() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("options"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoRetentionTime() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputIntValueNotSet("retention_time"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoResourceGroup() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("resource_group"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoDroppedOn() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("dropped_on"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoTransient() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueNotSet("transient"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoKind() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("kind"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNoOwnerRoleType() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueNotSet("owner_role_type"))
	return d
}

////////////////////////////
// Attribute empty checks //
////////////////////////////

func (d *DatabaseShowOutputAssert) HasNameEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("name", ""))
	return d
}

func (d *DatabaseShowOutputAssert) HasOwnerEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("owner", ""))
	return d
}

func (d *DatabaseShowOutputAssert) HasCommentEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("comment", ""))
	return d
}

func (d *DatabaseShowOutputAssert) HasOptionsEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("options", ""))
	return d
}

func (d *DatabaseShowOutputAssert) HasResourceGroupEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("resource_group", ""))
	return d
}

func (d *DatabaseShowOutputAssert) HasKindEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("kind", ""))
	return d
}

func (d *DatabaseShowOutputAssert) HasOwnerRoleTypeEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("owner_role_type", ""))
	return d
}

///////////////////////////////
// Attribute presence checks //
///////////////////////////////

func (d *DatabaseShowOutputAssert) HasCreatedOnNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("created_on"))
	return d
}

func (d *DatabaseShowOutputAssert) HasNameNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("name"))
	return d
}

func (d *DatabaseShowOutputAssert) HasIsDefaultNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValuePresent("is_default"))
	return d
}

func (d *DatabaseShowOutputAssert) HasIsCurrentNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValuePresent("is_current"))
	return d
}

func (d *DatabaseShowOutputAssert) HasOriginNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputStringUnderlyingValuePresent("origin"))
	return d
}

func (d *DatabaseShowOutputAssert) HasOwnerNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("owner"))
	return d
}

func (d *DatabaseShowOutputAssert) HasCommentNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("comment"))
	return d
}

func (d *DatabaseShowOutputAssert) HasOptionsNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("options"))
	return d
}

func (d *DatabaseShowOutputAssert) HasRetentionTimeNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputIntValuePresent("retention_time"))
	return d
}

func (d *DatabaseShowOutputAssert) HasResourceGroupNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("resource_group"))
	return d
}

func (d *DatabaseShowOutputAssert) HasDroppedOnNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("dropped_on"))
	return d
}

func (d *DatabaseShowOutputAssert) HasTransientNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValuePresent("transient"))
	return d
}

func (d *DatabaseShowOutputAssert) HasKindNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("kind"))
	return d
}

func (d *DatabaseShowOutputAssert) HasOwnerRoleTypeNotEmpty() *DatabaseShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValuePresent("owner_role_type"))
	return d
}
