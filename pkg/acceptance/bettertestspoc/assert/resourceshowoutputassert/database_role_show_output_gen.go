// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type DatabaseRoleShowOutputAssert struct {
	*assert.ResourceAssert
}

func DatabaseRoleShowOutput(t *testing.T, name string) *DatabaseRoleShowOutputAssert {
	t.Helper()

	d := DatabaseRoleShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	d.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &d
}

func ImportedDatabaseRoleShowOutput(t *testing.T, id string) *DatabaseRoleShowOutputAssert {
	t.Helper()

	d := DatabaseRoleShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	d.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &d
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (d *DatabaseRoleShowOutputAssert) HasCreatedOn(expected string) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("created_on", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasName(expected string) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasDatabaseName(expected string) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("database_name", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasIsDefault(expected bool) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_default", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasIsCurrent(expected bool) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_current", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasIsInherited(expected bool) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputBoolValueSet("is_inherited", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasGrantedToRoles(expected int) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputIntValueSet("granted_to_roles", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasGrantedToDatabaseRoles(expected int) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputIntValueSet("granted_to_database_roles", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasGrantedDatabaseRoles(expected int) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputIntValueSet("granted_database_roles", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasOwner(expected string) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("owner", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasComment(expected string) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return d
}

func (d *DatabaseRoleShowOutputAssert) HasOwnerRoleType(expected string) *DatabaseRoleShowOutputAssert {
	d.AddAssertion(assert.ResourceShowOutputValueSet("owner_role_type", expected))
	return d
}
