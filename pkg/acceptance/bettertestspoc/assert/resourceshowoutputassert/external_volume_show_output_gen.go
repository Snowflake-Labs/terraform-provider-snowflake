// Code generated by assertions generator; DO NOT EDIT.

package resourceshowoutputassert

import (
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/assert"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

// to ensure sdk package is used
var _ = sdk.Object{}

type ExternalVolumeShowOutputAssert struct {
	*assert.ResourceAssert
}

func ExternalVolumeShowOutput(t *testing.T, name string) *ExternalVolumeShowOutputAssert {
	t.Helper()

	e := ExternalVolumeShowOutputAssert{
		ResourceAssert: assert.NewResourceAssert(name, "show_output"),
	}
	e.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &e
}

func ImportedExternalVolumeShowOutput(t *testing.T, id string) *ExternalVolumeShowOutputAssert {
	t.Helper()

	e := ExternalVolumeShowOutputAssert{
		ResourceAssert: assert.NewImportedResourceAssert(id, "show_output"),
	}
	e.AddAssertion(assert.ValueSet("show_output.#", "1"))
	return &e
}

////////////////////////////
// Attribute value checks //
////////////////////////////

func (e *ExternalVolumeShowOutputAssert) HasName(expected string) *ExternalVolumeShowOutputAssert {
	e.AddAssertion(assert.ResourceShowOutputValueSet("name", expected))
	return e
}

func (e *ExternalVolumeShowOutputAssert) HasAllowWrites(expected string) *ExternalVolumeShowOutputAssert {
	e.AddAssertion(assert.ResourceShowOutputValueSet("allow_writes", expected))
	return e
}

func (e *ExternalVolumeShowOutputAssert) HasComment(expected string) *ExternalVolumeShowOutputAssert {
	e.AddAssertion(assert.ResourceShowOutputValueSet("comment", expected))
	return e
}
