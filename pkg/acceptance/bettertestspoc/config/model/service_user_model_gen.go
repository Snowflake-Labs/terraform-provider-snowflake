// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type ServiceUserModel struct {
	AbortDetachedQuery                       tfconfig.Variable `json:"abort_detached_query,omitempty"`
	Autocommit                               tfconfig.Variable `json:"autocommit,omitempty"`
	BinaryInputFormat                        tfconfig.Variable `json:"binary_input_format,omitempty"`
	BinaryOutputFormat                       tfconfig.Variable `json:"binary_output_format,omitempty"`
	ClientMemoryLimit                        tfconfig.Variable `json:"client_memory_limit,omitempty"`
	ClientMetadataRequestUseConnectionCtx    tfconfig.Variable `json:"client_metadata_request_use_connection_ctx,omitempty"`
	ClientPrefetchThreads                    tfconfig.Variable `json:"client_prefetch_threads,omitempty"`
	ClientResultChunkSize                    tfconfig.Variable `json:"client_result_chunk_size,omitempty"`
	ClientResultColumnCaseInsensitive        tfconfig.Variable `json:"client_result_column_case_insensitive,omitempty"`
	ClientSessionKeepAlive                   tfconfig.Variable `json:"client_session_keep_alive,omitempty"`
	ClientSessionKeepAliveHeartbeatFrequency tfconfig.Variable `json:"client_session_keep_alive_heartbeat_frequency,omitempty"`
	ClientTimestampTypeMapping               tfconfig.Variable `json:"client_timestamp_type_mapping,omitempty"`
	Comment                                  tfconfig.Variable `json:"comment,omitempty"`
	DateInputFormat                          tfconfig.Variable `json:"date_input_format,omitempty"`
	DateOutputFormat                         tfconfig.Variable `json:"date_output_format,omitempty"`
	DaysToExpiry                             tfconfig.Variable `json:"days_to_expiry,omitempty"`
	DefaultNamespace                         tfconfig.Variable `json:"default_namespace,omitempty"`
	DefaultRole                              tfconfig.Variable `json:"default_role,omitempty"`
	DefaultSecondaryRolesOption              tfconfig.Variable `json:"default_secondary_roles_option,omitempty"`
	DefaultWarehouse                         tfconfig.Variable `json:"default_warehouse,omitempty"`
	Disabled                                 tfconfig.Variable `json:"disabled,omitempty"`
	DisplayName                              tfconfig.Variable `json:"display_name,omitempty"`
	Email                                    tfconfig.Variable `json:"email,omitempty"`
	EnableUnloadPhysicalTypeOptimization     tfconfig.Variable `json:"enable_unload_physical_type_optimization,omitempty"`
	EnableUnredactedQuerySyntaxError         tfconfig.Variable `json:"enable_unredacted_query_syntax_error,omitempty"`
	ErrorOnNondeterministicMerge             tfconfig.Variable `json:"error_on_nondeterministic_merge,omitempty"`
	ErrorOnNondeterministicUpdate            tfconfig.Variable `json:"error_on_nondeterministic_update,omitempty"`
	FullyQualifiedName                       tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	GeographyOutputFormat                    tfconfig.Variable `json:"geography_output_format,omitempty"`
	GeometryOutputFormat                     tfconfig.Variable `json:"geometry_output_format,omitempty"`
	JdbcTreatDecimalAsInt                    tfconfig.Variable `json:"jdbc_treat_decimal_as_int,omitempty"`
	JdbcTreatTimestampNtzAsUtc               tfconfig.Variable `json:"jdbc_treat_timestamp_ntz_as_utc,omitempty"`
	JdbcUseSessionTimezone                   tfconfig.Variable `json:"jdbc_use_session_timezone,omitempty"`
	JsonIndent                               tfconfig.Variable `json:"json_indent,omitempty"`
	LockTimeout                              tfconfig.Variable `json:"lock_timeout,omitempty"`
	LogLevel                                 tfconfig.Variable `json:"log_level,omitempty"`
	LoginName                                tfconfig.Variable `json:"login_name,omitempty"`
	MinsToUnlock                             tfconfig.Variable `json:"mins_to_unlock,omitempty"`
	MultiStatementCount                      tfconfig.Variable `json:"multi_statement_count,omitempty"`
	Name                                     tfconfig.Variable `json:"name,omitempty"`
	NetworkPolicy                            tfconfig.Variable `json:"network_policy,omitempty"`
	NoorderSequenceAsDefault                 tfconfig.Variable `json:"noorder_sequence_as_default,omitempty"`
	OdbcTreatDecimalAsInt                    tfconfig.Variable `json:"odbc_treat_decimal_as_int,omitempty"`
	PreventUnloadToInternalStages            tfconfig.Variable `json:"prevent_unload_to_internal_stages,omitempty"`
	QueryTag                                 tfconfig.Variable `json:"query_tag,omitempty"`
	QuotedIdentifiersIgnoreCase              tfconfig.Variable `json:"quoted_identifiers_ignore_case,omitempty"`
	RowsPerResultset                         tfconfig.Variable `json:"rows_per_resultset,omitempty"`
	RsaPublicKey                             tfconfig.Variable `json:"rsa_public_key,omitempty"`
	RsaPublicKey2                            tfconfig.Variable `json:"rsa_public_key_2,omitempty"`
	S3StageVpceDnsName                       tfconfig.Variable `json:"s3_stage_vpce_dns_name,omitempty"`
	SearchPath                               tfconfig.Variable `json:"search_path,omitempty"`
	SimulatedDataSharingConsumer             tfconfig.Variable `json:"simulated_data_sharing_consumer,omitempty"`
	StatementQueuedTimeoutInSeconds          tfconfig.Variable `json:"statement_queued_timeout_in_seconds,omitempty"`
	StatementTimeoutInSeconds                tfconfig.Variable `json:"statement_timeout_in_seconds,omitempty"`
	StrictJsonOutput                         tfconfig.Variable `json:"strict_json_output,omitempty"`
	TimeInputFormat                          tfconfig.Variable `json:"time_input_format,omitempty"`
	TimeOutputFormat                         tfconfig.Variable `json:"time_output_format,omitempty"`
	TimestampDayIsAlways24h                  tfconfig.Variable `json:"timestamp_day_is_always_24h,omitempty"`
	TimestampInputFormat                     tfconfig.Variable `json:"timestamp_input_format,omitempty"`
	TimestampLtzOutputFormat                 tfconfig.Variable `json:"timestamp_ltz_output_format,omitempty"`
	TimestampNtzOutputFormat                 tfconfig.Variable `json:"timestamp_ntz_output_format,omitempty"`
	TimestampOutputFormat                    tfconfig.Variable `json:"timestamp_output_format,omitempty"`
	TimestampTypeMapping                     tfconfig.Variable `json:"timestamp_type_mapping,omitempty"`
	TimestampTzOutputFormat                  tfconfig.Variable `json:"timestamp_tz_output_format,omitempty"`
	Timezone                                 tfconfig.Variable `json:"timezone,omitempty"`
	TraceLevel                               tfconfig.Variable `json:"trace_level,omitempty"`
	TransactionAbortOnError                  tfconfig.Variable `json:"transaction_abort_on_error,omitempty"`
	TransactionDefaultIsolationLevel         tfconfig.Variable `json:"transaction_default_isolation_level,omitempty"`
	TwoDigitCenturyStart                     tfconfig.Variable `json:"two_digit_century_start,omitempty"`
	UnsupportedDdlAction                     tfconfig.Variable `json:"unsupported_ddl_action,omitempty"`
	UseCachedResult                          tfconfig.Variable `json:"use_cached_result,omitempty"`
	UserType                                 tfconfig.Variable `json:"user_type,omitempty"`
	WeekOfYearPolicy                         tfconfig.Variable `json:"week_of_year_policy,omitempty"`
	WeekStart                                tfconfig.Variable `json:"week_start,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func ServiceUser(
	resourceName string,
	name string,
) *ServiceUserModel {
	s := &ServiceUserModel{ResourceModelMeta: config.Meta(resourceName, resources.ServiceUser)}
	s.WithName(name)
	return s
}

func ServiceUserWithDefaultMeta(
	name string,
) *ServiceUserModel {
	s := &ServiceUserModel{ResourceModelMeta: config.DefaultMeta(resources.ServiceUser)}
	s.WithName(name)
	return s
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (s *ServiceUserModel) WithAbortDetachedQuery(abortDetachedQuery bool) *ServiceUserModel {
	s.AbortDetachedQuery = tfconfig.BoolVariable(abortDetachedQuery)
	return s
}

func (s *ServiceUserModel) WithAutocommit(autocommit bool) *ServiceUserModel {
	s.Autocommit = tfconfig.BoolVariable(autocommit)
	return s
}

func (s *ServiceUserModel) WithBinaryInputFormat(binaryInputFormat string) *ServiceUserModel {
	s.BinaryInputFormat = tfconfig.StringVariable(binaryInputFormat)
	return s
}

func (s *ServiceUserModel) WithBinaryOutputFormat(binaryOutputFormat string) *ServiceUserModel {
	s.BinaryOutputFormat = tfconfig.StringVariable(binaryOutputFormat)
	return s
}

func (s *ServiceUserModel) WithClientMemoryLimit(clientMemoryLimit int) *ServiceUserModel {
	s.ClientMemoryLimit = tfconfig.IntegerVariable(clientMemoryLimit)
	return s
}

func (s *ServiceUserModel) WithClientMetadataRequestUseConnectionCtx(clientMetadataRequestUseConnectionCtx bool) *ServiceUserModel {
	s.ClientMetadataRequestUseConnectionCtx = tfconfig.BoolVariable(clientMetadataRequestUseConnectionCtx)
	return s
}

func (s *ServiceUserModel) WithClientPrefetchThreads(clientPrefetchThreads int) *ServiceUserModel {
	s.ClientPrefetchThreads = tfconfig.IntegerVariable(clientPrefetchThreads)
	return s
}

func (s *ServiceUserModel) WithClientResultChunkSize(clientResultChunkSize int) *ServiceUserModel {
	s.ClientResultChunkSize = tfconfig.IntegerVariable(clientResultChunkSize)
	return s
}

func (s *ServiceUserModel) WithClientResultColumnCaseInsensitive(clientResultColumnCaseInsensitive bool) *ServiceUserModel {
	s.ClientResultColumnCaseInsensitive = tfconfig.BoolVariable(clientResultColumnCaseInsensitive)
	return s
}

func (s *ServiceUserModel) WithClientSessionKeepAlive(clientSessionKeepAlive bool) *ServiceUserModel {
	s.ClientSessionKeepAlive = tfconfig.BoolVariable(clientSessionKeepAlive)
	return s
}

func (s *ServiceUserModel) WithClientSessionKeepAliveHeartbeatFrequency(clientSessionKeepAliveHeartbeatFrequency int) *ServiceUserModel {
	s.ClientSessionKeepAliveHeartbeatFrequency = tfconfig.IntegerVariable(clientSessionKeepAliveHeartbeatFrequency)
	return s
}

func (s *ServiceUserModel) WithClientTimestampTypeMapping(clientTimestampTypeMapping string) *ServiceUserModel {
	s.ClientTimestampTypeMapping = tfconfig.StringVariable(clientTimestampTypeMapping)
	return s
}

func (s *ServiceUserModel) WithComment(comment string) *ServiceUserModel {
	s.Comment = tfconfig.StringVariable(comment)
	return s
}

func (s *ServiceUserModel) WithDateInputFormat(dateInputFormat string) *ServiceUserModel {
	s.DateInputFormat = tfconfig.StringVariable(dateInputFormat)
	return s
}

func (s *ServiceUserModel) WithDateOutputFormat(dateOutputFormat string) *ServiceUserModel {
	s.DateOutputFormat = tfconfig.StringVariable(dateOutputFormat)
	return s
}

func (s *ServiceUserModel) WithDaysToExpiry(daysToExpiry int) *ServiceUserModel {
	s.DaysToExpiry = tfconfig.IntegerVariable(daysToExpiry)
	return s
}

func (s *ServiceUserModel) WithDefaultNamespace(defaultNamespace string) *ServiceUserModel {
	s.DefaultNamespace = tfconfig.StringVariable(defaultNamespace)
	return s
}

func (s *ServiceUserModel) WithDefaultRole(defaultRole string) *ServiceUserModel {
	s.DefaultRole = tfconfig.StringVariable(defaultRole)
	return s
}

func (s *ServiceUserModel) WithDefaultSecondaryRolesOption(defaultSecondaryRolesOption string) *ServiceUserModel {
	s.DefaultSecondaryRolesOption = tfconfig.StringVariable(defaultSecondaryRolesOption)
	return s
}

func (s *ServiceUserModel) WithDefaultWarehouse(defaultWarehouse string) *ServiceUserModel {
	s.DefaultWarehouse = tfconfig.StringVariable(defaultWarehouse)
	return s
}

func (s *ServiceUserModel) WithDisabled(disabled string) *ServiceUserModel {
	s.Disabled = tfconfig.StringVariable(disabled)
	return s
}

func (s *ServiceUserModel) WithDisplayName(displayName string) *ServiceUserModel {
	s.DisplayName = tfconfig.StringVariable(displayName)
	return s
}

func (s *ServiceUserModel) WithEmail(email string) *ServiceUserModel {
	s.Email = tfconfig.StringVariable(email)
	return s
}

func (s *ServiceUserModel) WithEnableUnloadPhysicalTypeOptimization(enableUnloadPhysicalTypeOptimization bool) *ServiceUserModel {
	s.EnableUnloadPhysicalTypeOptimization = tfconfig.BoolVariable(enableUnloadPhysicalTypeOptimization)
	return s
}

func (s *ServiceUserModel) WithEnableUnredactedQuerySyntaxError(enableUnredactedQuerySyntaxError bool) *ServiceUserModel {
	s.EnableUnredactedQuerySyntaxError = tfconfig.BoolVariable(enableUnredactedQuerySyntaxError)
	return s
}

func (s *ServiceUserModel) WithErrorOnNondeterministicMerge(errorOnNondeterministicMerge bool) *ServiceUserModel {
	s.ErrorOnNondeterministicMerge = tfconfig.BoolVariable(errorOnNondeterministicMerge)
	return s
}

func (s *ServiceUserModel) WithErrorOnNondeterministicUpdate(errorOnNondeterministicUpdate bool) *ServiceUserModel {
	s.ErrorOnNondeterministicUpdate = tfconfig.BoolVariable(errorOnNondeterministicUpdate)
	return s
}

func (s *ServiceUserModel) WithFullyQualifiedName(fullyQualifiedName string) *ServiceUserModel {
	s.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return s
}

func (s *ServiceUserModel) WithGeographyOutputFormat(geographyOutputFormat string) *ServiceUserModel {
	s.GeographyOutputFormat = tfconfig.StringVariable(geographyOutputFormat)
	return s
}

func (s *ServiceUserModel) WithGeometryOutputFormat(geometryOutputFormat string) *ServiceUserModel {
	s.GeometryOutputFormat = tfconfig.StringVariable(geometryOutputFormat)
	return s
}

func (s *ServiceUserModel) WithJdbcTreatDecimalAsInt(jdbcTreatDecimalAsInt bool) *ServiceUserModel {
	s.JdbcTreatDecimalAsInt = tfconfig.BoolVariable(jdbcTreatDecimalAsInt)
	return s
}

func (s *ServiceUserModel) WithJdbcTreatTimestampNtzAsUtc(jdbcTreatTimestampNtzAsUtc bool) *ServiceUserModel {
	s.JdbcTreatTimestampNtzAsUtc = tfconfig.BoolVariable(jdbcTreatTimestampNtzAsUtc)
	return s
}

func (s *ServiceUserModel) WithJdbcUseSessionTimezone(jdbcUseSessionTimezone bool) *ServiceUserModel {
	s.JdbcUseSessionTimezone = tfconfig.BoolVariable(jdbcUseSessionTimezone)
	return s
}

func (s *ServiceUserModel) WithJsonIndent(jsonIndent int) *ServiceUserModel {
	s.JsonIndent = tfconfig.IntegerVariable(jsonIndent)
	return s
}

func (s *ServiceUserModel) WithLockTimeout(lockTimeout int) *ServiceUserModel {
	s.LockTimeout = tfconfig.IntegerVariable(lockTimeout)
	return s
}

func (s *ServiceUserModel) WithLogLevel(logLevel string) *ServiceUserModel {
	s.LogLevel = tfconfig.StringVariable(logLevel)
	return s
}

func (s *ServiceUserModel) WithLoginName(loginName string) *ServiceUserModel {
	s.LoginName = tfconfig.StringVariable(loginName)
	return s
}

func (s *ServiceUserModel) WithMinsToUnlock(minsToUnlock int) *ServiceUserModel {
	s.MinsToUnlock = tfconfig.IntegerVariable(minsToUnlock)
	return s
}

func (s *ServiceUserModel) WithMultiStatementCount(multiStatementCount int) *ServiceUserModel {
	s.MultiStatementCount = tfconfig.IntegerVariable(multiStatementCount)
	return s
}

func (s *ServiceUserModel) WithName(name string) *ServiceUserModel {
	s.Name = tfconfig.StringVariable(name)
	return s
}

func (s *ServiceUserModel) WithNetworkPolicy(networkPolicy string) *ServiceUserModel {
	s.NetworkPolicy = tfconfig.StringVariable(networkPolicy)
	return s
}

func (s *ServiceUserModel) WithNoorderSequenceAsDefault(noorderSequenceAsDefault bool) *ServiceUserModel {
	s.NoorderSequenceAsDefault = tfconfig.BoolVariable(noorderSequenceAsDefault)
	return s
}

func (s *ServiceUserModel) WithOdbcTreatDecimalAsInt(odbcTreatDecimalAsInt bool) *ServiceUserModel {
	s.OdbcTreatDecimalAsInt = tfconfig.BoolVariable(odbcTreatDecimalAsInt)
	return s
}

func (s *ServiceUserModel) WithPreventUnloadToInternalStages(preventUnloadToInternalStages bool) *ServiceUserModel {
	s.PreventUnloadToInternalStages = tfconfig.BoolVariable(preventUnloadToInternalStages)
	return s
}

func (s *ServiceUserModel) WithQueryTag(queryTag string) *ServiceUserModel {
	s.QueryTag = tfconfig.StringVariable(queryTag)
	return s
}

func (s *ServiceUserModel) WithQuotedIdentifiersIgnoreCase(quotedIdentifiersIgnoreCase bool) *ServiceUserModel {
	s.QuotedIdentifiersIgnoreCase = tfconfig.BoolVariable(quotedIdentifiersIgnoreCase)
	return s
}

func (s *ServiceUserModel) WithRowsPerResultset(rowsPerResultset int) *ServiceUserModel {
	s.RowsPerResultset = tfconfig.IntegerVariable(rowsPerResultset)
	return s
}

func (s *ServiceUserModel) WithRsaPublicKey(rsaPublicKey string) *ServiceUserModel {
	s.RsaPublicKey = tfconfig.StringVariable(rsaPublicKey)
	return s
}

func (s *ServiceUserModel) WithRsaPublicKey2(rsaPublicKey2 string) *ServiceUserModel {
	s.RsaPublicKey2 = tfconfig.StringVariable(rsaPublicKey2)
	return s
}

func (s *ServiceUserModel) WithS3StageVpceDnsName(s3StageVpceDnsName string) *ServiceUserModel {
	s.S3StageVpceDnsName = tfconfig.StringVariable(s3StageVpceDnsName)
	return s
}

func (s *ServiceUserModel) WithSearchPath(searchPath string) *ServiceUserModel {
	s.SearchPath = tfconfig.StringVariable(searchPath)
	return s
}

func (s *ServiceUserModel) WithSimulatedDataSharingConsumer(simulatedDataSharingConsumer string) *ServiceUserModel {
	s.SimulatedDataSharingConsumer = tfconfig.StringVariable(simulatedDataSharingConsumer)
	return s
}

func (s *ServiceUserModel) WithStatementQueuedTimeoutInSeconds(statementQueuedTimeoutInSeconds int) *ServiceUserModel {
	s.StatementQueuedTimeoutInSeconds = tfconfig.IntegerVariable(statementQueuedTimeoutInSeconds)
	return s
}

func (s *ServiceUserModel) WithStatementTimeoutInSeconds(statementTimeoutInSeconds int) *ServiceUserModel {
	s.StatementTimeoutInSeconds = tfconfig.IntegerVariable(statementTimeoutInSeconds)
	return s
}

func (s *ServiceUserModel) WithStrictJsonOutput(strictJsonOutput bool) *ServiceUserModel {
	s.StrictJsonOutput = tfconfig.BoolVariable(strictJsonOutput)
	return s
}

func (s *ServiceUserModel) WithTimeInputFormat(timeInputFormat string) *ServiceUserModel {
	s.TimeInputFormat = tfconfig.StringVariable(timeInputFormat)
	return s
}

func (s *ServiceUserModel) WithTimeOutputFormat(timeOutputFormat string) *ServiceUserModel {
	s.TimeOutputFormat = tfconfig.StringVariable(timeOutputFormat)
	return s
}

func (s *ServiceUserModel) WithTimestampDayIsAlways24h(timestampDayIsAlways24h bool) *ServiceUserModel {
	s.TimestampDayIsAlways24h = tfconfig.BoolVariable(timestampDayIsAlways24h)
	return s
}

func (s *ServiceUserModel) WithTimestampInputFormat(timestampInputFormat string) *ServiceUserModel {
	s.TimestampInputFormat = tfconfig.StringVariable(timestampInputFormat)
	return s
}

func (s *ServiceUserModel) WithTimestampLtzOutputFormat(timestampLtzOutputFormat string) *ServiceUserModel {
	s.TimestampLtzOutputFormat = tfconfig.StringVariable(timestampLtzOutputFormat)
	return s
}

func (s *ServiceUserModel) WithTimestampNtzOutputFormat(timestampNtzOutputFormat string) *ServiceUserModel {
	s.TimestampNtzOutputFormat = tfconfig.StringVariable(timestampNtzOutputFormat)
	return s
}

func (s *ServiceUserModel) WithTimestampOutputFormat(timestampOutputFormat string) *ServiceUserModel {
	s.TimestampOutputFormat = tfconfig.StringVariable(timestampOutputFormat)
	return s
}

func (s *ServiceUserModel) WithTimestampTypeMapping(timestampTypeMapping string) *ServiceUserModel {
	s.TimestampTypeMapping = tfconfig.StringVariable(timestampTypeMapping)
	return s
}

func (s *ServiceUserModel) WithTimestampTzOutputFormat(timestampTzOutputFormat string) *ServiceUserModel {
	s.TimestampTzOutputFormat = tfconfig.StringVariable(timestampTzOutputFormat)
	return s
}

func (s *ServiceUserModel) WithTimezone(timezone string) *ServiceUserModel {
	s.Timezone = tfconfig.StringVariable(timezone)
	return s
}

func (s *ServiceUserModel) WithTraceLevel(traceLevel string) *ServiceUserModel {
	s.TraceLevel = tfconfig.StringVariable(traceLevel)
	return s
}

func (s *ServiceUserModel) WithTransactionAbortOnError(transactionAbortOnError bool) *ServiceUserModel {
	s.TransactionAbortOnError = tfconfig.BoolVariable(transactionAbortOnError)
	return s
}

func (s *ServiceUserModel) WithTransactionDefaultIsolationLevel(transactionDefaultIsolationLevel string) *ServiceUserModel {
	s.TransactionDefaultIsolationLevel = tfconfig.StringVariable(transactionDefaultIsolationLevel)
	return s
}

func (s *ServiceUserModel) WithTwoDigitCenturyStart(twoDigitCenturyStart int) *ServiceUserModel {
	s.TwoDigitCenturyStart = tfconfig.IntegerVariable(twoDigitCenturyStart)
	return s
}

func (s *ServiceUserModel) WithUnsupportedDdlAction(unsupportedDdlAction string) *ServiceUserModel {
	s.UnsupportedDdlAction = tfconfig.StringVariable(unsupportedDdlAction)
	return s
}

func (s *ServiceUserModel) WithUseCachedResult(useCachedResult bool) *ServiceUserModel {
	s.UseCachedResult = tfconfig.BoolVariable(useCachedResult)
	return s
}

func (s *ServiceUserModel) WithUserType(userType string) *ServiceUserModel {
	s.UserType = tfconfig.StringVariable(userType)
	return s
}

func (s *ServiceUserModel) WithWeekOfYearPolicy(weekOfYearPolicy int) *ServiceUserModel {
	s.WeekOfYearPolicy = tfconfig.IntegerVariable(weekOfYearPolicy)
	return s
}

func (s *ServiceUserModel) WithWeekStart(weekStart int) *ServiceUserModel {
	s.WeekStart = tfconfig.IntegerVariable(weekStart)
	return s
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (s *ServiceUserModel) WithAbortDetachedQueryValue(value tfconfig.Variable) *ServiceUserModel {
	s.AbortDetachedQuery = value
	return s
}

func (s *ServiceUserModel) WithAutocommitValue(value tfconfig.Variable) *ServiceUserModel {
	s.Autocommit = value
	return s
}

func (s *ServiceUserModel) WithBinaryInputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.BinaryInputFormat = value
	return s
}

func (s *ServiceUserModel) WithBinaryOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.BinaryOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithClientMemoryLimitValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientMemoryLimit = value
	return s
}

func (s *ServiceUserModel) WithClientMetadataRequestUseConnectionCtxValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientMetadataRequestUseConnectionCtx = value
	return s
}

func (s *ServiceUserModel) WithClientPrefetchThreadsValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientPrefetchThreads = value
	return s
}

func (s *ServiceUserModel) WithClientResultChunkSizeValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientResultChunkSize = value
	return s
}

func (s *ServiceUserModel) WithClientResultColumnCaseInsensitiveValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientResultColumnCaseInsensitive = value
	return s
}

func (s *ServiceUserModel) WithClientSessionKeepAliveValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientSessionKeepAlive = value
	return s
}

func (s *ServiceUserModel) WithClientSessionKeepAliveHeartbeatFrequencyValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientSessionKeepAliveHeartbeatFrequency = value
	return s
}

func (s *ServiceUserModel) WithClientTimestampTypeMappingValue(value tfconfig.Variable) *ServiceUserModel {
	s.ClientTimestampTypeMapping = value
	return s
}

func (s *ServiceUserModel) WithCommentValue(value tfconfig.Variable) *ServiceUserModel {
	s.Comment = value
	return s
}

func (s *ServiceUserModel) WithDateInputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.DateInputFormat = value
	return s
}

func (s *ServiceUserModel) WithDateOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.DateOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithDaysToExpiryValue(value tfconfig.Variable) *ServiceUserModel {
	s.DaysToExpiry = value
	return s
}

func (s *ServiceUserModel) WithDefaultNamespaceValue(value tfconfig.Variable) *ServiceUserModel {
	s.DefaultNamespace = value
	return s
}

func (s *ServiceUserModel) WithDefaultRoleValue(value tfconfig.Variable) *ServiceUserModel {
	s.DefaultRole = value
	return s
}

func (s *ServiceUserModel) WithDefaultSecondaryRolesOptionValue(value tfconfig.Variable) *ServiceUserModel {
	s.DefaultSecondaryRolesOption = value
	return s
}

func (s *ServiceUserModel) WithDefaultWarehouseValue(value tfconfig.Variable) *ServiceUserModel {
	s.DefaultWarehouse = value
	return s
}

func (s *ServiceUserModel) WithDisabledValue(value tfconfig.Variable) *ServiceUserModel {
	s.Disabled = value
	return s
}

func (s *ServiceUserModel) WithDisplayNameValue(value tfconfig.Variable) *ServiceUserModel {
	s.DisplayName = value
	return s
}

func (s *ServiceUserModel) WithEmailValue(value tfconfig.Variable) *ServiceUserModel {
	s.Email = value
	return s
}

func (s *ServiceUserModel) WithEnableUnloadPhysicalTypeOptimizationValue(value tfconfig.Variable) *ServiceUserModel {
	s.EnableUnloadPhysicalTypeOptimization = value
	return s
}

func (s *ServiceUserModel) WithEnableUnredactedQuerySyntaxErrorValue(value tfconfig.Variable) *ServiceUserModel {
	s.EnableUnredactedQuerySyntaxError = value
	return s
}

func (s *ServiceUserModel) WithErrorOnNondeterministicMergeValue(value tfconfig.Variable) *ServiceUserModel {
	s.ErrorOnNondeterministicMerge = value
	return s
}

func (s *ServiceUserModel) WithErrorOnNondeterministicUpdateValue(value tfconfig.Variable) *ServiceUserModel {
	s.ErrorOnNondeterministicUpdate = value
	return s
}

func (s *ServiceUserModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *ServiceUserModel {
	s.FullyQualifiedName = value
	return s
}

func (s *ServiceUserModel) WithGeographyOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.GeographyOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithGeometryOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.GeometryOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithJdbcTreatDecimalAsIntValue(value tfconfig.Variable) *ServiceUserModel {
	s.JdbcTreatDecimalAsInt = value
	return s
}

func (s *ServiceUserModel) WithJdbcTreatTimestampNtzAsUtcValue(value tfconfig.Variable) *ServiceUserModel {
	s.JdbcTreatTimestampNtzAsUtc = value
	return s
}

func (s *ServiceUserModel) WithJdbcUseSessionTimezoneValue(value tfconfig.Variable) *ServiceUserModel {
	s.JdbcUseSessionTimezone = value
	return s
}

func (s *ServiceUserModel) WithJsonIndentValue(value tfconfig.Variable) *ServiceUserModel {
	s.JsonIndent = value
	return s
}

func (s *ServiceUserModel) WithLockTimeoutValue(value tfconfig.Variable) *ServiceUserModel {
	s.LockTimeout = value
	return s
}

func (s *ServiceUserModel) WithLogLevelValue(value tfconfig.Variable) *ServiceUserModel {
	s.LogLevel = value
	return s
}

func (s *ServiceUserModel) WithLoginNameValue(value tfconfig.Variable) *ServiceUserModel {
	s.LoginName = value
	return s
}

func (s *ServiceUserModel) WithMinsToUnlockValue(value tfconfig.Variable) *ServiceUserModel {
	s.MinsToUnlock = value
	return s
}

func (s *ServiceUserModel) WithMultiStatementCountValue(value tfconfig.Variable) *ServiceUserModel {
	s.MultiStatementCount = value
	return s
}

func (s *ServiceUserModel) WithNameValue(value tfconfig.Variable) *ServiceUserModel {
	s.Name = value
	return s
}

func (s *ServiceUserModel) WithNetworkPolicyValue(value tfconfig.Variable) *ServiceUserModel {
	s.NetworkPolicy = value
	return s
}

func (s *ServiceUserModel) WithNoorderSequenceAsDefaultValue(value tfconfig.Variable) *ServiceUserModel {
	s.NoorderSequenceAsDefault = value
	return s
}

func (s *ServiceUserModel) WithOdbcTreatDecimalAsIntValue(value tfconfig.Variable) *ServiceUserModel {
	s.OdbcTreatDecimalAsInt = value
	return s
}

func (s *ServiceUserModel) WithPreventUnloadToInternalStagesValue(value tfconfig.Variable) *ServiceUserModel {
	s.PreventUnloadToInternalStages = value
	return s
}

func (s *ServiceUserModel) WithQueryTagValue(value tfconfig.Variable) *ServiceUserModel {
	s.QueryTag = value
	return s
}

func (s *ServiceUserModel) WithQuotedIdentifiersIgnoreCaseValue(value tfconfig.Variable) *ServiceUserModel {
	s.QuotedIdentifiersIgnoreCase = value
	return s
}

func (s *ServiceUserModel) WithRowsPerResultsetValue(value tfconfig.Variable) *ServiceUserModel {
	s.RowsPerResultset = value
	return s
}

func (s *ServiceUserModel) WithRsaPublicKeyValue(value tfconfig.Variable) *ServiceUserModel {
	s.RsaPublicKey = value
	return s
}

func (s *ServiceUserModel) WithRsaPublicKey2Value(value tfconfig.Variable) *ServiceUserModel {
	s.RsaPublicKey2 = value
	return s
}

func (s *ServiceUserModel) WithS3StageVpceDnsNameValue(value tfconfig.Variable) *ServiceUserModel {
	s.S3StageVpceDnsName = value
	return s
}

func (s *ServiceUserModel) WithSearchPathValue(value tfconfig.Variable) *ServiceUserModel {
	s.SearchPath = value
	return s
}

func (s *ServiceUserModel) WithSimulatedDataSharingConsumerValue(value tfconfig.Variable) *ServiceUserModel {
	s.SimulatedDataSharingConsumer = value
	return s
}

func (s *ServiceUserModel) WithStatementQueuedTimeoutInSecondsValue(value tfconfig.Variable) *ServiceUserModel {
	s.StatementQueuedTimeoutInSeconds = value
	return s
}

func (s *ServiceUserModel) WithStatementTimeoutInSecondsValue(value tfconfig.Variable) *ServiceUserModel {
	s.StatementTimeoutInSeconds = value
	return s
}

func (s *ServiceUserModel) WithStrictJsonOutputValue(value tfconfig.Variable) *ServiceUserModel {
	s.StrictJsonOutput = value
	return s
}

func (s *ServiceUserModel) WithTimeInputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimeInputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimeOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimeOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimestampDayIsAlways24hValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampDayIsAlways24h = value
	return s
}

func (s *ServiceUserModel) WithTimestampInputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampInputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimestampLtzOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampLtzOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimestampNtzOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampNtzOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimestampOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimestampTypeMappingValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampTypeMapping = value
	return s
}

func (s *ServiceUserModel) WithTimestampTzOutputFormatValue(value tfconfig.Variable) *ServiceUserModel {
	s.TimestampTzOutputFormat = value
	return s
}

func (s *ServiceUserModel) WithTimezoneValue(value tfconfig.Variable) *ServiceUserModel {
	s.Timezone = value
	return s
}

func (s *ServiceUserModel) WithTraceLevelValue(value tfconfig.Variable) *ServiceUserModel {
	s.TraceLevel = value
	return s
}

func (s *ServiceUserModel) WithTransactionAbortOnErrorValue(value tfconfig.Variable) *ServiceUserModel {
	s.TransactionAbortOnError = value
	return s
}

func (s *ServiceUserModel) WithTransactionDefaultIsolationLevelValue(value tfconfig.Variable) *ServiceUserModel {
	s.TransactionDefaultIsolationLevel = value
	return s
}

func (s *ServiceUserModel) WithTwoDigitCenturyStartValue(value tfconfig.Variable) *ServiceUserModel {
	s.TwoDigitCenturyStart = value
	return s
}

func (s *ServiceUserModel) WithUnsupportedDdlActionValue(value tfconfig.Variable) *ServiceUserModel {
	s.UnsupportedDdlAction = value
	return s
}

func (s *ServiceUserModel) WithUseCachedResultValue(value tfconfig.Variable) *ServiceUserModel {
	s.UseCachedResult = value
	return s
}

func (s *ServiceUserModel) WithUserTypeValue(value tfconfig.Variable) *ServiceUserModel {
	s.UserType = value
	return s
}

func (s *ServiceUserModel) WithWeekOfYearPolicyValue(value tfconfig.Variable) *ServiceUserModel {
	s.WeekOfYearPolicy = value
	return s
}

func (s *ServiceUserModel) WithWeekStartValue(value tfconfig.Variable) *ServiceUserModel {
	s.WeekStart = value
	return s
}
