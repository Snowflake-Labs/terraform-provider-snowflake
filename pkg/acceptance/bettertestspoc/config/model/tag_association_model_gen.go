// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
)

type TagAssociationModel struct {
	ObjectIdentifiers tfconfig.Variable `json:"object_identifiers,omitempty"`
	ObjectName        tfconfig.Variable `json:"object_name,omitempty"`
	ObjectType        tfconfig.Variable `json:"object_type,omitempty"`
	SkipValidation    tfconfig.Variable `json:"skip_validation,omitempty"`
	TagId             tfconfig.Variable `json:"tag_id,omitempty"`
	TagValue          tfconfig.Variable `json:"tag_value,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func TagAssociation(
	resourceName string,
	objectIdentifiers []sdk.ObjectIdentifier,
	objectType string,
	tagId string,
	tagValue string,
) *TagAssociationModel {
	t := &TagAssociationModel{ResourceModelMeta: config.Meta(resourceName, resources.TagAssociation)}
	t.WithObjectIdentifiers(objectIdentifiers...)
	t.WithObjectType(objectType)
	t.WithTagId(tagId)
	t.WithTagValue(tagValue)
	return t
}

func TagAssociationWithDefaultMeta(
	objectIdentifiers []sdk.ObjectIdentifier,
	objectType string,
	tagId string,
	tagValue string,
) *TagAssociationModel {
	t := &TagAssociationModel{ResourceModelMeta: config.DefaultMeta(resources.TagAssociation)}
	t.WithObjectIdentifiers(objectIdentifiers...)
	t.WithObjectType(objectType)
	t.WithTagId(tagId)
	t.WithTagValue(tagValue)
	return t
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

// object_identifiers attribute type is not yet supported, so WithObjectIdentifiers can't be generated

func (t *TagAssociationModel) WithObjectName(objectName string) *TagAssociationModel {
	t.ObjectName = tfconfig.StringVariable(objectName)
	return t
}

func (t *TagAssociationModel) WithObjectType(objectType string) *TagAssociationModel {
	t.ObjectType = tfconfig.StringVariable(objectType)
	return t
}

func (t *TagAssociationModel) WithSkipValidation(skipValidation bool) *TagAssociationModel {
	t.SkipValidation = tfconfig.BoolVariable(skipValidation)
	return t
}

func (t *TagAssociationModel) WithTagId(tagId string) *TagAssociationModel {
	t.TagId = tfconfig.StringVariable(tagId)
	return t
}

func (t *TagAssociationModel) WithTagValue(tagValue string) *TagAssociationModel {
	t.TagValue = tfconfig.StringVariable(tagValue)
	return t
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (t *TagAssociationModel) WithObjectIdentifiersValue(value tfconfig.Variable) *TagAssociationModel {
	t.ObjectIdentifiers = value
	return t
}

func (t *TagAssociationModel) WithObjectNameValue(value tfconfig.Variable) *TagAssociationModel {
	t.ObjectName = value
	return t
}

func (t *TagAssociationModel) WithObjectTypeValue(value tfconfig.Variable) *TagAssociationModel {
	t.ObjectType = value
	return t
}

func (t *TagAssociationModel) WithSkipValidationValue(value tfconfig.Variable) *TagAssociationModel {
	t.SkipValidation = value
	return t
}

func (t *TagAssociationModel) WithTagIdValue(value tfconfig.Variable) *TagAssociationModel {
	t.TagId = value
	return t
}

func (t *TagAssociationModel) WithTagValueValue(value tfconfig.Variable) *TagAssociationModel {
	t.TagValue = value
	return t
}
