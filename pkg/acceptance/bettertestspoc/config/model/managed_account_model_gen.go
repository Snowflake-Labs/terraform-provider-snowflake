// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type ManagedAccountModel struct {
	AdminName          tfconfig.Variable `json:"admin_name,omitempty"`
	AdminPassword      tfconfig.Variable `json:"admin_password,omitempty"`
	Cloud              tfconfig.Variable `json:"cloud,omitempty"`
	Comment            tfconfig.Variable `json:"comment,omitempty"`
	CreatedOn          tfconfig.Variable `json:"created_on,omitempty"`
	FullyQualifiedName tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	Locator            tfconfig.Variable `json:"locator,omitempty"`
	Name               tfconfig.Variable `json:"name,omitempty"`
	Region             tfconfig.Variable `json:"region,omitempty"`
	Type               tfconfig.Variable `json:"type,omitempty"`
	Url                tfconfig.Variable `json:"url,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func ManagedAccount(
	resourceName string,
	adminName string,
	adminPassword string,
	name string,
) *ManagedAccountModel {
	m := &ManagedAccountModel{ResourceModelMeta: config.Meta(resourceName, resources.ManagedAccount)}
	m.WithAdminName(adminName)
	m.WithAdminPassword(adminPassword)
	m.WithName(name)
	return m
}

func ManagedAccountWithDefaultMeta(
	adminName string,
	adminPassword string,
	name string,
) *ManagedAccountModel {
	m := &ManagedAccountModel{ResourceModelMeta: config.DefaultMeta(resources.ManagedAccount)}
	m.WithAdminName(adminName)
	m.WithAdminPassword(adminPassword)
	m.WithName(name)
	return m
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (m *ManagedAccountModel) MarshalJSON() ([]byte, error) {
	type Alias ManagedAccountModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(m),
		DependsOn: m.DependsOn(),
	})
}

func (m *ManagedAccountModel) WithDependsOn(values ...string) *ManagedAccountModel {
	m.SetDependsOn(values...)
	return m
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (m *ManagedAccountModel) WithAdminName(adminName string) *ManagedAccountModel {
	m.AdminName = tfconfig.StringVariable(adminName)
	return m
}

func (m *ManagedAccountModel) WithAdminPassword(adminPassword string) *ManagedAccountModel {
	m.AdminPassword = tfconfig.StringVariable(adminPassword)
	return m
}

func (m *ManagedAccountModel) WithCloud(cloud string) *ManagedAccountModel {
	m.Cloud = tfconfig.StringVariable(cloud)
	return m
}

func (m *ManagedAccountModel) WithComment(comment string) *ManagedAccountModel {
	m.Comment = tfconfig.StringVariable(comment)
	return m
}

func (m *ManagedAccountModel) WithCreatedOn(createdOn string) *ManagedAccountModel {
	m.CreatedOn = tfconfig.StringVariable(createdOn)
	return m
}

func (m *ManagedAccountModel) WithFullyQualifiedName(fullyQualifiedName string) *ManagedAccountModel {
	m.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return m
}

func (m *ManagedAccountModel) WithLocator(locator string) *ManagedAccountModel {
	m.Locator = tfconfig.StringVariable(locator)
	return m
}

func (m *ManagedAccountModel) WithName(name string) *ManagedAccountModel {
	m.Name = tfconfig.StringVariable(name)
	return m
}

func (m *ManagedAccountModel) WithRegion(region string) *ManagedAccountModel {
	m.Region = tfconfig.StringVariable(region)
	return m
}

func (m *ManagedAccountModel) WithType(_type string) *ManagedAccountModel {
	m.Type = tfconfig.StringVariable(_type)
	return m
}

func (m *ManagedAccountModel) WithUrl(url string) *ManagedAccountModel {
	m.Url = tfconfig.StringVariable(url)
	return m
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (m *ManagedAccountModel) WithAdminNameValue(value tfconfig.Variable) *ManagedAccountModel {
	m.AdminName = value
	return m
}

func (m *ManagedAccountModel) WithAdminPasswordValue(value tfconfig.Variable) *ManagedAccountModel {
	m.AdminPassword = value
	return m
}

func (m *ManagedAccountModel) WithCloudValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Cloud = value
	return m
}

func (m *ManagedAccountModel) WithCommentValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Comment = value
	return m
}

func (m *ManagedAccountModel) WithCreatedOnValue(value tfconfig.Variable) *ManagedAccountModel {
	m.CreatedOn = value
	return m
}

func (m *ManagedAccountModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *ManagedAccountModel {
	m.FullyQualifiedName = value
	return m
}

func (m *ManagedAccountModel) WithLocatorValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Locator = value
	return m
}

func (m *ManagedAccountModel) WithNameValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Name = value
	return m
}

func (m *ManagedAccountModel) WithRegionValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Region = value
	return m
}

func (m *ManagedAccountModel) WithTypeValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Type = value
	return m
}

func (m *ManagedAccountModel) WithUrlValue(value tfconfig.Variable) *ManagedAccountModel {
	m.Url = value
	return m
}
