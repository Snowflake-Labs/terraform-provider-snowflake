// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type ExternalOauthSecurityIntegrationModel struct {
	Comment                                    tfconfig.Variable `json:"comment,omitempty"`
	Enabled                                    tfconfig.Variable `json:"enabled,omitempty"`
	ExternalOauthAllowedRolesList              tfconfig.Variable `json:"external_oauth_allowed_roles_list,omitempty"`
	ExternalOauthAnyRoleMode                   tfconfig.Variable `json:"external_oauth_any_role_mode,omitempty"`
	ExternalOauthAudienceList                  tfconfig.Variable `json:"external_oauth_audience_list,omitempty"`
	ExternalOauthBlockedRolesList              tfconfig.Variable `json:"external_oauth_blocked_roles_list,omitempty"`
	ExternalOauthIssuer                        tfconfig.Variable `json:"external_oauth_issuer,omitempty"`
	ExternalOauthJwsKeysUrl                    tfconfig.Variable `json:"external_oauth_jws_keys_url,omitempty"`
	ExternalOauthRsaPublicKey                  tfconfig.Variable `json:"external_oauth_rsa_public_key,omitempty"`
	ExternalOauthRsaPublicKey2                 tfconfig.Variable `json:"external_oauth_rsa_public_key_2,omitempty"`
	ExternalOauthScopeDelimiter                tfconfig.Variable `json:"external_oauth_scope_delimiter,omitempty"`
	ExternalOauthScopeMappingAttribute         tfconfig.Variable `json:"external_oauth_scope_mapping_attribute,omitempty"`
	ExternalOauthSnowflakeUserMappingAttribute tfconfig.Variable `json:"external_oauth_snowflake_user_mapping_attribute,omitempty"`
	ExternalOauthTokenUserMappingClaim         tfconfig.Variable `json:"external_oauth_token_user_mapping_claim,omitempty"`
	ExternalOauthType                          tfconfig.Variable `json:"external_oauth_type,omitempty"`
	FullyQualifiedName                         tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	Name                                       tfconfig.Variable `json:"name,omitempty"`
	RelatedParameters                          tfconfig.Variable `json:"related_parameters,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func ExternalOauthSecurityIntegration(
	resourceName string,
	enabled bool,
	externalOauthIssuer string,
	externalOauthSnowflakeUserMappingAttribute string,
	externalOauthTokenUserMappingClaim,
	externalOauthType string,
	name string,
) *ExternalOauthSecurityIntegrationModel {
	e := &ExternalOauthSecurityIntegrationModel{ResourceModelMeta: config.Meta(resourceName, resources.ExternalOauthSecurityIntegration)}
	e.WithEnabled(enabled)
	e.WithExternalOauthIssuer(externalOauthIssuer)
	e.WithExternalOauthSnowflakeUserMappingAttribute(externalOauthSnowflakeUserMappingAttribute)
	e.WithExternalOauthTokenUserMappingClaim(externalOauthTokenUserMappingClaim)
	e.WithExternalOauthType(externalOauthType)
	e.WithName(name)
	return e
}

func ExternalOauthSecurityIntegrationWithDefaultMeta(
	enabled bool,
	externalOauthIssuer string,
	externalOauthSnowflakeUserMappingAttribute string,
	externalOauthTokenUserMappingClaim,
	externalOauthType string,
	name string,
) *ExternalOauthSecurityIntegrationModel {
	e := &ExternalOauthSecurityIntegrationModel{ResourceModelMeta: config.DefaultMeta(resources.ExternalOauthSecurityIntegration)}
	e.WithEnabled(enabled)
	e.WithExternalOauthIssuer(externalOauthIssuer)
	e.WithExternalOauthSnowflakeUserMappingAttribute(externalOauthSnowflakeUserMappingAttribute)
	e.WithExternalOauthTokenUserMappingClaim(externalOauthTokenUserMappingClaim)
	e.WithExternalOauthType(externalOauthType)
	e.WithName(name)
	return e
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (e *ExternalOauthSecurityIntegrationModel) MarshalJSON() ([]byte, error) {
	type Alias ExternalOauthSecurityIntegrationModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(e),
		DependsOn: e.DependsOn(),
	})
}

func (e *ExternalOauthSecurityIntegrationModel) WithDependsOn(values ...string) *ExternalOauthSecurityIntegrationModel {
	e.SetDependsOn(values...)
	return e
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (e *ExternalOauthSecurityIntegrationModel) WithComment(comment string) *ExternalOauthSecurityIntegrationModel {
	e.Comment = tfconfig.StringVariable(comment)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithEnabled(enabled bool) *ExternalOauthSecurityIntegrationModel {
	e.Enabled = tfconfig.BoolVariable(enabled)
	return e
}

// external_oauth_allowed_roles_list attribute type is not yet supported, so WithExternalOauthAllowedRolesList can't be generated

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthAnyRoleMode(externalOauthAnyRoleMode string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthAnyRoleMode = tfconfig.StringVariable(externalOauthAnyRoleMode)
	return e
}

// external_oauth_audience_list attribute type is not yet supported, so WithExternalOauthAudienceList can't be generated

// external_oauth_blocked_roles_list attribute type is not yet supported, so WithExternalOauthBlockedRolesList can't be generated

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthIssuer(externalOauthIssuer string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthIssuer = tfconfig.StringVariable(externalOauthIssuer)
	return e
}

// external_oauth_jws_keys_url attribute type is not yet supported, so WithExternalOauthJwsKeysUrl can't be generated

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthRsaPublicKey(externalOauthRsaPublicKey string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthRsaPublicKey = tfconfig.StringVariable(externalOauthRsaPublicKey)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthRsaPublicKey2(externalOauthRsaPublicKey2 string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthRsaPublicKey2 = tfconfig.StringVariable(externalOauthRsaPublicKey2)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthScopeDelimiter(externalOauthScopeDelimiter string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthScopeDelimiter = tfconfig.StringVariable(externalOauthScopeDelimiter)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthScopeMappingAttribute(externalOauthScopeMappingAttribute string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthScopeMappingAttribute = tfconfig.StringVariable(externalOauthScopeMappingAttribute)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthSnowflakeUserMappingAttribute(externalOauthSnowflakeUserMappingAttribute string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthSnowflakeUserMappingAttribute = tfconfig.StringVariable(externalOauthSnowflakeUserMappingAttribute)
	return e
}

// external_oauth_token_user_mapping_claim attribute type is not yet supported, so WithExternalOauthTokenUserMappingClaim can't be generated

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthType(externalOauthType string) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthType = tfconfig.StringVariable(externalOauthType)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithFullyQualifiedName(fullyQualifiedName string) *ExternalOauthSecurityIntegrationModel {
	e.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithName(name string) *ExternalOauthSecurityIntegrationModel {
	e.Name = tfconfig.StringVariable(name)
	return e
}

// related_parameters attribute type is not yet supported, so WithRelatedParameters can't be generated

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (e *ExternalOauthSecurityIntegrationModel) WithCommentValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.Comment = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithEnabledValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.Enabled = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthAllowedRolesListValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthAllowedRolesList = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthAnyRoleModeValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthAnyRoleMode = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthAudienceListValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthAudienceList = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthBlockedRolesListValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthBlockedRolesList = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthIssuerValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthIssuer = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthJwsKeysUrlValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthJwsKeysUrl = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthRsaPublicKeyValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthRsaPublicKey = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthRsaPublicKey2Value(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthRsaPublicKey2 = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthScopeDelimiterValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthScopeDelimiter = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthScopeMappingAttributeValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthScopeMappingAttribute = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthSnowflakeUserMappingAttributeValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthSnowflakeUserMappingAttribute = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthTokenUserMappingClaimValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthTokenUserMappingClaim = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithExternalOauthTypeValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.ExternalOauthType = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.FullyQualifiedName = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithNameValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.Name = value
	return e
}

func (e *ExternalOauthSecurityIntegrationModel) WithRelatedParametersValue(value tfconfig.Variable) *ExternalOauthSecurityIntegrationModel {
	e.RelatedParameters = value
	return e
}
