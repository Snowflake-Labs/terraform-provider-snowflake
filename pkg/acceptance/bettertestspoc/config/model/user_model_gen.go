// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type UserModel struct {
	Comment               tfconfig.Variable `json:"comment,omitempty"`
	DefaultNamespace      tfconfig.Variable `json:"default_namespace,omitempty"`
	DefaultRole           tfconfig.Variable `json:"default_role,omitempty"`
	DefaultSecondaryRoles tfconfig.Variable `json:"default_secondary_roles,omitempty"`
	DefaultWarehouse      tfconfig.Variable `json:"default_warehouse,omitempty"`
	Disabled              tfconfig.Variable `json:"disabled,omitempty"`
	DisplayName           tfconfig.Variable `json:"display_name,omitempty"`
	Email                 tfconfig.Variable `json:"email,omitempty"`
	FirstName             tfconfig.Variable `json:"first_name,omitempty"`
	HasRsaPublicKey       tfconfig.Variable `json:"has_rsa_public_key,omitempty"`
	LastName              tfconfig.Variable `json:"last_name,omitempty"`
	LoginName             tfconfig.Variable `json:"login_name,omitempty"`
	MustChangePassword    tfconfig.Variable `json:"must_change_password,omitempty"`
	Name                  tfconfig.Variable `json:"name,omitempty"`
	Password              tfconfig.Variable `json:"password,omitempty"`
	RsaPublicKey          tfconfig.Variable `json:"rsa_public_key,omitempty"`
	RsaPublicKey2         tfconfig.Variable `json:"rsa_public_key_2,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func User(
	resourceName string,
	name string,
) *UserModel {
	u := &UserModel{ResourceModelMeta: config.Meta(resourceName, resources.User)}
	u.WithName(name)
	return u
}

func UserWithDefaultMeta(
	name string,
) *UserModel {
	u := &UserModel{ResourceModelMeta: config.DefaultMeta(resources.User)}
	u.WithName(name)
	return u
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (u *UserModel) WithComment(comment string) *UserModel {
	u.Comment = tfconfig.StringVariable(comment)
	return u
}

func (u *UserModel) WithDefaultNamespace(defaultNamespace string) *UserModel {
	u.DefaultNamespace = tfconfig.StringVariable(defaultNamespace)
	return u
}

func (u *UserModel) WithDefaultRole(defaultRole string) *UserModel {
	u.DefaultRole = tfconfig.StringVariable(defaultRole)
	return u
}

// default_secondary_roles attribute type is not yet supported, so WithDefaultSecondaryRoles can't be generated

func (u *UserModel) WithDefaultWarehouse(defaultWarehouse string) *UserModel {
	u.DefaultWarehouse = tfconfig.StringVariable(defaultWarehouse)
	return u
}

func (u *UserModel) WithDisabled(disabled bool) *UserModel {
	u.Disabled = tfconfig.BoolVariable(disabled)
	return u
}

func (u *UserModel) WithDisplayName(displayName string) *UserModel {
	u.DisplayName = tfconfig.StringVariable(displayName)
	return u
}

func (u *UserModel) WithEmail(email string) *UserModel {
	u.Email = tfconfig.StringVariable(email)
	return u
}

func (u *UserModel) WithFirstName(firstName string) *UserModel {
	u.FirstName = tfconfig.StringVariable(firstName)
	return u
}

func (u *UserModel) WithHasRsaPublicKey(hasRsaPublicKey bool) *UserModel {
	u.HasRsaPublicKey = tfconfig.BoolVariable(hasRsaPublicKey)
	return u
}

func (u *UserModel) WithLastName(lastName string) *UserModel {
	u.LastName = tfconfig.StringVariable(lastName)
	return u
}

func (u *UserModel) WithLoginName(loginName string) *UserModel {
	u.LoginName = tfconfig.StringVariable(loginName)
	return u
}

func (u *UserModel) WithMustChangePassword(mustChangePassword bool) *UserModel {
	u.MustChangePassword = tfconfig.BoolVariable(mustChangePassword)
	return u
}

func (u *UserModel) WithName(name string) *UserModel {
	u.Name = tfconfig.StringVariable(name)
	return u
}

func (u *UserModel) WithPassword(password string) *UserModel {
	u.Password = tfconfig.StringVariable(password)
	return u
}

func (u *UserModel) WithRsaPublicKey(rsaPublicKey string) *UserModel {
	u.RsaPublicKey = tfconfig.StringVariable(rsaPublicKey)
	return u
}

func (u *UserModel) WithRsaPublicKey2(rsaPublicKey2 string) *UserModel {
	u.RsaPublicKey2 = tfconfig.StringVariable(rsaPublicKey2)
	return u
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (u *UserModel) WithCommentValue(value tfconfig.Variable) *UserModel {
	u.Comment = value
	return u
}

func (u *UserModel) WithDefaultNamespaceValue(value tfconfig.Variable) *UserModel {
	u.DefaultNamespace = value
	return u
}

func (u *UserModel) WithDefaultRoleValue(value tfconfig.Variable) *UserModel {
	u.DefaultRole = value
	return u
}

func (u *UserModel) WithDefaultSecondaryRolesValue(value tfconfig.Variable) *UserModel {
	u.DefaultSecondaryRoles = value
	return u
}

func (u *UserModel) WithDefaultWarehouseValue(value tfconfig.Variable) *UserModel {
	u.DefaultWarehouse = value
	return u
}

func (u *UserModel) WithDisabledValue(value tfconfig.Variable) *UserModel {
	u.Disabled = value
	return u
}

func (u *UserModel) WithDisplayNameValue(value tfconfig.Variable) *UserModel {
	u.DisplayName = value
	return u
}

func (u *UserModel) WithEmailValue(value tfconfig.Variable) *UserModel {
	u.Email = value
	return u
}

func (u *UserModel) WithFirstNameValue(value tfconfig.Variable) *UserModel {
	u.FirstName = value
	return u
}

func (u *UserModel) WithHasRsaPublicKeyValue(value tfconfig.Variable) *UserModel {
	u.HasRsaPublicKey = value
	return u
}

func (u *UserModel) WithLastNameValue(value tfconfig.Variable) *UserModel {
	u.LastName = value
	return u
}

func (u *UserModel) WithLoginNameValue(value tfconfig.Variable) *UserModel {
	u.LoginName = value
	return u
}

func (u *UserModel) WithMustChangePasswordValue(value tfconfig.Variable) *UserModel {
	u.MustChangePassword = value
	return u
}

func (u *UserModel) WithNameValue(value tfconfig.Variable) *UserModel {
	u.Name = value
	return u
}

func (u *UserModel) WithPasswordValue(value tfconfig.Variable) *UserModel {
	u.Password = value
	return u
}

func (u *UserModel) WithRsaPublicKeyValue(value tfconfig.Variable) *UserModel {
	u.RsaPublicKey = value
	return u
}

func (u *UserModel) WithRsaPublicKey2Value(value tfconfig.Variable) *UserModel {
	u.RsaPublicKey2 = value
	return u
}
