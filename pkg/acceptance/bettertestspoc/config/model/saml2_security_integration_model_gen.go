// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type Saml2SecurityIntegrationModel struct {
	AllowedEmailPatterns           tfconfig.Variable `json:"allowed_email_patterns,omitempty"`
	AllowedUserDomains             tfconfig.Variable `json:"allowed_user_domains,omitempty"`
	Comment                        tfconfig.Variable `json:"comment,omitempty"`
	Enabled                        tfconfig.Variable `json:"enabled,omitempty"`
	FullyQualifiedName             tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	Name                           tfconfig.Variable `json:"name,omitempty"`
	Saml2EnableSpInitiated         tfconfig.Variable `json:"saml2_enable_sp_initiated,omitempty"`
	Saml2ForceAuthn                tfconfig.Variable `json:"saml2_force_authn,omitempty"`
	Saml2Issuer                    tfconfig.Variable `json:"saml2_issuer,omitempty"`
	Saml2PostLogoutRedirectUrl     tfconfig.Variable `json:"saml2_post_logout_redirect_url,omitempty"`
	Saml2Provider                  tfconfig.Variable `json:"saml2_provider,omitempty"`
	Saml2RequestedNameidFormat     tfconfig.Variable `json:"saml2_requested_nameid_format,omitempty"`
	Saml2SignRequest               tfconfig.Variable `json:"saml2_sign_request,omitempty"`
	Saml2SnowflakeAcsUrl           tfconfig.Variable `json:"saml2_snowflake_acs_url,omitempty"`
	Saml2SnowflakeIssuerUrl        tfconfig.Variable `json:"saml2_snowflake_issuer_url,omitempty"`
	Saml2SpInitiatedLoginPageLabel tfconfig.Variable `json:"saml2_sp_initiated_login_page_label,omitempty"`
	Saml2SsoUrl                    tfconfig.Variable `json:"saml2_sso_url,omitempty"`
	Saml2X509Cert                  tfconfig.Variable `json:"saml2_x509_cert,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func Saml2SecurityIntegration(
	resourceName string,
	name string,
	saml2Issuer string,
	saml2Provider string,
	saml2SsoUrl string,
	saml2X509Cert string,
) *Saml2SecurityIntegrationModel {
	s := &Saml2SecurityIntegrationModel{ResourceModelMeta: config.Meta(resourceName, resources.Saml2SecurityIntegration)}
	s.WithName(name)
	s.WithSaml2Issuer(saml2Issuer)
	s.WithSaml2Provider(saml2Provider)
	s.WithSaml2SsoUrl(saml2SsoUrl)
	s.WithSaml2X509Cert(saml2X509Cert)
	return s
}

func Saml2SecurityIntegrationWithDefaultMeta(
	name string,
	saml2Issuer string,
	saml2Provider string,
	saml2SsoUrl string,
	saml2X509Cert string,
) *Saml2SecurityIntegrationModel {
	s := &Saml2SecurityIntegrationModel{ResourceModelMeta: config.DefaultMeta(resources.Saml2SecurityIntegration)}
	s.WithName(name)
	s.WithSaml2Issuer(saml2Issuer)
	s.WithSaml2Provider(saml2Provider)
	s.WithSaml2SsoUrl(saml2SsoUrl)
	s.WithSaml2X509Cert(saml2X509Cert)
	return s
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (s *Saml2SecurityIntegrationModel) MarshalJSON() ([]byte, error) {
	type Alias Saml2SecurityIntegrationModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(s),
		DependsOn: s.DependsOn(),
	})
}

func (s *Saml2SecurityIntegrationModel) WithDependsOn(values ...string) *Saml2SecurityIntegrationModel {
	s.SetDependsOn(values...)
	return s
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

// allowed_email_patterns attribute type is not yet supported, so WithAllowedEmailPatterns can't be generated

// allowed_user_domains attribute type is not yet supported, so WithAllowedUserDomains can't be generated

func (s *Saml2SecurityIntegrationModel) WithComment(comment string) *Saml2SecurityIntegrationModel {
	s.Comment = tfconfig.StringVariable(comment)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithEnabled(enabled string) *Saml2SecurityIntegrationModel {
	s.Enabled = tfconfig.StringVariable(enabled)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithFullyQualifiedName(fullyQualifiedName string) *Saml2SecurityIntegrationModel {
	s.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithName(name string) *Saml2SecurityIntegrationModel {
	s.Name = tfconfig.StringVariable(name)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2EnableSpInitiated(saml2EnableSpInitiated string) *Saml2SecurityIntegrationModel {
	s.Saml2EnableSpInitiated = tfconfig.StringVariable(saml2EnableSpInitiated)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2ForceAuthn(saml2ForceAuthn string) *Saml2SecurityIntegrationModel {
	s.Saml2ForceAuthn = tfconfig.StringVariable(saml2ForceAuthn)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2Issuer(saml2Issuer string) *Saml2SecurityIntegrationModel {
	s.Saml2Issuer = tfconfig.StringVariable(saml2Issuer)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2PostLogoutRedirectUrl(saml2PostLogoutRedirectUrl string) *Saml2SecurityIntegrationModel {
	s.Saml2PostLogoutRedirectUrl = tfconfig.StringVariable(saml2PostLogoutRedirectUrl)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2Provider(saml2Provider string) *Saml2SecurityIntegrationModel {
	s.Saml2Provider = tfconfig.StringVariable(saml2Provider)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2RequestedNameidFormat(saml2RequestedNameidFormat string) *Saml2SecurityIntegrationModel {
	s.Saml2RequestedNameidFormat = tfconfig.StringVariable(saml2RequestedNameidFormat)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SignRequest(saml2SignRequest string) *Saml2SecurityIntegrationModel {
	s.Saml2SignRequest = tfconfig.StringVariable(saml2SignRequest)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SnowflakeAcsUrl(saml2SnowflakeAcsUrl string) *Saml2SecurityIntegrationModel {
	s.Saml2SnowflakeAcsUrl = tfconfig.StringVariable(saml2SnowflakeAcsUrl)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SnowflakeIssuerUrl(saml2SnowflakeIssuerUrl string) *Saml2SecurityIntegrationModel {
	s.Saml2SnowflakeIssuerUrl = tfconfig.StringVariable(saml2SnowflakeIssuerUrl)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SpInitiatedLoginPageLabel(saml2SpInitiatedLoginPageLabel string) *Saml2SecurityIntegrationModel {
	s.Saml2SpInitiatedLoginPageLabel = tfconfig.StringVariable(saml2SpInitiatedLoginPageLabel)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SsoUrl(saml2SsoUrl string) *Saml2SecurityIntegrationModel {
	s.Saml2SsoUrl = tfconfig.StringVariable(saml2SsoUrl)
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2X509Cert(saml2X509Cert string) *Saml2SecurityIntegrationModel {
	s.Saml2X509Cert = config.MultilineWrapperVariable(saml2X509Cert)
	return s
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (s *Saml2SecurityIntegrationModel) WithAllowedEmailPatternsValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.AllowedEmailPatterns = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithAllowedUserDomainsValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.AllowedUserDomains = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithCommentValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Comment = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithEnabledValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Enabled = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.FullyQualifiedName = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithNameValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Name = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2EnableSpInitiatedValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2EnableSpInitiated = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2ForceAuthnValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2ForceAuthn = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2IssuerValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2Issuer = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2PostLogoutRedirectUrlValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2PostLogoutRedirectUrl = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2ProviderValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2Provider = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2RequestedNameidFormatValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2RequestedNameidFormat = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SignRequestValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2SignRequest = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SnowflakeAcsUrlValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2SnowflakeAcsUrl = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SnowflakeIssuerUrlValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2SnowflakeIssuerUrl = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SpInitiatedLoginPageLabelValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2SpInitiatedLoginPageLabel = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2SsoUrlValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2SsoUrl = value
	return s
}

func (s *Saml2SecurityIntegrationModel) WithSaml2X509CertValue(value tfconfig.Variable) *Saml2SecurityIntegrationModel {
	s.Saml2X509Cert = value
	return s
}
