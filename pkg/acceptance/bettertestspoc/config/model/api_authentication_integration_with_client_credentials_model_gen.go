// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type ApiAuthenticationIntegrationWithClientCredentialsModel struct {
	Comment                   tfconfig.Variable `json:"comment,omitempty"`
	Enabled                   tfconfig.Variable `json:"enabled,omitempty"`
	FullyQualifiedName        tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	Name                      tfconfig.Variable `json:"name,omitempty"`
	OauthAccessTokenValidity  tfconfig.Variable `json:"oauth_access_token_validity,omitempty"`
	OauthAllowedScopes        tfconfig.Variable `json:"oauth_allowed_scopes,omitempty"`
	OauthClientAuthMethod     tfconfig.Variable `json:"oauth_client_auth_method,omitempty"`
	OauthClientId             tfconfig.Variable `json:"oauth_client_id,omitempty"`
	OauthClientSecret         tfconfig.Variable `json:"oauth_client_secret,omitempty"`
	OauthRefreshTokenValidity tfconfig.Variable `json:"oauth_refresh_token_validity,omitempty"`
	OauthTokenEndpoint        tfconfig.Variable `json:"oauth_token_endpoint,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func ApiAuthenticationIntegrationWithClientCredentials(
	resourceName string,
	enabled bool,
	name string,
	oauthClientId string,
	oauthClientSecret string,
) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a := &ApiAuthenticationIntegrationWithClientCredentialsModel{ResourceModelMeta: config.Meta(resourceName, resources.ApiAuthenticationIntegrationWithClientCredentials)}
	a.WithEnabled(enabled)
	a.WithName(name)
	a.WithOauthClientId(oauthClientId)
	a.WithOauthClientSecret(oauthClientSecret)
	return a
}

func ApiAuthenticationIntegrationWithClientCredentialsWithDefaultMeta(
	enabled bool,
	name string,
	oauthClientId string,
	oauthClientSecret string,
) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a := &ApiAuthenticationIntegrationWithClientCredentialsModel{ResourceModelMeta: config.DefaultMeta(resources.ApiAuthenticationIntegrationWithClientCredentials)}
	a.WithEnabled(enabled)
	a.WithName(name)
	a.WithOauthClientId(oauthClientId)
	a.WithOauthClientSecret(oauthClientSecret)
	return a
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) MarshalJSON() ([]byte, error) {
	type Alias ApiAuthenticationIntegrationWithClientCredentialsModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(a),
		DependsOn: a.DependsOn(),
	})
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithDependsOn(values ...string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.SetDependsOn(values...)
	return a
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithComment(comment string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.Comment = tfconfig.StringVariable(comment)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithEnabled(enabled bool) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.Enabled = tfconfig.BoolVariable(enabled)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithFullyQualifiedName(fullyQualifiedName string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithName(name string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.Name = tfconfig.StringVariable(name)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthAccessTokenValidity(oauthAccessTokenValidity int) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthAccessTokenValidity = tfconfig.IntegerVariable(oauthAccessTokenValidity)
	return a
}

// oauth_allowed_scopes attribute type is not yet supported, so WithOauthAllowedScopes can't be generated

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthClientAuthMethod(oauthClientAuthMethod string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthClientAuthMethod = tfconfig.StringVariable(oauthClientAuthMethod)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthClientId(oauthClientId string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthClientId = tfconfig.StringVariable(oauthClientId)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthClientSecret(oauthClientSecret string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthClientSecret = tfconfig.StringVariable(oauthClientSecret)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthRefreshTokenValidity(oauthRefreshTokenValidity int) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthRefreshTokenValidity = tfconfig.IntegerVariable(oauthRefreshTokenValidity)
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthTokenEndpoint(oauthTokenEndpoint string) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthTokenEndpoint = tfconfig.StringVariable(oauthTokenEndpoint)
	return a
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithCommentValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.Comment = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithEnabledValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.Enabled = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.FullyQualifiedName = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithNameValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.Name = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthAccessTokenValidityValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthAccessTokenValidity = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthAllowedScopesValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthAllowedScopes = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthClientAuthMethodValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthClientAuthMethod = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthClientIdValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthClientId = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthClientSecretValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthClientSecret = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthRefreshTokenValidityValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthRefreshTokenValidity = value
	return a
}

func (a *ApiAuthenticationIntegrationWithClientCredentialsModel) WithOauthTokenEndpointValue(value tfconfig.Variable) *ApiAuthenticationIntegrationWithClientCredentialsModel {
	a.OauthTokenEndpoint = value
	return a
}
