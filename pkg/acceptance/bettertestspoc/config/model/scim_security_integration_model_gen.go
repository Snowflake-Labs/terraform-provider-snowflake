// Code generated by config model builder generator; DO NOT EDIT.

package model

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/resources"
)

type ScimSecurityIntegrationModel struct {
	Comment            tfconfig.Variable `json:"comment,omitempty"`
	Enabled            tfconfig.Variable `json:"enabled,omitempty"`
	FullyQualifiedName tfconfig.Variable `json:"fully_qualified_name,omitempty"`
	Name               tfconfig.Variable `json:"name,omitempty"`
	NetworkPolicy      tfconfig.Variable `json:"network_policy,omitempty"`
	RunAsRole          tfconfig.Variable `json:"run_as_role,omitempty"`
	ScimClient         tfconfig.Variable `json:"scim_client,omitempty"`
	SyncPassword       tfconfig.Variable `json:"sync_password,omitempty"`

	*config.ResourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func ScimSecurityIntegration(
	resourceName string,
	enabled bool,
	name string,
	runAsRole string,
	scimClient string,
) *ScimSecurityIntegrationModel {
	s := &ScimSecurityIntegrationModel{ResourceModelMeta: config.Meta(resourceName, resources.ScimSecurityIntegration)}
	s.WithEnabled(enabled)
	s.WithName(name)
	s.WithRunAsRole(runAsRole)
	s.WithScimClient(scimClient)
	return s
}

func ScimSecurityIntegrationWithDefaultMeta(
	enabled bool,
	name string,
	runAsRole string,
	scimClient string,
) *ScimSecurityIntegrationModel {
	s := &ScimSecurityIntegrationModel{ResourceModelMeta: config.DefaultMeta(resources.ScimSecurityIntegration)}
	s.WithEnabled(enabled)
	s.WithName(name)
	s.WithRunAsRole(runAsRole)
	s.WithScimClient(scimClient)
	return s
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (s *ScimSecurityIntegrationModel) MarshalJSON() ([]byte, error) {
	type Alias ScimSecurityIntegrationModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(s),
		DependsOn: s.DependsOn(),
	})
}

func (s *ScimSecurityIntegrationModel) WithDependsOn(values ...string) *ScimSecurityIntegrationModel {
	s.SetDependsOn(values...)
	return s
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (s *ScimSecurityIntegrationModel) WithComment(comment string) *ScimSecurityIntegrationModel {
	s.Comment = tfconfig.StringVariable(comment)
	return s
}

func (s *ScimSecurityIntegrationModel) WithEnabled(enabled bool) *ScimSecurityIntegrationModel {
	s.Enabled = tfconfig.BoolVariable(enabled)
	return s
}

func (s *ScimSecurityIntegrationModel) WithFullyQualifiedName(fullyQualifiedName string) *ScimSecurityIntegrationModel {
	s.FullyQualifiedName = tfconfig.StringVariable(fullyQualifiedName)
	return s
}

func (s *ScimSecurityIntegrationModel) WithName(name string) *ScimSecurityIntegrationModel {
	s.Name = tfconfig.StringVariable(name)
	return s
}

func (s *ScimSecurityIntegrationModel) WithNetworkPolicy(networkPolicy string) *ScimSecurityIntegrationModel {
	s.NetworkPolicy = tfconfig.StringVariable(networkPolicy)
	return s
}

func (s *ScimSecurityIntegrationModel) WithRunAsRole(runAsRole string) *ScimSecurityIntegrationModel {
	s.RunAsRole = tfconfig.StringVariable(runAsRole)
	return s
}

func (s *ScimSecurityIntegrationModel) WithScimClient(scimClient string) *ScimSecurityIntegrationModel {
	s.ScimClient = tfconfig.StringVariable(scimClient)
	return s
}

func (s *ScimSecurityIntegrationModel) WithSyncPassword(syncPassword string) *ScimSecurityIntegrationModel {
	s.SyncPassword = tfconfig.StringVariable(syncPassword)
	return s
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (s *ScimSecurityIntegrationModel) WithCommentValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.Comment = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithEnabledValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.Enabled = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithFullyQualifiedNameValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.FullyQualifiedName = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithNameValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.Name = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithNetworkPolicyValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.NetworkPolicy = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithRunAsRoleValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.RunAsRole = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithScimClientValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.ScimClient = value
	return s
}

func (s *ScimSecurityIntegrationModel) WithSyncPasswordValue(value tfconfig.Variable) *ScimSecurityIntegrationModel {
	s.SyncPassword = value
	return s
}
