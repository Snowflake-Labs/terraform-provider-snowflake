// Code generated by config model builder generator; DO NOT EDIT.

package datasourcemodel

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/datasources"
)

type SecurityIntegrationsModel struct {
	Like                 tfconfig.Variable `json:"like,omitempty"`
	SecurityIntegrations tfconfig.Variable `json:"security_integrations,omitempty"`
	WithDescribe         tfconfig.Variable `json:"with_describe,omitempty"`

	*config.DatasourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func SecurityIntegrations(
	datasourceName string,
) *SecurityIntegrationsModel {
	s := &SecurityIntegrationsModel{DatasourceModelMeta: config.DatasourceMeta(datasourceName, datasources.SecurityIntegrations)}
	return s
}

func SecurityIntegrationsWithDefaultMeta() *SecurityIntegrationsModel {
	s := &SecurityIntegrationsModel{DatasourceModelMeta: config.DatasourceDefaultMeta(datasources.SecurityIntegrations)}
	return s
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (s *SecurityIntegrationsModel) MarshalJSON() ([]byte, error) {
	type Alias SecurityIntegrationsModel
	return json.Marshal(&struct {
		*Alias
		DependsOn                 []string                      `json:"depends_on,omitempty"`
		SingleAttributeWorkaround config.ReplacementPlaceholder `json:"single_attribute_workaround,omitempty"`
	}{
		Alias:                     (*Alias)(s),
		DependsOn:                 s.DependsOn(),
		SingleAttributeWorkaround: config.SnowflakeProviderConfigSingleAttributeWorkaround,
	})
}

func (s *SecurityIntegrationsModel) WithDependsOn(values ...string) *SecurityIntegrationsModel {
	s.SetDependsOn(values...)
	return s
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

func (s *SecurityIntegrationsModel) WithLike(like string) *SecurityIntegrationsModel {
	s.Like = tfconfig.StringVariable(like)
	return s
}

// security_integrations attribute type is not yet supported, so WithSecurityIntegrations can't be generated

func (s *SecurityIntegrationsModel) WithWithDescribe(withDescribe bool) *SecurityIntegrationsModel {
	s.WithDescribe = tfconfig.BoolVariable(withDescribe)
	return s
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (s *SecurityIntegrationsModel) WithLikeValue(value tfconfig.Variable) *SecurityIntegrationsModel {
	s.Like = value
	return s
}

func (s *SecurityIntegrationsModel) WithSecurityIntegrationsValue(value tfconfig.Variable) *SecurityIntegrationsModel {
	s.SecurityIntegrations = value
	return s
}

func (s *SecurityIntegrationsModel) WithWithDescribeValue(value tfconfig.Variable) *SecurityIntegrationsModel {
	s.WithDescribe = value
	return s
}
