// Code generated by config model builder generator; DO NOT EDIT.

package datasourcemodel

import (
	"encoding/json"

	tfconfig "github.com/hashicorp/terraform-plugin-testing/config"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/config"
	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/provider/datasources"
)

type AccountsModel struct {
	Accounts tfconfig.Variable `json:"accounts,omitempty"`
	Pattern  tfconfig.Variable `json:"pattern,omitempty"`

	*config.DatasourceModelMeta
}

/////////////////////////////////////////////////
// Basic builders (resource name and required) //
/////////////////////////////////////////////////

func Accounts(
	datasourceName string,
) *AccountsModel {
	a := &AccountsModel{DatasourceModelMeta: config.DatasourceMeta(datasourceName, datasources.Accounts)}
	return a
}

func AccountsWithDefaultMeta() *AccountsModel {
	a := &AccountsModel{DatasourceModelMeta: config.DatasourceDefaultMeta(datasources.Accounts)}
	return a
}

///////////////////////////////////////////////////////
// set proper json marshalling and handle depends on //
///////////////////////////////////////////////////////

func (a *AccountsModel) MarshalJSON() ([]byte, error) {
	type Alias AccountsModel
	return json.Marshal(&struct {
		*Alias
		DependsOn []string `json:"depends_on,omitempty"`
	}{
		Alias:     (*Alias)(a),
		DependsOn: a.DependsOn(),
	})
}

func (a *AccountsModel) WithDependsOn(values ...string) *AccountsModel {
	a.SetDependsOn(values...)
	return a
}

/////////////////////////////////
// below all the proper values //
/////////////////////////////////

// accounts attribute type is not yet supported, so WithAccounts can't be generated

func (a *AccountsModel) WithPattern(pattern string) *AccountsModel {
	a.Pattern = tfconfig.StringVariable(pattern)
	return a
}

//////////////////////////////////////////
// below it's possible to set any value //
//////////////////////////////////////////

func (a *AccountsModel) WithAccountsValue(value tfconfig.Variable) *AccountsModel {
	a.Accounts = value
	return a
}

func (a *AccountsModel) WithPatternValue(value tfconfig.Variable) *AccountsModel {
	a.Pattern = value
	return a
}
