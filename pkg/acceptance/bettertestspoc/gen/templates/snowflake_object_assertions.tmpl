{{- /*gotype: github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/acceptance/bettertestspoc/gen.SnowflakeObjectAssertionsModel*/ -}}

{{ $assertName := .Name | printf "%sAssert" }}
{{ $sdkType := .SdkType }}
{{ $nameLowerCase := FirstLetterLowercase .Name }}
{{ $assertVar := FirstLetter $nameLowerCase }}
{{- range .Fields }}
    func ({{ $assertVar }} *{{ $assertName }}) Has{{ .Name }}(expected {{ TypeWithoutPointer .ConcreteType }}) *{{ $assertName }} {
    {{ $assertVar }}.assertions = append({{ $assertVar }}.assertions, func(t *testing.T, o *{{ $sdkType }}) error {
    t.Helper()
    {{ if .IsOriginalTypePointer -}}
        if o.{{ .Name }} == nil {
        return fmt.Errorf("expected {{ CamelToWords .Name }} to have value; got: nil")
        }
    {{ end -}}
    if {{ if .IsOriginalTypePointer }}*{{ end }}o.{{ .Name }} != expected {
    return fmt.Errorf("expected {{ CamelToWords .Name }}: %v; got: %v", expected, {{ if .IsOriginalTypePointer }}*{{ end }}o.{{ .Name }})
    }
    return nil
    })
    return {{ $assertVar }}
    }
{{ end }}
