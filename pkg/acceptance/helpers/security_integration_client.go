package helpers

import (
	"context"
	"testing"

	"github.com/Snowflake-Labs/terraform-provider-snowflake/pkg/sdk"
	"github.com/stretchr/testify/require"
)

type SecurityIntegrationClient struct {
	context *TestClientContext
	ids     *IdsGenerator
}

func NewSecurityIntegrationClient(context *TestClientContext, idsGenerator *IdsGenerator) *SecurityIntegrationClient {
	return &SecurityIntegrationClient{
		context: context,
		ids:     idsGenerator,
	}
}

func (c *SecurityIntegrationClient) client() sdk.SecurityIntegrations {
	return c.context.client.SecurityIntegrations
}

func (c *SecurityIntegrationClient) CreateSaml2(t *testing.T, id sdk.AccountObjectIdentifier) (*sdk.SecurityIntegration, func()) {
	t.Helper()
	// generated by `openssl req -x509 -new -newkey rsa:2048 -nodes -subj '/C=US/ST=California/L=San Francisco/O=Snowflake/CN=Snowflake' -out x509_key.pem -days 36500`
	x509 := `MIIDpzCCAo+gAwIBAgIUfg15OPhCN6lOivWEUoprAY27/5EwDQYJKoZIhvcNAQEL
		BQAwYjELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcM
		DVNhbiBGcmFuY2lzY28xEjAQBgNVBAoMCVNub3dmbGFrZTESMBAGA1UEAwwJU25v
		d2ZsYWtlMCAXDTI0MDUxMzA5MDM0NFoYDzIxMjQwNDE5MDkwMzQ0WjBiMQswCQYD
		VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5j
		aXNjbzESMBAGA1UECgwJU25vd2ZsYWtlMRIwEAYDVQQDDAlTbm93Zmxha2UwggEi
		MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrlsZAAOrljWC1eeAZb9rSGmRi
		HEozww9sb1/d2aQhi1j+RV+e1tuSiZ1fMTmtE/r67R2ryx8cStiqM88SM/M0UtWf
		jPzQNnQ/zuOu1wvRcVAQmyIIaDQU1V+OVv5vz9G0MNdHUeerRfVuse0i1IlyDtX/
		sV9lcgU4fIsdwyg0+tyvG8QA8R8mCajy2UDcQS/qh0NB/WGa08tmbedMO5FQ7Obz
		cBnksmyuq+l4AdbC5nDfK7BSo6CVPQBYLrmsTPKhU+ET50X4IN+nd3NmGlQH8kXo
		OjU39Udf31fXBDuVC7dfL2uBHAkn9bUV5LwF2bKMeNMRQOrCydgy7jvsO+HrAgMB
		AAGjUzBRMB0GA1UdDgQWBBT9mt6mehFcEHTTEQcTru4ync3T6DAfBgNVHSMEGDAW
		gBT9mt6mehFcEHTTEQcTru4ync3T6DAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3
		DQEBCwUAA4IBAQB177MgJXJAHXbaJ0/KVhWnDDNuZYG+OwzrGaVXiOhXShfxzENc
		cqsQB4DR7GEIrEicL2xQ23Kg3j7zASmo7T56CZiJ97jIiHDNrhGoAaW+aMhbp6wx
		WYxLNx9pbaPIORAJ1KEC3hvE4strHJPlQddCYSsXDhIOUTUd71JvR26DHiYQ82TO
		3wpXHhYdWYZbMjrDDAz0PwdTXyFBuTZxdlTFTxX2lXAE33OsdAFt+oi7JTQh248k
		0+lmQdhQrSrzhM3WwwuYTEKQVoa2xvWajgqbo7iu2iadWkrxUx/5bjFc5kXej6j7
		PhfG6C4ddUpAISJhmEViuXq4nVxe0Vk3Efo2
		`
	return c.CreateSaml2WithRequest(t, sdk.NewCreateSaml2SecurityIntegrationRequest(id, false, "test", "https://example.com", "Custom", x509))
}

func (c *SecurityIntegrationClient) CreateSaml2WithRequest(t *testing.T, request *sdk.CreateSaml2SecurityIntegrationRequest) (*sdk.SecurityIntegration, func()) {
	t.Helper()
	ctx := context.Background()

	err := c.client().CreateSaml2(ctx, request)
	require.NoError(t, err)

	si, err := c.client().ShowByID(ctx, request.GetName())
	require.NoError(t, err)

	return si, c.DropSecurityIntegrationFunc(t, request.GetName())
}

func (c *SecurityIntegrationClient) CreateScim(t *testing.T) (*sdk.SecurityIntegration, func()) {
	t.Helper()
	return c.CreateScimWithRequest(t, sdk.NewCreateScimSecurityIntegrationRequest(c.ids.RandomAccountObjectIdentifier(), false, sdk.ScimSecurityIntegrationScimClientGeneric, sdk.ScimSecurityIntegrationRunAsRoleGenericScimProvisioner))
}

func (c *SecurityIntegrationClient) CreateScimWithRequest(t *testing.T, request *sdk.CreateScimSecurityIntegrationRequest) (*sdk.SecurityIntegration, func()) {
	t.Helper()
	ctx := context.Background()

	err := c.client().CreateScim(ctx, request)
	require.NoError(t, err)

	si, err := c.client().ShowByID(ctx, request.GetName())
	require.NoError(t, err)

	return si, c.DropSecurityIntegrationFunc(t, request.GetName())
}

func (c *SecurityIntegrationClient) DropSecurityIntegrationFunc(t *testing.T, id sdk.AccountObjectIdentifier) func() {
	t.Helper()
	ctx := context.Background()

	return func() {
		err := c.client().Drop(ctx, sdk.NewDropSecurityIntegrationRequest(id).WithIfExists(sdk.Bool(true)))
		require.NoError(t, err)
	}
}
