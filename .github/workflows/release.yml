on:
  push:
    branches:
      - main
    tags:
      - '*'

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: configure-changelog
        with:
          result-encoding: string
          script: |
            const changelogTypes = [
              {type: "feat", section: "Features", hidden: false},
              {type: "chore", section: "Misc", hidden: false},
              {type: "fix", section: "BugFixes", hidden: false},
            ]

            return JSON.stringify(changelogTypes)
      # See https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
      # For why we need to generate a token and not use the default
      - name: Generate token
        id: generate_token
        uses: chanzuckerberg/github-app-token@v1.1.4
        with:
          app_id: ${{ secrets.CZI_RELEASE_PLEASE_APP_ID }}
          private_key: ${{ secrets.CZI_RELEASE_PLEASE_PK }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          # These secrets will need to be configured for the repository:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: release please
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          bump-minor-pre-major: true
          changelog-types: ${{ steps.configure-changelog.outputs.result }}
          token: ${{ steps.generate_token.outputs.token }}

      - uses: actions/checkout@v4
        # we need to fetch all history and tags
        # so we build the proper version
        with:
          fetch-depth: 0
        if: ${{ steps.release.outputs.release_created }}

      - uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
        if: ${{ steps.release.outputs.release_created }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        if: ${{ steps.release.outputs.release_created }}
