---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ if gt (len (split .Description "<deprecation>")) 1 -}}
{{ index (split .Description "<deprecation>") 1 | plainmarkdown | trimspace | prefixlines "  " }}
{{- else -}}
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
{{- end }}
---

~> **Note** This is a preview resource. It's ready for general use. In case of any errors, please file an issue in our GitHub repository.

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

{{ if .HasExample -}}
## Example Usage

{{ tffile (printf "examples/resources/%s/resource.tf" .Name)}}
{{- end }}

{{ .SchemaMarkdown | trimspace }}

## Known limitations
- Setting the `CREATE SNOWFLAKE.ML.ANOMALY_DETECTION` or `CREATE SNOWFLAKE.ML.FORECAST` privileges on schema results in a permadiff because of the probably incorrect Snowflake's behavior of `SHOW GRANTS ON <object_type> <object_name>`. More in the [comment](https://github.com/Snowflake-Labs/terraform-provider-snowflake/issues/2651#issuecomment-2022634952).

## Import

~> **Note** All the ..._name parts should be fully qualified names, e.g. for database object it is `"<database_name>"."<object_name>"`

Import is supported using the following syntax:

`terraform import "<share_name>|<privileges>|<grant_type>|<grant_identifier>"`

where:
- share_name - fully qualified identifier
- privileges - list of privileges, comma separated. See the available privileges for given object types: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
- grant_type - enum
- grant_identifier - fully qualified identifier

### OnDatabase
`terraform import "<share_name>|<privileges>|OnDatabase|<database_name>"`

### OnSchema
`terraform import "<share_name>|<privileges>|OnSchema|<database_name>.<schema_name>"`

### OnTable
`terraform import "<share_name>|<privileges>|OnTable|<database_name>.<schema_name>.<table_name>"`

### OnSchema
`terraform import "<share_name>|<privileges>|OnAllTablesInSchema|<database_name>.<schema_name>"`

### OnTag
`terraform import "<share_name>|<privileges>|OnTag|<database_name>.<schema_name>.<tag_name>"`

### OnView
`terraform import "<share_name>|<privileges>|OnView|<database_name>.<schema_name>.<view_name>"`
