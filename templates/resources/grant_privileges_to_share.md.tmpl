---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ if gt (len (split .Description "<deprecation>")) 1 -}}
{{ index (split .Description "<deprecation>") 1 | plainmarkdown | trimspace | prefixlines "  " }}
{{- else -}}
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
{{- end }}
---

!> **V1 release candidate** This resource was reworked and is a release candidate for the V1. We do not expect significant changes in it before the V1. We will welcome any feedback and adjust the resource if needed. Any errors reported will be resolved with a higher priority. We encourage checking this resource out before the V1 release. To migrate from older grant resources please follow the [migration guide](https://github.com/Snowflake-Labs/terraform-provider-snowflake/blob/main/MIGRATION_GUIDE.md#migration-from-old-grant-resources-to-new-ones).

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

{{ if .HasExample -}}
## Example Usage

{{ tffile (printf "examples/resources/%s/resource.tf" .Name)}}
-> **Note** Instead of using fully_qualified_name, you can reference objects managed outside Terraform by constructing a correct ID, consult [identifiers guide](https://registry.terraform.io/providers/Snowflake-Labs/snowflake/latest/docs/guides/identifiers#new-computed-fully-qualified-name-field-in-resources).
<!-- TODO(SNOW-1634854): include an example showing both methods-->

{{- end }}

{{ .SchemaMarkdown | trimspace }}

## Known limitations
- Setting the `CREATE SNOWFLAKE.ML.ANOMALY_DETECTION` or `CREATE SNOWFLAKE.ML.FORECAST` privileges on schema results in a permadiff because of the probably incorrect Snowflake's behavior of `SHOW GRANTS ON <object_type> <object_name>`. More in the [comment](https://github.com/Snowflake-Labs/terraform-provider-snowflake/issues/2651#issuecomment-2022634952).

## Import

~> **Note** All the ..._name parts should be fully qualified names, e.g. for database object it is `"<database_name>"."<object_name>"`

Import is supported using the following syntax:

`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|<grant_type>|<grant_identifier>'`

where:
- share_name - fully qualified identifier
- privileges - list of privileges, comma separated. See the available privileges for given object types: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
- grant_type - enum
- grant_identifier - fully qualified identifier

### OnDatabase
`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|OnDatabase|<database_name>'`

### OnSchema
`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|OnSchema|<database_name>.<schema_name>'`

### OnTable
`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|OnTable|<database_name>.<schema_name>.<table_name>'`

### OnSchema
`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|OnAllTablesInSchema|<database_name>.<schema_name>'`

### OnTag
`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|OnTag|<database_name>.<schema_name>.<tag_name>'`

### OnView
`terraform import snowflake_grant_privileges_to_share.example '<share_name>|<privileges>|OnView|<database_name>.<schema_name>.<view_name>'`
