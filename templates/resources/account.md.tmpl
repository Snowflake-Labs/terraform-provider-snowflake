---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: "Stable"
description: |-
{{ if gt (len (split .Description "<deprecation>")) 1 -}}
{{ index (split .Description "<deprecation>") 1 | plainmarkdown | trimspace | prefixlines "  " }}
{{- else -}}
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
{{- end }}
---

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

~> **Note** To use this resource you have to use an account with a privilege to use the ORGADMIN role.

~> **Note** Changes for the following fields won't be detected: `admin_name`, `admin_password`, `admin_rsa_public_key`, `admin_user_type`, `first_name`, `last_name`, `email`, `must_change_password`. This is because these fields only supply initial values for creating the admin user. Once the account is created, the admin user becomes an independent entity. Modifying users from the account resource is challenging since it requires logging into that account. This would require the account resource logging into the account it created to read or alter admin user properties, which is impractical, because any external change to the admin user would disrupt the change detection anyway.

~> **Note** During the import, when Terraform detects changes on a field with `ForceNew`, it will try to recreate the resource. Due to Terraform limitations, `grace_period_in_days` is not set at that moment. This means that Terraform will try to drop the account with the empty grace period which is required, and fail.
Before importing, ensure if the resource configuration matches the actual state.
See more in our [Resource Migration guide](../guides/resource_migration#312-terraform-import) and [issue #3390](https://github.com/snowflakedb/terraform-provider-snowflake/issues/3390).

{{ if .HasExample -}}
## Example Usage

{{ tffile .ExampleFile }}
-> **Note** Instead of using fully_qualified_name, you can reference objects managed outside Terraform by constructing a correct ID, consult [identifiers guide](../guides/identifiers_rework_design_decisions#new-computed-fully-qualified-name-field-in-resources).
<!-- TODO(SNOW-1634854): include an example showing both methods-->

{{- end }}

-> **Note** If a field has a default value, it is shown next to the type in the schema.

{{ .SchemaMarkdown | trimspace }}
{{- if .HasImport }}

## Import

Import is supported using the following syntax:

{{ codefile "shell" (printf "examples/resources/%s/import.sh" .Name)}}
{{- end }}
